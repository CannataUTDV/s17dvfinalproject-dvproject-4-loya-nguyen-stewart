<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0327.0758                               -->
<workbook source-build='10.1.7 (10100.17.0327.0758)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='fatal-police-shootings-cleaned+ (Multiple Connections)' inline='true' name='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='&quot;robin-stewart/s-17-dv-final-project&quot;' name='webdata-direct.1f1okcb0dpbleq18sq65w1w9daza'>
            <connection APIVersion='' authType='none' authentication='no' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;robin-stewart/s-17-dv-final-project&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OnJvYmluLXN0ZXdhcnQiLCJpc3MiOiJhZ2VudDpyb2Jpbi1zdGV3YXJ0OjpiMjlmYzcwMy0yYmZhLTQ3NzktYmJmYi04YTNhNjdjOWI1NmEiLCJpYXQiOjE0ODQ2OTcyNzMsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.s0t13SAi0Pn7jm5cCWfzzb0n3MRDnpi2GGIQCH8soOt5OICuSyDGfpZNsQKHxKAOA8gOzU5PGKwokczVk_S4Zw&quot;}' connectionName='&quot;robin-stewart/s-17-dv-final-project&quot;' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
          <named-connection caption='census-income-data' name='textscan.1oggmmd19n1da814qil7d1a271xf'>
            <connection class='textscan' directory='/Users/robinstewart/Documents/Data Visualization (Spring 2017)/Projects/Final Project/01 Data' filename='census-income-data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[fatal-police-shootings-cleaned].[v_8]' />
              <expression op='[census-income-data.csv].[State]' />
            </expression>
          </clause>
          <relation connection='webdata-direct.1f1okcb0dpbleq18sq65w1w9daza' name='fatal-police-shootings-cleaned' table='[fatalpoliceshootingscleaned]' type='table' />
          <relation connection='textscan.1oggmmd19n1da814qil7d1a271xf' name='census-income-data.csv' table='[census-income-data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='real' name='GINI' ordinal='2' />
              <column datatype='integer' name='Per_Capita_Income' ordinal='3' />
              <column datatype='integer' name='Median_Family_Income' ordinal='4' />
              <column datatype='integer' name='Median_Non_Family_Income' ordinal='5' />
              <column datatype='integer' name='Median_Income' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <caption>id</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <caption>date</caption>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>manner_of_death</remote-alias>
            <ordinal>2</ordinal>
            <caption>manner_of_death</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>armed</remote-alias>
            <ordinal>3</ordinal>
            <caption>armed</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>4</ordinal>
            <caption>age</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>5</ordinal>
            <caption>gender</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>race</remote-alias>
            <ordinal>6</ordinal>
            <caption>race</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>7</ordinal>
            <caption>city</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>8</ordinal>
            <caption>state</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>4</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>signs_of_mental_illness</remote-alias>
            <ordinal>9</ordinal>
            <caption>signs_of_mental_illness</caption>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>threat_level</remote-alias>
            <ordinal>10</ordinal>
            <caption>threat_level</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>flee</remote-alias>
            <ordinal>11</ordinal>
            <caption>flee</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_12</remote-name>
            <remote-type>4</remote-type>
            <local-name>[v_12]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>body_camera</remote-alias>
            <ordinal>12</ordinal>
            <caption>body_camera</caption>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[census-income-data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[census-income-data.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GINI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GINI]</local-name>
            <parent-name>[census-income-data.csv]</parent-name>
            <remote-alias>GINI</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per_Capita_Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per_Capita_Income]</local-name>
            <parent-name>[census-income-data.csv]</parent-name>
            <remote-alias>Per_Capita_Income</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median_Family_Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median_Family_Income]</local-name>
            <parent-name>[census-income-data.csv]</parent-name>
            <remote-alias>Median_Family_Income</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median_Non_Family_Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median_Non_Family_Income]</local-name>
            <parent-name>[census-income-data.csv]</parent-name>
            <remote-alias>Median_Non_Family_Income</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median_Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median_Income]</local-name>
            <parent-name>[census-income-data.csv]</parent-name>
            <remote-alias>Median_Income</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[census-income-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Gini' datatype='real' name='[GINI]' role='measure' type='quantitative' />
      <column caption='Median Family Income' datatype='integer' name='[Median_Family_Income]' role='measure' type='quantitative' />
      <column caption='Median Income' datatype='integer' name='[Median_Income]' role='measure' type='quantitative' />
      <column caption='Median Non Family Income' datatype='integer' name='[Median_Non_Family_Income]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Per Capita Income (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[Per_Capita_Income]' peg='0' size='1000' />
      </column>
      <column caption='Per Capita Income' datatype='integer' name='[Per_Capita_Income]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='id' datatype='integer' name='[v_0]' role='measure' type='quantitative' />
      <column caption='threat_level' datatype='string' name='[v_10]' role='dimension' type='nominal' />
      <column caption='Fleeing' datatype='string' name='[v_11]' role='dimension' type='nominal' />
      <column caption='body_camera' datatype='boolean' name='[v_12]' role='dimension' type='nominal' />
      <column caption='date' datatype='date' datatype-customized='true' name='[v_1]' role='dimension' type='ordinal' />
      <column caption='manner_of_death' datatype='string' name='[v_2]' role='dimension' type='nominal' />
      <column caption='armed' datatype='string' name='[v_3]' role='dimension' type='nominal' />
      <column caption='age' datatype='integer' name='[v_4]' role='measure' type='quantitative' />
      <column caption='gender' datatype='string' name='[v_5]' role='dimension' type='nominal' />
      <column caption='race' datatype='string' name='[v_6]' role='dimension' type='nominal' />
      <column caption='city' datatype='string' name='[v_7]' role='dimension' type='nominal' />
      <column caption='state' datatype='string' name='[v_8]' role='dimension' type='nominal' />
      <column caption='signs_of_mental_illness' datatype='boolean' name='[v_9]' role='dimension' type='nominal' />
      <column-instance column='[Median_Income]' derivation='Attribute' name='[attr:Median_Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GINI]' derivation='Avg' name='[avg:GINI:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Median_Income]' derivation='Avg' name='[avg:Median_Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Median_Non_Family_Income]' derivation='Avg' name='[avg:Median_Non_Family_Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Per_Capita_Income]' derivation='Avg' name='[avg:Per_Capita_Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Per_Capita_Income]' derivation='Count' name='[cnt:Per_Capita_Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Median_Income]' derivation='None' name='[none:Median_Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Per Capita Income (bin)]' derivation='None' name='[none:Per Capita Income (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[v_5]' derivation='None' name='[none:v_5:nk]' pivot='key' type='nominal' />
      <column-instance column='[v_6]' derivation='None' name='[none:v_6:nk]' pivot='key' type='nominal' />
      <column-instance column='[v_1]' derivation='Quarter' name='[qr:v_1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[GINI]' derivation='Sum' name='[sum:GINI:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Median_Income]' derivation='Sum' name='[sum:Median_Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Median_Non_Family_Income]' derivation='Sum' name='[sum:Median_Non_Family_Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Per_Capita_Income]' derivation='Sum' name='[sum:Per_Capita_Income:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Per Capita Income (bin),QUARTER(date))' hidden='true' name='[Action (Per Capita Income (bin),QUARTER(date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Per Capita Income (bin):ok]' />
          <groupfilter function='level-members' level='[qr:v_1:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/robinstewart/Documents/My Tableau Repository/Datasources/federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr_0g1w4th1rg162k1gsw8z804nss9g.tde' schema='Extract' tablename='Extract' update-time='04/30/2017 08:09:06 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2090' timestamp-start='2017-04-30 20:09:06.529' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>census-income-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>56131.0</statistic>
                <statistic aggregation='Avg' datatype='real'>26.856937799043063</statistic>
                <statistic aggregation='Min' datatype='integer'>2</statistic>
                <statistic aggregation='Max' datatype='integer'>52</statistic>
                <statistic aggregation='Stdev' datatype='real'>14.028628057328127</statistic>
                <statistic aggregation='StdevP' datatype='real'>14.025271524666774</statistic>
                <statistic aggregation='Var' datatype='real'>196.80240517085394</statistic>
                <statistic aggregation='VarP' datatype='real'>196.70824134062866</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1918627.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GINI</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GINI]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GINI</remote-alias>
              <ordinal>1</ordinal>
              <family>census-income-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>984.93240000000367</statistic>
                <statistic aggregation='Avg' datatype='real'>0.47125952153110223</statistic>
                <statistic aggregation='Min' datatype='real'>0.41810000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>0.53169999999999995</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.016004110522661538</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.016000281329994537</statistic>
                <statistic aggregation='Var' datatype='real'>0.00025613155362156574</statistic>
                <statistic aggregation='VarP' datatype='real'>0.00025600900263897169</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>464.69383037999739</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median_Family_Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median_Family_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median_Family_Income</remote-alias>
              <ordinal>2</ordinal>
              <family>census-income-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>136482500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>65302.631578947367</statistic>
                <statistic aggregation='Min' datatype='integer'>49274</statistic>
                <statistic aggregation='Max' datatype='integer'>90089</statistic>
                <statistic aggregation='Stdev' datatype='real'>8657.9062894310955</statistic>
                <statistic aggregation='StdevP' datatype='real'>8655.834772165068</statistic>
                <statistic aggregation='Var' datatype='real'>74959341.316570505</statistic>
                <statistic aggregation='VarP' datatype='real'>74923475.603021905</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9069256478484.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median_Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median_Income</remote-alias>
              <ordinal>3</ordinal>
              <family>census-income-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>112789633.0</statistic>
                <statistic aggregation='Avg' datatype='real'>53966.331578947371</statistic>
                <statistic aggregation='Min' datatype='integer'>39665</statistic>
                <statistic aggregation='Max' datatype='integer'>74551</statistic>
                <statistic aggregation='Stdev' datatype='real'>7831.7906594879832</statistic>
                <statistic aggregation='StdevP' datatype='real'>7829.9168011863712</statistic>
                <statistic aggregation='Var' datatype='real'>61336944.934043214</statistic>
                <statistic aggregation='VarP' datatype='real'>61307597.11350061</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6214975611113.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median_Non_Family_Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median_Non_Family_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median_Non_Family_Income</remote-alias>
              <ordinal>4</ordinal>
              <family>census-income-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>69626390.0</statistic>
                <statistic aggregation='Avg' datatype='real'>33314.062200956934</statistic>
                <statistic aggregation='Min' datatype='integer'>21845</statistic>
                <statistic aggregation='Max' datatype='integer'>61466</statistic>
                <statistic aggregation='Stdev' datatype='real'>5943.9942335519418</statistic>
                <statistic aggregation='StdevP' datatype='real'>5942.5720552247194</statistic>
                <statistic aggregation='Var' datatype='real'>35331067.448498741</statistic>
                <statistic aggregation='VarP' datatype='real'>35314162.631537743</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2393344487188.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Per_Capita_Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Per_Capita_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Per_Capita_Income</remote-alias>
              <ordinal>5</ordinal>
              <family>census-income-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>58942859.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28202.324880382774</statistic>
                <statistic aggregation='Min' datatype='integer'>21057</statistic>
                <statistic aggregation='Max' datatype='integer'>47675</statistic>
                <statistic aggregation='Stdev' datatype='real'>3562.9804477221419</statistic>
                <statistic aggregation='StdevP' datatype='real'>3562.1279580705755</statistic>
                <statistic aggregation='Var' datatype='real'>12694829.670850273</statistic>
                <statistic aggregation='VarP' datatype='real'>12688755.589668049</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1688845158079.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>6</ordinal>
              <family>census-income-data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>7</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2090</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2516502.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1204.067942583732</statistic>
                <statistic aggregation='Min' datatype='integer'>3</statistic>
                <statistic aggregation='Max' datatype='integer'>2333</statistic>
                <statistic aggregation='Stdev' datatype='real'>654.42805388953298</statistic>
                <statistic aggregation='StdevP' datatype='real'>654.27147342219087</statistic>
                <statistic aggregation='Var' datatype='real'>428276.07771764148</statistic>
                <statistic aggregation='VarP' datatype='real'>428071.16093404457</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3924708112.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>8</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;attack&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;undetermined&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>9</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Car&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Other&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2056</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>11</remote-type>
              <local-name>[v_12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>10</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>133</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>11</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>723</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2015-01-02#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-02-12#</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='Median' datatype='date'>#2016-01-21#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>12</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;shot&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;shot and Tasered&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>13</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>65</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Taser&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;vehicle&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2084</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>14</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>74718.0</statistic>
                <statistic aggregation='Avg' datatype='real'>36.519061583577709</statistic>
                <statistic aggregation='Min' datatype='integer'>6</statistic>
                <statistic aggregation='Max' datatype='integer'>86</statistic>
                <statistic aggregation='Stdev' datatype='real'>12.886883394278133</statistic>
                <statistic aggregation='StdevP' datatype='real'>12.883733722131792</statistic>
                <statistic aggregation='Var' datatype='real'>166.0717636177215</statistic>
                <statistic aggregation='VarP' datatype='real'>165.99059462279592</statistic>
                <statistic aggregation='Count' datatype='integer'>2046</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3068248.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>15</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;FEMALE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;MALE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>16</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ASIAN&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WHITE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1971</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>17</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1227</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abingdon&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zion&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>18</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>11</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>19</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.533546' measure-ordering='alphabetic' measure-percentage='0.466454' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:v_5:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;FEMALE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MALE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:v_6:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NATIVE AMERICAN&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;HISPANIC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WHITE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BLACK&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ASIAN&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[cnt:Per_Capita_Income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[attr:Median_Income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:GINI:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Non_Family_Income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Per_Capita_Income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Median_Income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[sum:GINI:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[sum:Median_Income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[sum:Median_Non_Family_Income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[sum:Per_Capita_Income:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='Per Capita Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='27000.0'>
        <calculation class='tableau' formula='27000.0' />
        <range max='27000.0' min='0.0' />
      </column>
      <column caption='Per Capita Med' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='34079.713356678338'>
        <calculation class='tableau' formula='34079.713356678338' />
        <range max='47675.0' min='21057.0' />
      </column>
    </datasource>
    <datasource caption='fatal-police-shootings-cleaned+ (Multiple Connections) (2)' inline='true' name='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data.world connector' name='webdata-direct.1hw30vy09s44fr10h2fw9191iob1'>
            <connection APIVersion='' authType='none' authentication='no' channel='http' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;robin-stewart/s-17-dv-project-5&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OnJvYmluLXN0ZXdhcnQiLCJpc3MiOiJhZ2VudDpyb2Jpbi1zdGV3YXJ0OjpiMjlmYzcwMy0yYmZhLTQ3NzktYmJmYi04YTNhNjdjOWI1NmEiLCJpYXQiOjE0ODQ2OTcyNzMsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.s0t13SAi0Pn7jm5cCWfzzb0n3MRDnpi2GGIQCH8soOt5OICuSyDGfpZNsQKHxKAOA8gOzU5PGKwokczVk_S4Zw&quot;}' connectionName='data.world connector' filename='' increment-key='' path='/' port='80' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
          <named-connection caption='censusIncomeQueried' name='textscan.19nl0kp08jcxsr1d5l6j41v8btj1'>
            <connection class='textscan' directory='/Users/robinstewart/Documents/Data Visualization (Spring 2017)/Projects/Project Five/01 Data' filename='censusIncomeQueried.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[fatal-police-shootings-cleaned].[v_8]' />
              <expression op='[censusIncomeQueried.csv].[State]' />
            </expression>
          </clause>
          <relation connection='webdata-direct.1hw30vy09s44fr10h2fw9191iob1' name='fatal-police-shootings-cleaned' table='[fatalpoliceshootingscleaned]' type='table' />
          <relation connection='textscan.19nl0kp08jcxsr1d5l6j41v8btj1' name='censusIncomeQueried.csv' table='[censusIncomeQueried#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='real' name='GINI' ordinal='1' />
              <column datatype='integer' name='Per_Capita_Income' ordinal='2' />
              <column datatype='integer' name='Median_Family_Income' ordinal='3' />
              <column datatype='integer' name='Median_Non_Family_Income' ordinal='4' />
              <column datatype='integer' name='Median_Income' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <caption>id</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <caption>date</caption>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>manner_of_death</remote-alias>
            <ordinal>2</ordinal>
            <caption>manner_of_death</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>armed</remote-alias>
            <ordinal>3</ordinal>
            <caption>armed</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>4</ordinal>
            <caption>age</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>5</ordinal>
            <caption>gender</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>race</remote-alias>
            <ordinal>6</ordinal>
            <caption>race</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>7</ordinal>
            <caption>city</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>8</ordinal>
            <caption>state</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>4</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>signs_of_mental_illness</remote-alias>
            <ordinal>9</ordinal>
            <caption>signs_of_mental_illness</caption>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>threat_level</remote-alias>
            <ordinal>10</ordinal>
            <caption>threat_level</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>flee</remote-alias>
            <ordinal>11</ordinal>
            <caption>flee</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_12</remote-name>
            <remote-type>4</remote-type>
            <local-name>[v_12]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>body_camera</remote-alias>
            <ordinal>12</ordinal>
            <caption>body_camera</caption>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[censusIncomeQueried.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GINI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GINI]</local-name>
            <parent-name>[censusIncomeQueried.csv]</parent-name>
            <remote-alias>GINI</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per_Capita_Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per_Capita_Income]</local-name>
            <parent-name>[censusIncomeQueried.csv]</parent-name>
            <remote-alias>Per_Capita_Income</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median_Family_Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median_Family_Income]</local-name>
            <parent-name>[censusIncomeQueried.csv]</parent-name>
            <remote-alias>Median_Family_Income</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median_Non_Family_Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median_Non_Family_Income]</local-name>
            <parent-name>[censusIncomeQueried.csv]</parent-name>
            <remote-alias>Median_Non_Family_Income</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median_Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median_Income]</local-name>
            <parent-name>[censusIncomeQueried.csv]</parent-name>
            <remote-alias>Median_Income</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[censusIncomeQueried.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Per Capita Range' datatype='string' name='[Calculation_1642758397928120320]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Per_Capita_Income] &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#10;ELSEIF [Per_Capita_Income] &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot; &#10;ELSE &quot;High&quot;&#10;END' />
      </column>
      <column caption='Gini' datatype='real' name='[GINI]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Median Income (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[Median_Income]' peg='0' size='2000' />
      </column>
      <column caption='Median Family Income' datatype='integer' name='[Median_Family_Income]' role='measure' type='quantitative' />
      <column caption='Median Income' datatype='integer' name='[Median_Income]' role='measure' type='quantitative' />
      <column caption='Median Non Family Income' datatype='integer' name='[Median_Non_Family_Income]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Number of Records (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Number of Records]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Per Capita Income (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[Per_Capita_Income]' peg='0' size='2098' />
      </column>
      <column caption='Per Capita Income' datatype='integer' name='[Per_Capita_Income]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='id' datatype='integer' name='[v_0]' role='measure' type='quantitative' />
      <column caption='threat_level' datatype='string' name='[v_10]' role='dimension' type='nominal' />
      <column caption='flee' datatype='string' name='[v_11]' role='dimension' type='nominal' />
      <column caption='body_camera' datatype='boolean' name='[v_12]' role='dimension' type='nominal' />
      <column caption='date' datatype='date' name='[v_1]' role='dimension' type='ordinal' />
      <column caption='manner_of_death' datatype='string' name='[v_2]' role='dimension' type='nominal' />
      <column caption='armed' datatype='string' name='[v_3]' role='dimension' type='nominal' />
      <column caption='age' datatype='integer' name='[v_4]' role='measure' type='quantitative' />
      <column caption='gender' datatype='string' name='[v_5]' role='dimension' type='nominal' />
      <column caption='race' datatype='string' name='[v_6]' role='dimension' type='nominal' />
      <column caption='city' datatype='string' name='[v_7]' role='dimension' type='nominal' />
      <column caption='state' datatype='string' name='[v_8]' role='dimension' type='nominal' />
      <column caption='signs_of_mental_illness' datatype='boolean' name='[v_9]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_1642758397928120320]' derivation='None' name='[none:Calculation_1642758397928120320:nk]' pivot='key' type='nominal' />
      <group name='[Highest Counts Per Media Income]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Median Income (bin)]' member='17' />
          <groupfilter function='member' level='[Median Income (bin)]' member='18' />
          <groupfilter function='member' level='[Median Income (bin)]' member='19' />
          <groupfilter function='member' level='[Median Income (bin)]' member='22' />
        </groupfilter>
      </group>
      <group name='[Highest Median Income Counts]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Median Income (bin)]' member='23' />
          <groupfilter function='member' level='[Median Income (bin)]' member='24' />
          <groupfilter function='member' level='[Median Income (bin)]' member='26' />
          <groupfilter function='member' level='[Median Income (bin)]' member='30' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/robinstewart/Documents/My Tableau Repository/Datasources/federated.1bagbgp18esit01h90c6x1ug6cla_0m5mdh811snuf713yu60h0kri4iy copy 1.tde' schema='Extract' tablename='Extract' update-time='04/15/2017 07:51:40 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2090' timestamp-start='2017-04-15 19:51:40.459' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>GINI</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GINI]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GINI</remote-alias>
              <ordinal>0</ordinal>
              <family>censusIncomeQueried.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>984.93240000000367</statistic>
                <statistic aggregation='Avg' datatype='real'>0.47125952153110223</statistic>
                <statistic aggregation='Min' datatype='real'>0.41810000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>0.53169999999999995</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.016004110522661538</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.016000281329994537</statistic>
                <statistic aggregation='Var' datatype='real'>0.00025613155362156574</statistic>
                <statistic aggregation='VarP' datatype='real'>0.00025600900263897169</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>464.69383037999739</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median_Family_Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median_Family_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median_Family_Income</remote-alias>
              <ordinal>1</ordinal>
              <family>censusIncomeQueried.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>136482500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>65302.631578947367</statistic>
                <statistic aggregation='Min' datatype='integer'>49274</statistic>
                <statistic aggregation='Max' datatype='integer'>90089</statistic>
                <statistic aggregation='Stdev' datatype='real'>8657.9062894310955</statistic>
                <statistic aggregation='StdevP' datatype='real'>8655.834772165068</statistic>
                <statistic aggregation='Var' datatype='real'>74959341.316570505</statistic>
                <statistic aggregation='VarP' datatype='real'>74923475.603021905</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9069256478484.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median_Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median_Income</remote-alias>
              <ordinal>2</ordinal>
              <family>censusIncomeQueried.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>112789633.0</statistic>
                <statistic aggregation='Avg' datatype='real'>53966.331578947371</statistic>
                <statistic aggregation='Min' datatype='integer'>39665</statistic>
                <statistic aggregation='Max' datatype='integer'>74551</statistic>
                <statistic aggregation='Stdev' datatype='real'>7831.7906594879832</statistic>
                <statistic aggregation='StdevP' datatype='real'>7829.9168011863712</statistic>
                <statistic aggregation='Var' datatype='real'>61336944.934043214</statistic>
                <statistic aggregation='VarP' datatype='real'>61307597.11350061</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6214975611113.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median_Non_Family_Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median_Non_Family_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median_Non_Family_Income</remote-alias>
              <ordinal>3</ordinal>
              <family>censusIncomeQueried.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>69626390.0</statistic>
                <statistic aggregation='Avg' datatype='real'>33314.062200956934</statistic>
                <statistic aggregation='Min' datatype='integer'>21845</statistic>
                <statistic aggregation='Max' datatype='integer'>61466</statistic>
                <statistic aggregation='Stdev' datatype='real'>5943.9942335519418</statistic>
                <statistic aggregation='StdevP' datatype='real'>5942.5720552247194</statistic>
                <statistic aggregation='Var' datatype='real'>35331067.448498741</statistic>
                <statistic aggregation='VarP' datatype='real'>35314162.631537743</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2393344487188.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Per_Capita_Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Per_Capita_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Per_Capita_Income</remote-alias>
              <ordinal>4</ordinal>
              <family>censusIncomeQueried.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>58942859.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28202.324880382774</statistic>
                <statistic aggregation='Min' datatype='integer'>21057</statistic>
                <statistic aggregation='Max' datatype='integer'>47675</statistic>
                <statistic aggregation='Stdev' datatype='real'>3562.9804477221419</statistic>
                <statistic aggregation='StdevP' datatype='real'>3562.1279580705755</statistic>
                <statistic aggregation='Var' datatype='real'>12694829.670850273</statistic>
                <statistic aggregation='VarP' datatype='real'>12688755.589668049</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1688845158079.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>5</ordinal>
              <family>censusIncomeQueried.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>6</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2090</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2516502.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1204.067942583732</statistic>
                <statistic aggregation='Min' datatype='integer'>3</statistic>
                <statistic aggregation='Max' datatype='integer'>2333</statistic>
                <statistic aggregation='Stdev' datatype='real'>654.42805388953298</statistic>
                <statistic aggregation='StdevP' datatype='real'>654.27147342219087</statistic>
                <statistic aggregation='Var' datatype='real'>428276.07771764148</statistic>
                <statistic aggregation='VarP' datatype='real'>428071.16093404457</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3924708112.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>7</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;attack&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;undetermined&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>8</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Car&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Other&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2056</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>11</remote-type>
              <local-name>[v_12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>9</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>133</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>10</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>723</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2015-01-02#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-02-12#</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='Median' datatype='date'>#2016-01-21#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>11</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;shot&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;shot and Tasered&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>12</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>65</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Taser&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;vehicle&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2084</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>13</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>74718.0</statistic>
                <statistic aggregation='Avg' datatype='real'>36.519061583577709</statistic>
                <statistic aggregation='Min' datatype='integer'>6</statistic>
                <statistic aggregation='Max' datatype='integer'>86</statistic>
                <statistic aggregation='Stdev' datatype='real'>12.886883394278133</statistic>
                <statistic aggregation='StdevP' datatype='real'>12.883733722131792</statistic>
                <statistic aggregation='Var' datatype='real'>166.0717636177215</statistic>
                <statistic aggregation='VarP' datatype='real'>165.99059462279592</statistic>
                <statistic aggregation='Count' datatype='integer'>2046</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3068248.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>14</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;FEMALE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;MALE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>15</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ASIAN&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WHITE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1971</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>16</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1227</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abingdon&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zion&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>17</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>11</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>18</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.453721' group-percentage='0.076225' measure-ordering='alphabetic' measure-percentage='0.393829' parameter-percentage='0.076225' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Highest Counts Per Media Income]' type='palette'>
            <map to='#59a14f'>
              <bucket>(22)</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>(19)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(18)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(17)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1642758397928120320:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;High&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Per Capita Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='27000.0'>
          <calculation class='tableau' formula='27000.0' />
          <range max='27000.0' min='0.0' />
        </column>
        <column caption='Per Capita Med' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='34079.713356678338'>
          <calculation class='tableau' formula='34079.713356678338' />
          <range max='47675.0' min='21057.0' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='fatal-police-shootings-cleaned+ (Multiple Connections) (3)' inline='true' name='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data.world connector' name='webdata-direct.1hw30vy09s44fr10h2fw9191iob1 (copy)'>
            <connection APIVersion='' authType='none' authentication='no' channel='http' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;robin-stewart/s-17-dv-project-5&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OnJvYmluLXN0ZXdhcnQiLCJpc3MiOiJhZ2VudDpyb2Jpbi1zdGV3YXJ0OjpiMjlmYzcwMy0yYmZhLTQ3NzktYmJmYi04YTNhNjdjOWI1NmEiLCJpYXQiOjE0ODQ2OTcyNzMsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.s0t13SAi0Pn7jm5cCWfzzb0n3MRDnpi2GGIQCH8soOt5OICuSyDGfpZNsQKHxKAOA8gOzU5PGKwokczVk_S4Zw&quot;}' connectionName='data.world connector' filename='' increment-key='' path='/' port='80' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
          <named-connection caption='censusIncomeQueried' name='textscan.19nl0kp08jcxsr1d5l6j41v8btj1 (copy)'>
            <connection class='textscan' directory='/Users/robinstewart/Documents/Data Visualization (Spring 2017)/Projects/Project Five/01 Data' filename='censusIncomeQueried.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[fatal-police-shootings-cleaned].[v_8]' />
              <expression op='[censusIncomeQueried.csv].[State]' />
            </expression>
          </clause>
          <relation connection='webdata-direct.1hw30vy09s44fr10h2fw9191iob1 (copy)' name='fatal-police-shootings-cleaned' table='[fatalpoliceshootingscleaned]' type='table' />
          <relation connection='textscan.19nl0kp08jcxsr1d5l6j41v8btj1 (copy)' name='censusIncomeQueried.csv' table='[censusIncomeQueried#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='real' name='GINI' ordinal='1' />
              <column datatype='integer' name='Per_Capita_Income' ordinal='2' />
              <column datatype='integer' name='Median_Family_Income' ordinal='3' />
              <column datatype='integer' name='Median_Non_Family_Income' ordinal='4' />
              <column datatype='integer' name='Median_Income' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <caption>id</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <caption>date</caption>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>manner_of_death</remote-alias>
            <ordinal>2</ordinal>
            <caption>manner_of_death</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>armed</remote-alias>
            <ordinal>3</ordinal>
            <caption>armed</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>4</ordinal>
            <caption>age</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>5</ordinal>
            <caption>gender</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>race</remote-alias>
            <ordinal>6</ordinal>
            <caption>race</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>7</ordinal>
            <caption>city</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>8</ordinal>
            <caption>state</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>4</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>signs_of_mental_illness</remote-alias>
            <ordinal>9</ordinal>
            <caption>signs_of_mental_illness</caption>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>threat_level</remote-alias>
            <ordinal>10</ordinal>
            <caption>threat_level</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>flee</remote-alias>
            <ordinal>11</ordinal>
            <caption>flee</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_12</remote-name>
            <remote-type>4</remote-type>
            <local-name>[v_12]</local-name>
            <parent-name>[fatal-police-shootings-cleaned]</parent-name>
            <remote-alias>body_camera</remote-alias>
            <ordinal>12</ordinal>
            <caption>body_camera</caption>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[censusIncomeQueried.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GINI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GINI]</local-name>
            <parent-name>[censusIncomeQueried.csv]</parent-name>
            <remote-alias>GINI</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per_Capita_Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per_Capita_Income]</local-name>
            <parent-name>[censusIncomeQueried.csv]</parent-name>
            <remote-alias>Per_Capita_Income</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median_Family_Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median_Family_Income]</local-name>
            <parent-name>[censusIncomeQueried.csv]</parent-name>
            <remote-alias>Median_Family_Income</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median_Non_Family_Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median_Non_Family_Income]</local-name>
            <parent-name>[censusIncomeQueried.csv]</parent-name>
            <remote-alias>Median_Non_Family_Income</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median_Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median_Income]</local-name>
            <parent-name>[censusIncomeQueried.csv]</parent-name>
            <remote-alias>Median_Income</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[censusIncomeQueried.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Per Capita Range' datatype='string' name='[Calculation_1642758397928120320]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Per_Capita_Income] &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#10;ELSEIF [Per_Capita_Income] &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot; &#10;ELSE &quot;High&quot;&#10;END' />
      </column>
      <column caption='Gini' datatype='real' name='[GINI]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Median Income (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[Median_Income]' peg='0' size='2000' />
      </column>
      <column caption='Median Family Income' datatype='integer' name='[Median_Family_Income]' role='measure' type='quantitative' />
      <column caption='Median Income' datatype='integer' name='[Median_Income]' role='measure' type='quantitative' />
      <column caption='Median Non Family Income' datatype='integer' name='[Median_Non_Family_Income]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Number of Records (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Number of Records]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Per Capita Income (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[Per_Capita_Income]' peg='0' size='2098' />
      </column>
      <column caption='Per Capita Income' datatype='integer' name='[Per_Capita_Income]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='id' datatype='integer' name='[v_0]' role='measure' type='quantitative' />
      <column caption='threat_level' datatype='string' name='[v_10]' role='dimension' type='nominal' />
      <column caption='flee' datatype='string' name='[v_11]' role='dimension' type='nominal' />
      <column caption='body_camera' datatype='boolean' name='[v_12]' role='dimension' type='nominal' />
      <column caption='date' datatype='date' name='[v_1]' role='dimension' type='ordinal' />
      <column caption='manner_of_death' datatype='string' name='[v_2]' role='dimension' type='nominal' />
      <column caption='armed' datatype='string' name='[v_3]' role='dimension' type='nominal' />
      <column caption='age' datatype='integer' name='[v_4]' role='measure' type='quantitative' />
      <column caption='gender' datatype='string' name='[v_5]' role='dimension' type='nominal' />
      <column caption='race' datatype='string' name='[v_6]' role='dimension' type='nominal' />
      <column caption='city' datatype='string' name='[v_7]' role='dimension' type='nominal' />
      <column caption='state' datatype='string' name='[v_8]' role='dimension' type='nominal' />
      <column caption='signs_of_mental_illness' datatype='boolean' name='[v_9]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_1642758397928120320]' derivation='None' name='[none:Calculation_1642758397928120320:nk]' pivot='key' type='nominal' />
      <group name='[Highest Counts Per Media Income]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Median Income (bin)]' member='17' />
          <groupfilter function='member' level='[Median Income (bin)]' member='18' />
          <groupfilter function='member' level='[Median Income (bin)]' member='19' />
          <groupfilter function='member' level='[Median Income (bin)]' member='22' />
        </groupfilter>
      </group>
      <group name='[Highest Median Income Counts]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Median Income (bin)]' member='23' />
          <groupfilter function='member' level='[Median Income (bin)]' member='24' />
          <groupfilter function='member' level='[Median Income (bin)]' member='26' />
          <groupfilter function='member' level='[Median Income (bin)]' member='30' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/robinstewart/Documents/My Tableau Repository/Datasources/federated.1bagbgp18esit01h90c6x1ug6cla_0m5mdh811snuf713yu60h0kri4iy copy 2.tde' schema='Extract' tablename='Extract' update-time='04/15/2017 07:51:40 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2090' timestamp-start='2017-04-15 19:51:40.459' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>GINI</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GINI]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GINI</remote-alias>
              <ordinal>0</ordinal>
              <family>censusIncomeQueried.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>984.93240000000367</statistic>
                <statistic aggregation='Avg' datatype='real'>0.47125952153110223</statistic>
                <statistic aggregation='Min' datatype='real'>0.41810000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>0.53169999999999995</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.016004110522661538</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.016000281329994537</statistic>
                <statistic aggregation='Var' datatype='real'>0.00025613155362156574</statistic>
                <statistic aggregation='VarP' datatype='real'>0.00025600900263897169</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>464.69383037999739</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median_Family_Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median_Family_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median_Family_Income</remote-alias>
              <ordinal>1</ordinal>
              <family>censusIncomeQueried.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>136482500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>65302.631578947367</statistic>
                <statistic aggregation='Min' datatype='integer'>49274</statistic>
                <statistic aggregation='Max' datatype='integer'>90089</statistic>
                <statistic aggregation='Stdev' datatype='real'>8657.9062894310955</statistic>
                <statistic aggregation='StdevP' datatype='real'>8655.834772165068</statistic>
                <statistic aggregation='Var' datatype='real'>74959341.316570505</statistic>
                <statistic aggregation='VarP' datatype='real'>74923475.603021905</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9069256478484.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median_Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median_Income</remote-alias>
              <ordinal>2</ordinal>
              <family>censusIncomeQueried.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>112789633.0</statistic>
                <statistic aggregation='Avg' datatype='real'>53966.331578947371</statistic>
                <statistic aggregation='Min' datatype='integer'>39665</statistic>
                <statistic aggregation='Max' datatype='integer'>74551</statistic>
                <statistic aggregation='Stdev' datatype='real'>7831.7906594879832</statistic>
                <statistic aggregation='StdevP' datatype='real'>7829.9168011863712</statistic>
                <statistic aggregation='Var' datatype='real'>61336944.934043214</statistic>
                <statistic aggregation='VarP' datatype='real'>61307597.11350061</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6214975611113.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median_Non_Family_Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median_Non_Family_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median_Non_Family_Income</remote-alias>
              <ordinal>3</ordinal>
              <family>censusIncomeQueried.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>69626390.0</statistic>
                <statistic aggregation='Avg' datatype='real'>33314.062200956934</statistic>
                <statistic aggregation='Min' datatype='integer'>21845</statistic>
                <statistic aggregation='Max' datatype='integer'>61466</statistic>
                <statistic aggregation='Stdev' datatype='real'>5943.9942335519418</statistic>
                <statistic aggregation='StdevP' datatype='real'>5942.5720552247194</statistic>
                <statistic aggregation='Var' datatype='real'>35331067.448498741</statistic>
                <statistic aggregation='VarP' datatype='real'>35314162.631537743</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2393344487188.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Per_Capita_Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Per_Capita_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Per_Capita_Income</remote-alias>
              <ordinal>4</ordinal>
              <family>censusIncomeQueried.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>58942859.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28202.324880382774</statistic>
                <statistic aggregation='Min' datatype='integer'>21057</statistic>
                <statistic aggregation='Max' datatype='integer'>47675</statistic>
                <statistic aggregation='Stdev' datatype='real'>3562.9804477221419</statistic>
                <statistic aggregation='StdevP' datatype='real'>3562.1279580705755</statistic>
                <statistic aggregation='Var' datatype='real'>12694829.670850273</statistic>
                <statistic aggregation='VarP' datatype='real'>12688755.589668049</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1688845158079.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>5</ordinal>
              <family>censusIncomeQueried.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>6</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2090</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2516502.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1204.067942583732</statistic>
                <statistic aggregation='Min' datatype='integer'>3</statistic>
                <statistic aggregation='Max' datatype='integer'>2333</statistic>
                <statistic aggregation='Stdev' datatype='real'>654.42805388953298</statistic>
                <statistic aggregation='StdevP' datatype='real'>654.27147342219087</statistic>
                <statistic aggregation='Var' datatype='real'>428276.07771764148</statistic>
                <statistic aggregation='VarP' datatype='real'>428071.16093404457</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3924708112.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>7</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;attack&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;undetermined&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>8</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Car&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Other&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2056</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>11</remote-type>
              <local-name>[v_12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>9</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>133</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>10</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>723</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2015-01-02#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-02-12#</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
                <statistic aggregation='Median' datatype='date'>#2016-01-21#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>11</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;shot&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;shot and Tasered&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>12</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>65</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Taser&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;vehicle&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2084</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>13</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>74718.0</statistic>
                <statistic aggregation='Avg' datatype='real'>36.519061583577709</statistic>
                <statistic aggregation='Min' datatype='integer'>6</statistic>
                <statistic aggregation='Max' datatype='integer'>86</statistic>
                <statistic aggregation='Stdev' datatype='real'>12.886883394278133</statistic>
                <statistic aggregation='StdevP' datatype='real'>12.883733722131792</statistic>
                <statistic aggregation='Var' datatype='real'>166.0717636177215</statistic>
                <statistic aggregation='VarP' datatype='real'>165.99059462279592</statistic>
                <statistic aggregation='Count' datatype='integer'>2046</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3068248.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>14</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;FEMALE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;MALE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>15</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ASIAN&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WHITE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1971</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>16</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1227</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abingdon&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zion&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>17</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>11</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>18</ordinal>
              <family>fatal-police-shootings-cleaned</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>2090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.453721' group-percentage='0.076225' measure-ordering='alphabetic' measure-percentage='0.393829' parameter-percentage='0.076225' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Highest Counts Per Media Income]' type='palette'>
            <map to='#59a14f'>
              <bucket>(22)</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>(19)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(18)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(17)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1642758397928120320:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;High&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Per Capita Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='27000.0'>
          <calculation class='tableau' formula='27000.0' />
          <range max='27000.0' min='0.0' />
        </column>
        <column caption='Per Capita Med' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='34079.713356678338'>
          <calculation class='tableau' formula='34079.713356678338' />
          <range max='47675.0' min='21057.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr' type='datasource'>
        <exclude-sheet name='Boxplot' />
        <exclude-sheet name='Map' />
        <exclude-sheet name='Scatter Plot' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Scatter Plot' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Parameters' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Per Capita Range' />
        <param name='target' value='Parameters' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Boxplot'>
      <table>
        <view>
          <datasources>
            <datasource caption='fatal-police-shootings-cleaned+ (Multiple Connections)' name='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr' />
          </datasources>
          <datasource-dependencies datasource='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr'>
            <column caption='Median Family Income' datatype='integer' name='[Median_Family_Income]' role='measure' type='quantitative' />
            <column-instance column='[Median_Family_Income]' derivation='None' name='[none:Median_Family_Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_5]' derivation='None' name='[none:v_5:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_6]' derivation='None' name='[none:v_6:nk]' pivot='key' type='nominal' />
            <column caption='Fleeing' datatype='string' name='[v_11]' role='dimension' type='nominal' />
            <column caption='gender' datatype='string' name='[v_5]' role='dimension' type='nominal' />
            <column caption='race' datatype='string' name='[v_6]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_11:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_11:nk]' />
              <groupfilter function='member' level='[none:v_11:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_6:nk]'>
            <groupfilter from='&quot;ASIAN&quot;' function='range' level='[none:v_6:nk]' to='&quot;WHITE&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_6:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_5:nk]' />
              <lod column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_5:nk]' />
              <lod column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Median_Family_Income:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Median_Family_Income:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Median_Family_Income:qk]</rows>
        <cols>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_11:nk]</cols>
        <pages>
          <column>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_6:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Crosstab &amp; Set'>
      <table>
        <view>
          <datasources>
            <datasource caption='fatal-police-shootings-cleaned+ (Multiple Connections) (2)' name='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)'>
            <column aggregation='None' datatype='integer' name='[Median Income (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='3' formula='[Median_Income]' peg='0' size='2000' />
            </column>
            <column caption='Median Income' datatype='integer' name='[Median_Income]' role='measure' type='quantitative' />
            <column-instance column='[Median_Income]' derivation='Avg' name='[avg:Median_Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Highest Median Income Counts]' derivation='InOut' name='[io:Highest Median Income Counts:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_5]' derivation='None' name='[none:v_5:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_6]' derivation='None' name='[none:v_6:nk]' pivot='key' type='nominal' />
            <column caption='gender' datatype='string' name='[v_5]' role='dimension' type='nominal' />
            <column caption='race' datatype='string' name='[v_6]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[io:Highest Median Income Counts:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[none:v_6:nk]' />
              <size column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[io:Highest Median Income Counts:nk]' />
              <text column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[avg:Median_Income:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='5.6847858428955078' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[none:v_6:nk]</rows>
        <cols>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[none:v_5:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Histogram'>
      <table>
        <view>
          <datasources>
            <datasource caption='fatal-police-shootings-cleaned+ (Multiple Connections)' name='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr' />
          </datasources>
          <datasource-dependencies datasource='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr'>
            <column caption='Median Income' datatype='integer' name='[Median_Income]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='integer' name='[Per Capita Income (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='3' formula='[Per_Capita_Income]' peg='0' size='1000' />
            </column>
            <column caption='Per Capita Income' datatype='integer' name='[Per_Capita_Income]' role='measure' type='quantitative' />
            <column-instance column='[Median_Income]' derivation='Avg' name='[avg:Median_Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Per_Capita_Income]' derivation='Count' name='[cnt:Per_Capita_Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Per Capita Income (bin)]' derivation='None' name='[none:Per Capita Income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[v_1]' derivation='Quarter' name='[qr:v_1:ok]' pivot='key' type='ordinal' />
            <column caption='date' datatype='date' datatype-customized='true' name='[v_1]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[cnt:Per_Capita_Income:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[cnt:Per_Capita_Income:qk]' z-order='1' />
          </pane>
          <pane id='1' y-axis-name='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[cnt:Per_Capita_Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[cnt:Per_Capita_Income:qk] + [federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk])</rows>
        <cols>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Per Capita Income (bin):ok]</cols>
        <pages>
          <column>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[qr:v_1:ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[Per Capita Income (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='fatal-police-shootings-cleaned+ (Multiple Connections)' name='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr'>
            <column caption='Median Income' datatype='integer' name='[Median_Income]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Median_Income]' derivation='Avg' name='[avg:Median_Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[Longitude (generated)]' field-type='quantitative' max='-4034580.7349394653' min='-21525886.360136714' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[Latitude (generated)]' field-type='quantitative' max='11966630.791294727' min='-446107.45696629304' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]' />
              <lod column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:State:nk]' />
              <geometry column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[Latitude (generated)]</rows>
        <cols>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Parameters'>
      <table>
        <view>
          <datasources>
            <datasource caption='fatal-police-shootings-cleaned+ (Multiple Connections) (3)' name='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Per Capita Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='27000.0'>
              <calculation class='tableau' formula='27000.0' />
              <range max='27000.0' min='0.0' />
            </column>
            <column caption='Per Capita Med' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='34079.713356678338'>
              <calculation class='tableau' formula='34079.713356678338' />
              <range max='47675.0' min='21057.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)'>
            <column caption='Per Capita Range' datatype='string' name='[Calculation_1642758397928120320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Per_Capita_Income] &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#10;ELSEIF [Per_Capita_Income] &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot; &#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column caption='Median Income' datatype='integer' name='[Median_Income]' role='measure' type='quantitative' />
            <column caption='Per Capita Income' datatype='integer' name='[Per_Capita_Income]' role='measure' type='quantitative' />
            <column-instance column='[Median_Income]' derivation='Count' name='[cnt:Median_Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758397928120320]' derivation='None' name='[none:Calculation_1642758397928120320:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_3]' derivation='None' name='[none:v_3:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_5]' derivation='None' name='[none:v_5:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_9]' derivation='None' name='[none:v_9:nk]' pivot='key' type='nominal' />
            <column caption='flee' datatype='string' name='[v_11]' role='dimension' type='nominal' />
            <column caption='armed' datatype='string' name='[v_3]' role='dimension' type='nominal' />
            <column caption='gender' datatype='string' name='[v_5]' role='dimension' type='nominal' />
            <column caption='signs_of_mental_illness' datatype='boolean' name='[v_9]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)].[none:Calculation_1642758397928120320:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High&quot;</bucket>
              <bucket>&quot;Medium&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)].[none:v_11:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_11:nk]' />
              <groupfilter function='member' level='[none:v_11:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)].[none:v_3:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_3:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:v_3:nk]' member='%null%' />
                <groupfilter function='member' level='[none:v_3:nk]' member='&quot;ax&quot;' />
                <groupfilter function='member' level='[none:v_3:nk]' member='&quot;baseball bat&quot;' />
                <groupfilter function='member' level='[none:v_3:nk]' member='&quot;box cutter&quot;' />
                <groupfilter function='member' level='[none:v_3:nk]' member='&quot;crossbow&quot;' />
                <groupfilter function='member' level='[none:v_3:nk]' member='&quot;metal pipe&quot;' />
                <groupfilter function='member' level='[none:v_3:nk]' member='&quot;metal stick&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)].[none:v_3:nk]</column>
            <column>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)].[none:v_11:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)].[none:v_5:nk]' value='32' />
            <format attr='width' field='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)].[none:v_9:nk]' value='97' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)].[none:Calculation_1642758397928120320:nk]' />
              <text column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)].[cnt:Median_Income:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)].[none:v_5:nk]</rows>
        <cols>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)].[none:v_9:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Scatter Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='fatal-police-shootings-cleaned+ (Multiple Connections)' name='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr' />
          </datasources>
          <datasource-dependencies datasource='federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr'>
            <column caption='Median Income' datatype='integer' name='[Median_Income]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='integer' name='[Per Capita Income (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='3' formula='[Per_Capita_Income]' peg='0' size='1000' />
            </column>
            <column caption='Per Capita Income' datatype='integer' name='[Per_Capita_Income]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Median_Income]' derivation='None' name='[none:Median_Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Per Capita Income (bin)]' derivation='None' name='[none:Per Capita Income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_6]' derivation='None' name='[none:v_6:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_1]' derivation='Quarter' name='[qr:v_1:ok]' pivot='key' type='ordinal' />
            <column caption='threat_level' datatype='string' name='[v_10]' role='dimension' type='nominal' />
            <column caption='date' datatype='date' datatype-customized='true' name='[v_1]' role='dimension' type='ordinal' />
            <column caption='age' datatype='integer' name='[v_4]' role='measure' type='quantitative' />
            <column caption='race' datatype='string' name='[v_6]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[Action (Per Capita Income (bin),QUARTER(date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Per Capita Income (bin):ok]' />
              <groupfilter function='level-members' level='[qr:v_1:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_6:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_6:nk]' />
              <groupfilter function='member' level='[none:v_6:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_6:nk]</column>
            <column>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[Action (State)]</column>
            <column>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[Action (Per Capita Income (bin),QUARTER(date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_10:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_4:qk]</rows>
        <cols>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Median_Income:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='Histogram' w='84000' x='0' y='50000' />
              <zone h='50000' id='8' name='Scatter Plot' w='84000' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='8750' id='6' name='Histogram' pane-specification-id='1' param='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[:Measure Names]' type='color' w='16000' x='84000' y='0' />
              <zone h='13875' id='7' name='Histogram' synchronized='1' type='currpage' w='16000' x='84000' y='8750' />
              <zone h='10750' id='9' name='Scatter Plot' pane-specification-id='2' param='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_10:nk]' type='color' w='16000' x='84000' y='22625' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_6:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_5:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WHITE&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
    </window>
    <window class='worksheet' name='Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='1' param='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1</bucket>
          </multibucket>
        </current-page>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Per Capita Income (bin):ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Per Capita Income (bin):ok]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[qr:v_1:ok]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>70331.0</value>
                <value>38</value>
                <value>1</value>
                <value>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Per Capita Income (bin):ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Per Capita Income (bin):ok]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[qr:v_1:ok]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>72401.21428571429</value>
                <value>36</value>
                <value>1</value>
                <value>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Per Capita Income (bin):ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Per Capita Income (bin):ok]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[qr:v_1:ok]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>65132.599999999999</value>
                <value>34</value>
                <value>1</value>
                <value>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Per Capita Income (bin):ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Per Capita Income (bin):ok]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[qr:v_1:ok]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>63344.692307692305</value>
                <value>33</value>
                <value>1</value>
                <value>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Per Capita Income (bin):ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Per Capita Income (bin):ok]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[qr:v_1:ok]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>60659.034482758623</value>
                <value>32</value>
                <value>1</value>
                <value>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Per Capita Income (bin):ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:Per Capita Income (bin):ok]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[qr:v_1:ok]</field>
                  <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>60798.875</value>
                <value>31</value>
                <value>1</value>
                <value>&quot;[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Scatter Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_10:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_10:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[avg:Median_Income:qk]</field>
            <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr].[none:v_5:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Histogram'>
          <current-page>
            <multibucket>
              <bucket>2</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Scatter Plot'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Crosstab &amp; Set'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[none:v_6:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[io:Highest Median Income Counts:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[avg:Median_Family_Income:qk]</field>
            <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[io:Highest Counts Per Media Income:nk]</field>
            <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[io:Highest Median Income Counts:nk]</field>
            <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[none:State:nk]</field>
            <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[none:v_10:nk]</field>
            <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[none:v_11:nk]</field>
            <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[none:v_2:nk]</field>
            <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[none:v_3:nk]</field>
            <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[none:v_5:nk]</field>
            <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[none:v_6:nk]</field>
            <field>[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy)].[none:v_9:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Parameters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xtfhtr1hnywaa1e2hrnk1ulr5rr (copy 2)].[none:Calculation_1642758397928120320:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Boxplot' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOzdd3wc1b3//9eZ2b7qXbIsy7bcewHbgAPGphkwGBIIhBAghCTc3LSbL2n3
      l9ybSgpJuEnIJSSkXJLQCQQMtgHjiivuvchNsmRLltW3zMz5/SFjLFmWLYN3JebzfDx4JJ45
      s/vZ1ey8Z86cmVFaa40QQghXUUopI9lFCCGESA4JACGEcCkJACGEcCkJACGEcCkJACGEcCkJ
      ACGEcCkJACGEcCkJACGEcCkJACGEcCkJACGEcCkJACGEcCkJACGEcCkJACGEcCkJACGEcCkJ
      ACGEcCkJACGSqL6mmoNVtchDOUQyeJJdgBAfVnZTNa+9vozmWLzddG9aNpdcPJXcVMWLv/g+
      rxwu5S9/+BqBD+A967Yv4UePPkPu+Fk8cMf0D+AVxYeZBIAQ54ndXMH//u//cKimsd30YMl4
      SoZcQG5qgIa6fZRXhT+w94w2VrNy5XKGFF30gb2m+PCSABDifDEMUJBz4U088sBt4LR19ChP
      gIKCMGC3tbPaL6Zti6aGepojcYIpaaSmhDDUSfMdi6b6tvmBlDTSTpqfM+oqnvj7BQTTs9ra
      agfbtlHKxFDQ2tJEJGYTTEkl6Gv/87fjMVpaW1Gmj2DQj9IaZZgohfiQkgAQ4jwLhjMZUNq/
      kzl2h39rtBPhlb/9lteWbKO+OUo4s5AZN93BzdNGoRRoJ8KcJx7h1SVbT8yfPvsOPnr5KJRS
      6Eg1f378LwyffhM3Tx1LfeVu/u+xP0KfAeTTxNsbdtMYiZNTOJIvPXA/BSkelNYc3LqMvz3z
      CgcOH0OZfnJL+qDrvHzi3++mrCAtEV+TSAI5CSzE+XaWj952rAhz/vg9fvCb56hzwowaP5KW
      g6t58IEv8vrOYzhW9Pj8Zzlqh07M/8nX/53Xdx5re43WWhYseINN+w4BEGuuZfWS+fzl0d/z
      2+cX4/jDRI9VMv/VJ/nTk0uxtaZu50I+e+eXeGHuIlq1B6/XYe1rr/DSa3M4UNfYVcmil5Mj
      ACHOs5aavSxdthTHdgAIpecyfNhggt4O7WormDd3CUUjpvDt//4Ow4tS2XJhGd/+9k95/cU3
      GffJMcyfu4TC4ZP59n9/lxF9UtkyaRDf/tZPmP/PN7jkazefdo9u6IRr+MpX72VI3zz2rPgX
      3/7uQzTWVRGLNvLMU89z2Bvgtvv/H5+6/nICXodXH/oWP/7nLqT358NNAkCI86x2w3y+9MX5
      J/4dKp3Ar37xM8aXtB/301h3iPLyFrIuySZSe4D1NQ4Ry096VpBDVRs4VJXLnvIWsi7OJnr0
      AOtrHSJxPxlZQaqqN9AYmU36aWrIzuvHkLJ+pJiQmZ5B0NAYaJxYMwdqasgbciE3XnUF2ekh
      wCI1LJsGN5C/shDnWUrBZfziR3eA1XYEYPjDDMwNQofR/462iQM7187jB99fh6E1oIk7qfRN
      ScPR8bb56+bzg++vbz8/nHbK650NOx4j1tpMOCWA3+898wLiQ0UCQIjzLHtEGeNHj+1kTqzd
      vzz+IOGAInvodL76lVtJMd/tgNFghgjpSsIBRdaQ6fzHV0+dn+E3ux0BXn+QlJR0Dq7dzead
      B8kf2w9tRWiOWWdeWPR6chJYiPPMcc5us5ye3ZchI/uwt3wVC9buIT0nj/SQl71b1rJsxXrC
      2SUMHdmHfXtX8ebx+RlhL3u3rmPZivVY59BjbwQzueaCccQad/ODb36TX/7mER78r2/y2zlr
      uv1aoveRIwAhziuF8ppdNzm+G+ZPy+dTd9/Lnp88wrOP/JgF/8gAO0ZLxGLGzffhT83jzrvv
      ZfdPf8dzj/yYt06aP/3mz3R41+P/a5hgmoC33ftpQ4HygPIy7qZ7+UJ1Pa8u3ciyt94kPb+A
      vvm5HNtjoeU08Iea0lrLbUiEOA+cyFFeX7iclMLBXDS6rJMWNluWvsHOlkyuu+IC3o2Jyl3r
      Wb5qPU0xhfJ4yC0qYdIFE8lI8aM6m19YwqQL2+Y7LUeYu2A5RUPGMrasL7HmOlYtX4YncxQT
      xpXgUdBcV8HKFWtIL57AmBF9MBVoO87RmhqaYzaZWSm89JNv8os3GvnDEw8zrn92Ar81kShK
      KSUBIESPo2n/q1QdrsY90/zusFnx5G95/UiIcUMHkJXqZduKBfzjuVdQZdP4/UPfpSQzeK4v
      LnowpZSSLiAhepwzbdDfzwb/VF7TZukrT7PgJfB6oLk1TkbOIP7t/rspSv8gblEneio5AhDC
      7RyL6gN7KT9QQUNLFE8ogxEjRpKfGUp2ZeI8ki4gIYRwKaXUWd6kRAghxIeOBECC2XbHO0AK
      IURySAAkmGXJFZZCiJ5BAkAIIVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAI
      IVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAI
      IVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAI
      IVxKAkAIIVxKAkAIIVxKAkAIIVxKAkAIIVzKk+wCRPJoK4ZzZBs62oiRUYJK74NSsk8gus+K
      x9i/dw9Hjx4jJyeL4pL+eLzeZJclzkBprXWyi0gMTW3VfvZVHMGyNSlZeQwo7UvA036DF22s
      ZfPWnUQsh1B6LsOGDsRvHm+jbeqOHMFMySYt9N7K7dhxqisPEczKJyPs77KKaDSK3991m/NN
      23GsnfOILvsNuvEQaA2Ggaf0EnwX/TtG9iCUUkmtUfQOtm2xdUc5j/5zBZXNHhytMZSiX7rN
      Z26YzJCBpRimmewyRSeUUsoVAaAdi11r3+D5OUuoa7YwTY3tmAybPINbr730RAg0Ht7HC88+
      yYY9RwkFvbRGLEZffB2zZ04hxWeC3cKcJ/9ONO9ibrhiWFv/mbbZt34hjz+/kGvuvJ/JZfld
      1tITAiC+bQ7Rtx5Etx7tMEdh5A4heNPvMUJZSalN9C5btu/mV8+upLoZ4OSdBk1hiuI/bp3M
      oIGlySlOdEkppVzRBdR0pJx/PPkiRZNu5L5rLiPN77B24Ss8+cLTFA0YxhWjCoA4i158itUV
      8IWvfpOBeSG2L5/L7556kfy+BVw5oQyUJtbSRGM0wrupWV+5g6eem0fWkOmMKclJ5sc8K9qK
      EV3yi042/gAa58g24mv/D9+UL6AM2XMTp2fFYzz1xgaqmzs7WlQcaoJn3tzAAyV9pDuoh3JF
      ANRXbqc6OJTPXTGVzLAPgHGXzKB8zx7WL1vKpKGz8TeU8/buBmZcdzuDizIAGHbR1Vy2aTVv
      r9rC9AlldNwcOtFG/vXcUzQF+/HJGy4j4EvcBvPQoUN873vf6/6CWqObUoHU07fZsBz1xLZu
      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
    </thumbnail>
    <thumbnail height='384' name='Crosstab &amp; Set' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOzdd3xdZ3348c85d0/tvS3JlizLe8bOcBIncRZJSAJJKJTS0tJQCnTQ8mt/
      UMgPKKsUaCGMQAaEEBJIyDJJ7MSJ996WtYe1pXt19zzP74+ryJYlW7Ily3bu8369/Ep8x3PO
      PX7O833OMxUhhECSJElKKoqiKOqlPglJkiTp0pABQJIkKUnJACBJkpSkZACQJElKUjIASJIk
      JSkZACRJkpKUDACSJElJSgYASZKkJCUDgCRJUpKSAUCSJClJyQAgSZKUpGQAkCRJSlIyAEiS
      JCUpGQAk6X1Jo7ujlZPd/cTler/SWcgAIEnvSzF+/u+f4Zs/eIqQdqnPRbpcyQAgSe9ToYAb
      vz96qU9DuozpL/UJSFKy8bn7aGpsYtAbJi0zB5tZR3ZhCU6zgVgkQOOxIxyvb0VnT2fB4iUU
      ZjlRFOhpbcQdhjSHieaGJgYDUapqF1GSl46qKMSjQdqaG2nv6sdktzEUOb3qL/C7+zi0/wAd
      vUNkF1ewcP5cnFYjId8gjW095JVUoHk6aetyU1FVhdNqumTXSJoZMgBI0gwa6jzBI1/+Mu8e
      bMFkMSFicWJamM9853fcvzyHV5/4Bv/1xJsozjSUIRfGrHn88GffY1a6nuf+69/51Z4OctMd
      DHiCRIIBnCXX8ItHv0KOA1792ff5r6f/QEQxoVcEfl+Q+SWJ4/oH2/nulz7PK3t7SE1PwdPn
      4rp7P8m//v2f0XXkTT7+uR/w8Bf/nVd+8i0aO+N858nHuba68NJeLOmik01AkjRjBL9/6r/Z
      eKyf+z77JZ7+zbP86Ot/SzgcJxKJ42razc+f3cji9X/BC8/9nl8++hXo3M2vn9tGXICqgsGU
      zm1//jmefvZ3fPbBGxlsPEDboI+TR3fwk2eep2DRWn76xK/57dOPszTHMnLc/a8/zct7e/nc
      I4/y6ovP8w8fuY7NL/2Bgw09oCho0SA//8YjBCxFPPzZv2d2XvolvVLSzJBPAJI0Y8I07a9j
      /rL1fPLem7HrweTPHXm3+Vg9riETi2rKONnciCCHqop0mhq3EoytASA1o4y771hHml5QXZyP
      ThGoCNpbjtCvz+Ef//bzVJVkAhEy7CpdAFqQPVvqMTlnUZWv53hdE4WVtVjZyLH2NrJSAU1Q
      MOsqfvDoI2RadJfi4kiXgAwAkjRjBHEBJksWxnHK2KgWIx5186tf/JBXrInaeyTsoMiRiiJG
      kkj8OUPA7cZmNZKb6RznsBphoREcPMYjX/kKBgRCi2NLzcOkNwKgmqzc//DDZJhlo0AykQFA
      kmaMgZQ0B7uOvM7OI1ezZFYWzSdaRt51pjoxG+3c8eDD3Lt2AQqAiOMLxDEblHOmbM3IwDfk
      40RjB7MzZoGIE3+vD1g1kp1pxWQp4Qtf/U9KnInO3XAggMGZztCJRgD0BgOKcu7jSO8vMgBI
      0ozRc9Od97H56z/gy//89+RlOHF1dYy8O2veYmbNSuF3v/oZxO6nOtvCjrc3Qc5CPvepezn9
      IeDM/xaXzCNH/xSPfvMrBD76QU7u28LOriClBYBiYMW6tfzyze/ytW99n7+6bz1xdycbXn2H
      Dzz8DxTP3AWQLjMyAEjSDFp40718PS2HHftPoFhSKLb7+Nev/QST2YA5o4R//dd/4dH//Qmv
      /OoxXlHAmZnPx9bXolNUckrLyI9nYRhupTGnpVJYNAubyUhB8TI+/fAnePSx5/jloz+moLyK
      hQvmYM4uQKcoVC69lS//U4Cf/vK3/M9/HQVFoXL+VZTmZmAezKKiqJB0hxz2mWwUIYScKC5J
      M6S94TB+NYWi3Ay0SIBnfvZNfvTM2/z4hU0sy7cCoGkxgsEwqqpiNFvQTbpVRhDw+QhHBY4U
      J/oxzfmCWCREJAaKTofZaES2+CQvRVEU+QQgSTNo11u/5f/96DXSMzMg4GMwFKb2A59mQa5l
      5DOqqsdmu5BbU8Fqd2A9x/t6o4Xhfl9Jkk8AkjSTouEATSeOUd/UTigWo2TOIhbPLUNVVFkb
      l2aUoiiKDACSJElJSFEURQ76lSRJSlIyAEiSJCUpGQAkSZKSlAwAkiRJSUoGAEmSpCQlA4Ak
      SVKSkgFAkiQpScmZwFLyEBpDbhehSGzUy1ZHKg6riZDfw5AveMaXVJxpaVgMKj7PEIFQFGdG
      Fmb96Flb0aCPQY8fmyMNm9XIyLtCw9XXg8sfpaikCIN66nthvxd/XEe6c/TcXS0ew+12EY2N
      3s1dbzSTlpqCKieMXZmEIOAfwucPY0/NwGoaXfzGwwH63V4sNicOu+W0PCTwDPbR7wmRV5iP
      xXDqe7GQH3dIIyPFPmolV6FpDLkHCEdH5yFVbyQ9PW1keREZAKTkoYV47XdP09AfwDyyIL9g
      7tUfZP3yMhp2bODZLSdwWs0jXxGo3Hz/A9QWpPHOq8+z+UAj6+5/mLULC07N3BVxDm5+hefe
      3s+Cq2/j3ltWj9xgsbCPP/7mp+xucvMX//QVFhTYR27s1n2beMedyiduv2bUaUZ8gzz3xKMM
      xizoTyvtMwrLuO/ee7DJ/VquUBr7Nr/Ky+8cZPktH+UD11SflocEDXve4omX36V8/hoeuu9W
      TOp7b8V58/eP8dbhXu7+q3/g2pqCkTw0UL+L3x728Tf334bhtHwRj4Z4+deP0hYwYzxtMSlb
      ahYPfOyjpAyX/DIASMlD0QgGYqy8/k6WVecnXhMCg9kGQCwcJHfuMh5at3LkK0KA2WoDYgSD
      QYwWI3v27WLN/PyRGysW9LLv6DHSU60MDflH7dfiHeygoS1K7ew89u86SG3+KnTDd308GsIX
      PPOJA9DiRGNx1n/445SmGE6dvqrHIhttr2jhgB/FbOHYoV1cv3I2TlOi1Na0KPv27caRmoLf
      6x2Vh2LBPvYeGmRBbQmHdx1gVXU+puGKgYhH8AYCY/cIEoKA18MNH/4bqjJOW/xJ0WE/LVDI
      7CQlF0XFYrXhdDoTf1JSsJz2KK4zmk6953SSkuLENFy1UtGxYPnVdB08hCsYGfnOUH87rSdh
      5bzy0ccSgtbDezDNWcrtqxdz+NhBAuH4pM/TbHOMOheH3Sqbf65wKjCndhXBzna6Bjwjr8f8
      PRw44uPqJXMZ9YAnBJ1HdxMrnsf61Svp6aqjfyg0uYMpYLLZR+Uhp8M2Kg/JACBJpzvXimxC
      YLYVsrg4wPbDncO1Lo36vbtIX7Sc1DPWX46H3ew62snS+TXk1SzG3nWMhj7PeCmf5Vwu5AdI
      lzuDMYvlFTq2HWwezkOC5n27MNcuJstsHLXlpxYPsWP/cRbNX0RuZTUZwX7q2rsnf7AJVhiU
      TUBScolHOXF4P9pQa+LvAmbVLiI/NdEMdHDDc/zfnW+MfFw1Z/OXf/XnFGYYQAGhU1i0cBmv
      HdpFcEkJxugg+5r7WHLjOpSuLaMO5erpoM8V5uaqYtAbWLK4gD27jjG/cPWEa/yHfW5+9p9f
      wmxMNAEJIahacisP3LVK1tqucEIH1QuW89zm3bivW0CKGmL30RMsXngveqVh1GdD3n7qT3Rz
      3z2zQW9kyZISdu4+wtW1ZUywSygIwZPf+r88ZzYN/1WQX7maT370lpGnDBkApOQiorS3nMA/
      eKqjN7W0ZiQAVKy4gfvWLubUGrk6MlPMwHtNNwqVixfy9Mbf0OP2Yx5qwRUwUF2ZT2/XqAPR
      cmwfXn0G7vZ6PO0CvSWN1vqDuAPLybAZOBeDxcFd93+cYuepW9RocsiHgveJotlVKBt20NLZ
      T7nDR31bgL/6aBnhQ6cHAEFX3T561GxCXQ0c6YKozoGr/QhdrhsoTrecNf0EhVs/8tfMTj/V
      B6DTW0dVIGQAkJKL3sr1N97N6vlF475tTUmloKBw7BvaqbZ7Y2oJ8/Pj7DveQU7/AdKrlpJp
      Vuk9/eORIfYdbkWvqWx49VWEEKDG8Xe5aO11kVGWfc7TVHU6MnPzKUyXu7e8HxkcOSwss7P3
      cBNGZyem8iXk2XS0nPYZEQuy92A9NlNkJA8papyIZ5D61k6K08vPlnyCAhm5BRRmn32rTxkA
      pKRz7mb+yWyPoaN20WJe2vIWTVE/19xTOaZmPtjRQl/YwMc+9RlmZZqHj6vx4s+/ye79DSwo
      PXcAGD6bSXxGujLpmLNgMbuf28ZbNsGSa+4Z07TnG+yhudPFh/7qn5lfYAdAUQTvPP8Ttu+r
      47qFEwQAJs7PMgBIyUOAJkATZ4kACrQe3MGTQ22nvWhk9U03MSvLiiYUxPC8mvLqWvwvvEk8
      pZyKkuz3kh/RXH8YXVolxZlW1JE7W6V6/mIOv70fV3A5AF3H9vLkk70j7y+7/hZKrQrRUIA/
      Pf80O0ynxoSk55Rxw41rMMtOgCuWBghNQQD5JZWY1Zdp6rVxz9xiYHQe6m4+ypChlKoC52l5
      CMrnLeKtpzfR6b0RAzDQfIynf/XU8OgehZqV1zK/KB2E4K0XnuaQ5VQxb3XmcMvtN43MJZEB
      QEoeqollq1eTnp867tv5VYu5VrQzau6kYsZuMoKip3bpStTsRGFvTC3k3rvvJGQrI92sAwQ5
      s+ezLGBGBdJyZnH7nHKMZxTWpXOXcm0sDb0QZJXP49qQY9T7Op2K3urgquvWMeCNjCoQUtMz
      0ctOgCuYQuW8ZeRaC1EAvS2TO26/k+5oGnnWRImcUTKbFeYQegUsKXnc88F5YwJ+TvFcbr5F
      w6hp2PIruHH16KHFBoMeVW9k2dr19LjCo/KzxZE9Kk/KLSElSZKSkNwSUpIkKYnJACBJkpSk
      ZACQJElKUhN2AsfjcWKx2EQfkyRJkq4wEwaASCSC1+udiXORJEmSZpAcBSRJkpSE5CggSZKk
      JCYDgCRJUpKSAUCSJClJyQAgSZKUpGQAkCRJSlIyAEiSJCUpGQAkSZKSlAwAkiRJSUoGAEmS
      pCQlA4AkSVKSkgFAkiQpSckAIEmSlKRkAJAkSUpSMgBIkiQlqQn3A5AuH0LT6Ol1E4hpk/6O
      2WohP9024efcg26Otg3SOeDF5QkS08BoMpGV6aC8IJ3ZBWkYVGUqpz9GLBLhRGMXh1p6ae72
      EIoLbHYrs0tyWDw7j8IMK+d7RC0Wo7mjlyMt/TSdHMQdjKHT6clKt1OUk0Z5YQbleSkYdBOk
      rMVpae/lSOsALScHGfBHUfQ6crNTmVuaw8KKbGxG3QX/9ktFCEF/nwtvZPJ5SG8yUZzlOGt6
      vb0u/NHJp2c0mynMtE/68+ej62QvRzu9pKSlsrgi47xquJFQiNZOF639XgaH/Lh9YeKaSNwH
      aXbys1KYU5yBwzxxsRkLh2jv8yOY/Gr7GRmppFhmtkiW+wFcQYI+H99+9E+cCE7+O/kFJTzy
      8SUYxnlPaBpdXX1s2FLHtqYBBrxhYuPkBqvFRGVJPg/eVMOcXPt5F8rjGezt5fEX97GrfWjc
      wiPN6eCWa+bygWUlWAyTu427O7v5zeuH2dPqwhOKj/sZu9VMcVE2f3//SnIt46UrGBp08+vX
      9rO9oR/3OOno9TpKi7J58OYFLCpKZZrj4kUlRIzvfu9F9vsn/x2rM5sffGYNxnHei0XDfOcH
      L3M4MPn0UjPy+M6nVo2b3oUQQmOg38XG7XW8drCLAX+U+bU1fOmB2glruEIIensG2HagmbeO
      9tDvCeINj593jAY9ORlObrqqmnULC7Doz54vmw4c52svHSU86dJV4c51q7h3Re603F+TOqKi
      KPIJ4AoSDvtoHIzgEWC3GtFPIqcIZfwcGA4G2Lz9GM9ubabHn9jy02m3kJliITvFitOs0O8K
      0DngpdsT5sDxZloHvHzmvhUsKRy/Njg5Av/gAN95ahtH+oOgqhTkpDF/VhZ5dj3HWns51u7C
      5fHy7IY9lGXbWFGRPWGqHc2tfOu5vbQMhlFVlfzsVCoL0pmVbSUUDNPcNUTHgI9ud4Dmjj4G
      Q/FxAoCgt7Ob//nNDvb3h1CG06kuTKcw08qQy5t4Iujz0dDcxXefDvLw/StYVZY2YzftlMUC
      HO9P5CGr2YBxoichQJyjHhuP+jkxkEjPZjFM6inxfGrF505Iw+32sHVvIy/vaaPDHT7tPWVS
      /ybxsIf//MXbNHqjAOj0OnIzHNitRnKcFqx6hUFPgD5viK7BAO3dg/ziD9tp6JnLp9fXYDxL
      DGh3eRj0R0BVsZv1KJO5V6frupwHGQCuIIEhL24BYOTTD64h1zRRE4RAbzQz5lNahOdf2s3v
      9nUSAxw2K+tWzeaq6jxKshwYh2s2QmgM9Ll4fesxXtrbgbuvn1+/foTyh5aTeracPwEtFuXJ
      3+/gSH8QVafjxjXzuH91BZn2xDPKBzSNppZ2Hv39fo4PBHlxezvzSjOxna22JQS+wT6+8exu
      2t1RTDYbd183j5sXFpBuM476nNfj43BjF+8c7sQ0TsEX9Hp5/A+72N8fwmg0cNeNi7l1cSFp
      1veenwThYIitO47x2FsNeIbc/PSP+8n5yCrK080XdD1mWsTjoU8A6PnoXSuoyrBM+B1FZxj3
      CRIgPORlQAAY+MS9q5jlNE2Ynqo3TLHgEfj9Abbva+Clnc009YcAMJuNKLEowfEeY8+Wkojj
      9kaxW00srCpi9bwCZhekkW4zoY4EM4HfF+DA8Taeffs4TQNh3t5yhPLiHO6Yl4E6Tune4/YS
      B8qK8vjr2+ZinkQAcKZMpWJ1YWQAuGIIBrqGEIDOnsK8ogwchgtsgxZx2vt9xBWVxXPL+Pht
      tRSlmMfUUhRFJTM7gwfuuop001Z++k4HjS3d7GsdYm1l2gUcV9B6pJ5XGxN7TC9fNo+PXz9n
      dBOPqjJrVgmfv0/ly7/awbETLWyuK2F9Tea4ScbjMZ55aQ/t7iiq2cpf3rOKddWZY2t/ioIj
      xcGqxQ5WLa6EMz8hBIcO1LGlI4Ciqnzknqu5ozbrjJtbwWSxsPa6xVhUjf9+vYHB7h6e3d7G
      F9bPnlQt79ISDHR5EIBqtTO3KJOStKkErtPypM3B3MJM8hzT1bBzdj2tnXzv+d0c6wsmjq3T
      UTOnmPvXVrFjw1v8sWHybaSKomPF4krWXVtFaabtLM15Cja7jauWVlOR5+SrT26lzRPnlR31
      rKtKx2o480uC/q4hADKzs5ldmDG2EnaZkKOArhRCo7U70dCanevApE7tn04Yjdx16wr+z0PL
      KE4dW/iPpnL9mmoK0oyIaIiG3qELOqYWi/LavhYAUjOz+dj1FWdt388pLuRja0ogFuWVvW2c
      rYtxoL2NV+oS53P3jYu5oWqcwn+MsZ+IBb28eqALAZRWVXDH/Oxxa3bvWblmAesqUgE4cqiR
      Fl9swqNeckLQ1uUDID3dis10tnr95NNr7U50JmRk2rBeaIXkPLl6XTT2BxGo1Mwu5t8+cSNf
      /cgKagtSOGtGOQu9OYW/vncJs7LOVviPlp2fy13z8wHoPjk0/oAMEaatOwJAQb7zsi38QT4B
      XDFEPEabL/GoW5RhmVrHo2rkE/dcRXqqZdI1AL3VQoZBTwsR/GfpJJuI3+dh/3Dtf9WiCrJt
      58p+CrU1s6jc0UpL80na/AsotY2+lUQ8yus7W4gBqXl53LE4j0k0aY/LNeijpz+AojewbnHp
      xNdFNXD9ygo2N+7G5fGz50Q/ZUtyL+zgM0QIQas3UWBnO81YLrAZbyQ9LU6rN1EpyUs1Y5pk
      Z/1UGfR6amYXcds11SwoTkWvm8F6rKKjOHt4VJ0YryoBWsBHWxRAoTTr8m4alE8AV4hYOMKg
      b/gJICUF3VTaGxQdmWnWc9ZwzxQPhfHE4oBClmPidt7x9LZ30hMH0LFqXvaEv8Ga6sCRmUo4
      EuJw09CYLjK/18f+hgEAVtWW4jRdeHYe8vtxhcFo0FGSO7m22MLCLArSLSBi7Gnuv+BjzxQt
      HqfPnQjAaY6UcftBzkc8FmfAk3iiyHCmTvsw4bMpmVfBPz+wkiVl6Rh06sx2wGtxmnsTv1lv
      0o9bEfMNDOEH0FnJtV/YvTJTZAC4QgSDYVzuEIqikJ+TMn7V46IR7D3QQoc7jKo3kOucuONw
      bBIazW1eBGBKy6AsZeLmB0U1oKhGhKbR3uvmzAgw2NdLo18DdKyelze1oHha4tok+xD1VjtL
      CxLj2TtaB89jyN+lEY/F6OsdrrHnpV7w09J7opEI/f2J9vb83JkbDqs36LEYdZdk5FVvZw+v
      HugCYEF1HvYxc0EEXV0eAOxpNlLNU2xmu8hkALhC+IMBBgKgqCoFWec/QerCCVrqW3j8rQaC
      GhQV5LCw9Pw7gIWI0e5JNGEV5DkxTeqxXcE+fA5dHj+jI4Cgp8tNHFAd6VSkj77RhBDEYnGi
      sTiaNvEAO4VETVLTBMFQdHI/StFRUJB4WogGPLijl3cEiEb8dCYqrxRm26ach8LhAD3D8wkK
      c6ae3uVMaBon27v4yYt7aPLGsVrt3H91Bfozop4QgrbBRJDNSDFjmXCk3qUl+wCuEB6PhyGR
      KKhCXjf1p0280et1GPR6LBYjNrMBk15FmYYhKVo8xvHDTXz/pQN0+eOY7HbuvaGGjAtoahGx
      GP2hRADIdlqYbLNt9nC5fnIwdEaCcZpPDndAZtkxAuFwhP5BD4fquzje5SUYTRT+RoOeotw0
      llYXUpRpwzTOkNIMp50sm0JLIMLe+h5WFJRN6vzMNjMKENci9Ptj5Bgv3xpf0ONlQAPQEQ94
      qW87NVpGr9Oh1+uwWEzYzHrMBt2Eecjv8eAaTi/qH6K+zTs6PYMeq3k4TxqmJ0/OGCEQQhCJ
      xvB4fLyzu54Ne9vp9sew2Sx84t5VVGWM07yjaZz0JPKlSRGc7Bmgb/gtRVEw6HUYTEZsJj02
      s2Fm+y/GIQPAFSExfE8DiEf5+k/fHPdTBr2eqrIcls0r5sYFhVgv8KYTQhCNhHll0z5+tbmV
      CKAzW/izO5axZnjkywX8hJGJLiadyuSm6cB7LUWxyBkdz0LDPfyayaDxxuaDbD3WweEO77iz
      mTnUxjMbD7N84Sw+flMtOQ7jqDNwZqYwK8tJS8sQb249ym2LCily6s95/YQQ2G02rECUyTcd
      XRqCgW4PiSsW5wdPvT3up3Q6HZXFWSyuLuLmJcWkmM92DUan951fbBo3Pb1Ox+zSbJbMLeam
      RUU4TBMHlktlsH+Awy2DxDSNIV+YXk+Qru5BjrQPERGJAnxOeSEP3TyfBYXOcdOIxzX6+xKP
      WSca2vliQ/u4n0t12phXnsvapeUsLEkb8yQxU2QAuEJYnTZSDQr+cQbgxIabOKKxGIfqT3Ko
      /iR/eCuNh25bxPVzs8+7na+j/SQ/+/1e9vckHjMyM9P49H2rWFjknJbHfJ1+erLde/dMR10r
      /1s3/JpOpbwgg/KcFOwWAyIep6d3gD2Ng4TjcbbvqaeuY4gvf2w1pamnanCqwcIdV5ezs3Uv
      Pp+X/3hsI5+8azlLS1PH7Vvweb3sPtzGxt1N+GHaljW4mIx2K5lGlaFxImRcE2hAPB7neHM3
      x5u7eWHzce67eSF3LikYdyij2W4j3ajiHSe99/JkLB7naGMXRxu7eOHtY3zolkXcujDvsmx7
      bmvr4ofPHyY8zntOp42/vGsla+ZknbPvRFEgJ9WGoXtsM6IQYqRy4vb4eXdfI+/ua6JmTgl/
      eccCZqVfQN/aFMkAcEVQmL+0lh/Prx63lhmPxRny+Dje1M2Ww20caPcy6HLxo99tI3rvatbP
      HX8S1ZlikRBvvnuE37zbyGBIQ1EUauaW89m7F5Jpmb5ONy1+YcNIz2XOrFyWVheyZm4BGXZj
      YnTI8AnH43FcA4M89ep+3jkxiKunlx+9epSvPbBoVMFWWlnKh64e4LHNrfT3ufjmL96gpjyf
      xRVZ2Ew6IpEoQ0M+jjf10NAfJBSJEb+sa/2nUyitquCH/1I6bh7S4hpen5+6pm62He1gb4sL
      v8/LEy9uJ6it4sFl+WPSq6ydw//OLh8/T8Y1vF4fdU3dbD3Szr7WITweD4/9YTshsYp7F11+
      Q2YdKXbmlmYS1jRCoQhD3hADwcT8joA3wP8+8w5vVeSzfmUFS8szxw1iOr2BBz58A/ecZXG8
      SDhKT98ge+s62Xqkg/ahKEfqWviyK8C3PnktOdaZ7TOQAeAKoaoqFvPZ65lOh4XC/EyuXlrJ
      zt3H+dkbJxgKBfn9G4dYWHoNeRNkrP7uXh5/aS/bWtxENbDabdy1tpY7lhRN+4iL6V5+cFZ1
      Bf9+30LsZ2le0Ov1ZOVk86n7VmH63VY21Lk4cayJvZ3VLMs/NU5b1Ru59frFOCxmfvVOI32B
      GAfq2jlQN/YxXq/XUVGaR6EjzpsHe1FQZmwY5IVSlHPnIYfdTH5uBqsXV3DwcCM/efUoPcEo
      L71+gKuqsil1jC4uJkrPaTdTkJfJ6iWV7DtQz09fO0Z/OMyLrx9keWUmxfbLq/gpKy3mCx/N
      RwiIa3EiUQ1/MERLazdbjvdwrKWfvUdaONLQyVVL5/I3t1RhPvO2UhT0ej1ne8i1WYykpdqY
      U17ALatm8/yGfbxyuJeh3l6efKuRz62vnOJotvNzef0LSFOiKApmi5lrVtcSCAT52eZWevsG
      2ds4yG21WeN+RwhBZ0cHX//VLto9icWrKmfl8tBNC5hflDLloYKnnRwGJVFn8kWiCCGYzNoJ
      vcPP4w7r2M7V9+KIpqjYJtG2bLY5uGttNfuat9EbiXGgvpelecWjTkNvNHHdNQuomlPEvqPt
      7GwcwBuJI4RAVVWsFhM1s3KYV5pNSY6T+oMHePNgLzq9iYxzTmy7chjNJpYunkM8GuY7L9Xh
      93t451APJasKLmi5C5PZxMpl1UTCIX6woYGhoSG2HeujeFne9J/8FKg6FYtudEDLSLVRnJfB
      VUtm09bRy/ObjrC1YZBNWw5iNhv5xNqyCwr8iqqSnpHGQ3csYcDzDlvbfGzb28Rf3FhBulEG
      AGkqVB1rlpTz2v5OmoeinOhxjx8AhKCvq5NHfrWTTk8UvUHPjVfVcP/VFWSMU+xgexIAACAA
      SURBVOBO6ZT0enKsFsBDtztIXINzrKY7om+4tSj/zEXLFB359sTN2u0KogkmNQ49JyeTygIb
      vc0+Ol1u4qII/RmlmqKo5OVmkpebyfrrNCKxOJoAnU7FoD/9aUjQ050Y821wOEm9fAcAnT9V
      x4J5s5i7s4V9PWHquwcQ5E+683689JbNn0XlnjaO9EU40T0IXF4B4Fz0BgOzygr4dJYD2++2
      89qJQV7bfIA1tXnMy77wtnuLw8mdy4vY1naMWMBNkztKevbMTR67HPtipGlgT7OPzEKMxMdv
      j/QNufnxM7vp9ETR6XTcd+sKPnFj1bQX/gCoesoyEs0t3R0u/JPa1EaQWFFFIddpY9TsN0VH
      yfCy1KGeAXonOQtLp9dhMyeuiy8cm3h+gKpiMhqwmAwY9aObwrRIgF3tiSF/ZSXpZ10x80pl
      tpkpTEvMxIjEtSkvVmxxWClwWgEIn8emRpcTs93JQ7fNJ1sPIhpm86He811+6AwKOYWZvDf3
      /Gz36sUiA0CS0qJhnt+wlz19ibHgd922knuXFU5qffgLo1A8PIEsHnRzrH+8sRajiXgYEQ+i
      6nUUF6SNmf2cWZCBDUALsKVucHIFlKJgGU7HotdPqW+jt3OA9n4/qHoWlmRMIaXL13T3cYv3
      wXQxqzONqpzE06fHG7iCBgKMJQPA+5R/0Evn8OJxNtPYlr6WxjY2HOwDFJasWMCfrSi86GOR
      03PzmWNRAMG7+9qYaBdBV98QvSeHMJsdLCp2jCk6MtKymF+YeKp4Z38TwUlsSxj2h2gbTIzT
      zk2Z3AqQ4xPsONBIT1iQ6nSwrHJyI62uJGFfiHZXYnKXzTi1YAkQ9AToGEpce/s4efJKEtcS
      eW3yM1rOrre9F89warYZnjksA8AVoKO9k9d2tRGc9GOzxpa9DXQMxdAZTNTkn1E7FTG2723F
      J8Bsd/AXN8yeVIfsVJktVhZVJfoidh9s4kTfOfYR1GK8vbOOtoDG3Jpi0sesuQ56i5kbagoA
      aK1vZXO9a8LH8ZaWkxzvCaOoKrPLci54UlJbYzMvHEwsAFc7fxb5Mzx873y5Bvr5wzuN+Ce9
      F7DGwSONHO2NoKgqNSU5o4q6vp5e/ri1mcCk9wLW2HOwkfqBKIpOz7ziiXd5u9iEpuHxhSb+
      4Bnc/b0c604MD03Pdp4aKKHFeHd7HQfah5jsTrthn4ff7+gAwJqeRYVzZgOjDABXgIDPy1Mv
      7uRrT+/kQKuL2LmmnGox9u46wjM7ThIHigpyWVw2etZiyD3Evs5EnWN+bRkF9ukZ5ukeHODd
      g628e7CVVld4TPOBotOxbvksbApE/B4ef+UQPf7x1t0RHNp/ghf3dGOwWLlxYeG456coKvOW
      VDLbrgcR54mX97C3beyqoSPn19/Hk2/VExSQnpPLytLR69cILU5nn4fIOZ7phRD0dXbyw+cO
      MBCM40xL5/YlhZf9vsCRcJDnX9vD/338XfY0DZy7DV6Lc+xwA0+81URUQGpaJtfOzRhVRwiF
      /Pz2ld38x5Pb2Ns0cM5rhhbn8IET/OrdFmICsrOyWD17/PWkgt6hkTxU3xe4qJskxiIRnvrd
      Jn7y+jFa+/1oExbaAld/Pz99+RCDAvRmK9dUZYwaFNDW3sk3frmJx944wUlX8Jxphvw+/rBh
      L7tP+kFRWLeiHMtFa4Id35X9HJYkVL0OQZyDx1qob+li7qxcblhcSnGmDafFiF6nEI3GGHT7
      2LyrjjcOduKNgsnm4IM3VJNyxjrtAX8IfygKqJhFjH11nZM/GSEwOezUFKSMflmL8cYbB3hy
      fy+gcNetV/Pna8ZOHsooLuLDK9r4xY5O6upb+P7vBA/eUEVZlh2jTiEQCLL/cBO/3lTHYFTj
      +hWVLC06+/LMZlsKn7i9hkeeO4jXNch/P7ON+9bOZWVFFmkOEzoFQsEQLe09/PrNIxzuCqAz
      mLj7+rnYzrjZtGiYZzfsxK1YuXlZOaVZdlKsRgx6HULT8HoD1DW08+TGOk56IphMZj580wJm
      Z838DM7zpaoqqk7Q0NzJfz7Rx5yyHK5bWEp5roNUqwmjXiUWizE45GfH/gY27G1nIKShN5q5
      5+ZaMs7YO0DV6VBUjeMN7XyjvYfqshzWLiqlLMdBitWIUacSjUYZHPKzbW89f9p/EldYw2C2
      cs+6eaSNsxeBEHG2bz3C995uA+DaNcv5+1tnjZqsp8UiNHZ7x3z3Pa5wIrAFAgHqOwbGzGDO
      ykgh1aJ/74B4PQG2njjA9v1NzCnN4ep5BeSnW0mxGjEZdeiUxHVxewIcPdHBht3N1A+vgHrD
      VfOYlXr6sFEFo0lPIBjixU372H6wkaXVRayam0dOigWbKdGMFgiGOdnVxx/fPcGB9iFiAnKK
      Crh7eeF5LdE+HRQx2WcV6ZKJhsNs33eC595ppM0dGul0ctrMZKVYMOlVQqEQJwf8vLdXizPV
      yQO3LOam2twxm8d31LfwpSe203+BE3LLa2v47gO1o17z9vfxpcfeptEdQ1H1/M1HbuDmqvE3
      S4+FAjz6zDu8ccKFJsBkMVGZl4rFoOB2eWjoTdT8LHY7X/zIGuYXT7T+kGDnlv3875sNuEJx
      UBRyMpwUZdjQ68Dr8dHQ6SGsgcFo4tarF/CR62dx5nBrLRzg209tYsvwpjVZaXZy06yYjfrE
      Wvr9Q7S5Ek0GJpOZB25bym2LCi5ix/n0icei7D/cxDMbj9M4EBxZksBmMZKdYsVi0hEJRzjZ
      7xvZU9dmt3HH2gXcu7KYM1vgYtEIew828tu3TtA8eCo9u9VEdooFs0FHOBymc8A/kp7dYeee
      GxfygaWFY/IkQMjn5Rs/f519PRFA4cN3X8uHl+WOykORgQ7u/867F/xkcM/da/nYspzENYlG
      +OMrW3nuQB+e0KmbwWI2kpNqHd7kXiUSDtPV703kLcBoNLJ8USV/e9s8bKN+iGDINcRLmw6x
      4XA3Q8OfV1WFzBQraTYzOkXg9vjoGoogAEVVKC4u4DMfXELFJPZnnk6KoihTDgBaPDY8Rnr0
      RJx4PAaKim7CrQsFnt4uBmJGSvMyURSNrpYW1NRsclLtUzm1952A18f2g828vruZxsEQ8bgg
      LkRiqIYCOlVFp9ezsraMO6+eTXnW+Ev0djW18cjTO+mf5KrHZ6qsncsjH5x72iuCPTv28fUX
      ThAFqufN4ZEHF53z8TISDPDCxgO8tKcDTzg+ajkBvU4lOyeTj65fyIry9Em3U9afaOHpjUc5
      1OkjGhs9bFGvU8nITONDN87nupqccde2EfEYuw838cLbddT1B4nFtVHnpZCYAVxUkseDN9Sw
      uCRt+ibKzZBoKMT2A028uaeZ4z0BonENTYjE7Gwl8aSg1+lYMKeIO6+ew7zClHM2D4YDAbYf
      bOaN3c2c6Hvvmp2Rnl7P4qpiPnDNHKryxnbmJwiajtfxL0/sJwwUzyrhax9bgeOMp9eoq5M/
      +/7WC55Nfuuta/jY8lPLUAghONnezbuH29l2tJMub5T48G/QTtvxK/E7dFSU5nLHVbNZPjvr
      nFs9drV389b+ZjYd6sQVig+nmXhPURR0OgWnw8FNKyu5ZVkpqeaZb4yZlgCwa8PTbDw4wO33
      P0DNaUPhNv/+l2izr+e6muIJUhAcfPk37PCn8xf33YxOifGHH/wX1lW3c9PS6qmc2vuYYMjt
      pa3LTe9QiFBcYDTqyM1MYVZBOtYZ3ixDxIJ8+ydv8m6HD6s9ha/+7Q1UpE5ueTS/x8uBui5a
      3CE0AQajnuqyXOYWXeAKiUKjp2eAA4399AWiWEwqcaGnuiybOQWpGCax/K4QAtegi6Mt/Zx0
      hRAoqIrAYrUyryKXsqz3Q8VE4PP6aety0eMKEogJDAaV7HQnswrTcZgN55mHBF6Pj7YuNz3u
      IMHh9HIynMwqzMBuOvcoIhGP8Itfv80LxwZAMfHI59ZTmznD2ylqGl5/gI5uN93uAENhDQMa
      is5AQZaTsvx0nOc5RyYej9Hb56a9x4PLHyUmwG4zUZKfTkGm45IuH6IoijLlsBNw93PyZD1/
      fGUjlX9z38hjtd/dQzQwuR52RQfKafFU0Skosn/6HBRSUp3Upo6/JO1M62zp4livH1Wv54Pr
      F1I+ycIfwOZ0cNUyO6tOr2lPabtLlZzcLNbljB6WeT5pKopCekY6azLSR4/mUKY+5O/yoWB3
      2JnrsDN34g9PKj2H00GN00HNBXx7sHeAfa0uFEXl1lsWMW+mC38AVcXhsFPtsDNdVU+dTj8y
      q/xyNC2l7MLV16L2HGTn0ZPjvu/r76SxvW/k71osyIkT9fhCsek4vHRJCXYebGEwIqiZXc76
      2pwLKCQVFOXUn+lwenpTSXNUOtNyZtJYgiNHW2gPaBQWFvChlcXyWs+QaQkA1qwyrl5awWuv
      vU5onI7F7uM7+OOWPSN/10KDvPjKq3S5zn8MrnR5iXgH2VTnwp6axodvnI1tMgv8SNJpYgEv
      G4/2YbTYeHB97ZhRa9LFMz1XWlFZsGYdqZ6jvHuwdcwkCCE0NKGd/gLivY4i6YrmdgWpLMnh
      oZsWUJ1ju9SnI12BfL4w+dnp3H/DfJaXXB7Nmsli2rqerSk53Lx2BU+98hIrav56upKVLnPZ
      xYX83YOFl/o0pCtYanYWn/zQ+MuVSxfX9D1rKTrmXrWO/Egjm3Y1XtQZfJIkSdLUTWtjm87o
      4M7bb+Hdja/QFzj7IHPZwSNJknTpTfPsA4XSJdcwZ+M7bD/cx/rliVcNZhMthw9z4FglSnCQ
      vVs309lzqgNYMHrZ2TP/LkmSJE2/KQeArJJKLGmnFnZSVDO33HUXvL2LwvTEGi75NWtYW9/D
      pj+9hsFgpHT2Ilbm+3FYE4dPySukIiV7+MlAIb+iClv6RNP/JUmSpKmYsbWANC1GKBRBbzRh
      0OlmYvVhSZIk6SymZSkISZIk6cqjKIoiZ1xIkiQlKRkAJEkCEtscxuKanKCZROSGMJL0fidi
      vLxhD1ta3Ke9qLByzRLunJdBLBrlzbf28Mu3WoiqUDV7Fg/fvZA8+3iL+mkcOtDAM2/XcazH
      j95oYuWCMj56Sy0ZZh1aLMK7O+v4/ZYGWl1hHHYra6+ay32ry7AZdISDfl56Yx/P7TpJMC4o
      K8vnk3cupSrbOlNXQzqN7AOQpPc5Leznm09toaCynGXFp5aydqamkJ9qZM+W/XxvSw9/d/9K
      KuyCnz63HX9KPv9y7wKsZ+zc0tvaziPP7mXZylpunpdD2Ovh58/txlpWzmfvqKbx8DG+/XIz
      9966iOWlqQx09/A/L+xlyeqVfGRlDi++vJVNnXE+dddSss2CF17eyYGAiS8+uIpsm6yPziTZ
      ByBJSSAUCBOMxplbkU9Vac7In/xUM7FQkDeO9nDj6nksL00jPTOdP79lLv3dPbQOBMek1T0w
      hDUlgztWlJGdaqOoMJePXFNKr8dLJC7o6uwnt6KUm+bnk5FiZfacMtYvzOFkj4dI0M++rgC3
      r11IVa6D9FQnD9yxCMXt5tDwHtXSzJIBQJLe53yBMKGQwKTTcHkCBMKxkQUbI4EI4ZhgYUX2
      yOez87PIUeJ0Do0NADkZTiJeD7vqe/EFIwy6PLx5pIvc9MTmJtn56bi6uzjU7iYQitDb28/O
      Y4Pk5jjQInFiUQ2L8VRN3+xMY0W+gZZxgo108clnLkl6nwtGwnhCUZ74wzYsKmiKjnnVJdy2
      rIRIJEowomE2n7Yhk8FMoUVFG6d1OKe4gLsW9PHYs1t4uzCNoMdD0Ozki3dVYtIpVM2p4MbW
      Ab755NtUFTjp7hzEUVTG3UvzsKhhsuw6Nu5ppipzNla9gj8Qwh2K4XGHZ/KSSMNkAJCk97mC
      wgL+4y/T0AAtFqOuqYun39iLN67n7tlmxuxKeI61WIYGBnm7rod5tbO4pjqLgM/LS5vreOdw
      D/etKKCrs4dtjV6uW17JsuIUerv7eGHHSfa0lHD97Aw+dEMN3352D//npyfJsenoHgri8oVZ
      XSwbIy4FGQAk6X1ObzCQnZky8vf83AwMWohXGrrR5lZg1KsEg3FIGS4OYkFa/Rql4+xXu+tQ
      Az5nPv/4gYVYdACCeel6Pv18HdfXZvHuO8corK3mkzeUJ74wp4BUncbvtx5n6ayryCsq5Fuf
      yaGzb4hIXCU708azT2/EdCm2gJRkH4Akvd/5/QGCUW3Ua5FwFJ2qYnWYcZhUdtZ1jbx3sq2P
      PlVPYerYDX40LY5Or0M3EhsU9HqFmKYhhCASEVhNo+uVenSIuDbS76DqDRTmZTKrMJ3wQC/b
      +mFejmNaf7M0OfIJQJLe5/ZvP8AfmmPcsrSU/FQjXR3dPL69hztvXYXVaOHmhQV897UDFKfq
      KbEJnn3pALPKKijJMIHQ2LnzCBu7Vf7pjrnMLs7n2R2HeWKjgVUV6UT8AV7YdITq8lKcFiPz
      5uXy480HSdVrzM+34xoY5OnNjcxduRC7QaHxcD2HfTqqC1II+X08/6d9zJlTSWWOnAdwKch5
      AJL0Pucb8rBpVz07m93oVIhpCksXzebmhflY9CrxWJQt2w7zypE+DAqk52Tz0Loasm0GwgE/
      333sDfQV1fzDzZUomsaR4838cVcboTiIuCAnL4cPrZ1Dht1APBJh594TbDjUg6JTiMcF1VVl
      3L68BKdJR3tDE0++3UJICOJxQUFxPh+6djYZVlkXnWlyMThJShZCEIvFCUfjGIwGDDp11Iq8
      QggCgTBxAVarCf1w+39b/Qm+9lI7X/7ra8k9rZCOx2KEInFUnQ6zSX/GJk+JY4UicQwGPUa9
      inLaweKxGIFQFFQddoth1HvSzJEBQJKkczrZ3E63amdJSdrEH5auKDIASJIkJSm5FIQkSVIS
      kwFAkiQpSckAIEmSlKRkAJAkSUpSMgBIkiQlKRkAJEmSkpQMAJIkSUlKBgBJkqQkJQOAJElS
      kpIBQJIkKUnJACBJkpSkZACQJElKUjIASJIkJSkZACRJkpKUDACSJElJSgYASZKkJCUDgCRJ
      UpKSAUCSJClJyQAgSZKUpGQAkCRJSlIyAEiSJCUpGQAkSZKSlH6iD2iahqZpM3EukiRJ0gya
      VACIRCIzcS6SJEnSDJJNQJIkSUlKBgBJkqQkJQOAJElSkpIBQJIkKUnJACBJkpSkZACQJElK
      UjIASJIkJSkZACRJkpKUDACSJElJSgYASZKkJCUDgCRJUpKSAUCSJClJyQAgSZKUpGQAkCRJ
      SlITLgctXd6EFodYGOJRQAFVD3ojqDoURZlCwiLx36mkMcnjCC0K8TggQNGDTo+iTkPd5L3f
      ABf+O4RAxKOgnXZ+esPUru37mNDiibwoNEABnWHqefESEEJL/A4tzsh9pdNfcb9jIjIAXKGE
      FoOeA4iGNxADzRBwg6aA2QnOXJTMJVC+Bhyp51WYCi0GfQcQ9a+Dfg7Kyru5GFleaDHor0M0
      vYEY6oKgL1FoGOwo9kxE7tUoZQvBaD7vm04IAbEANLyE6GuContRyion/zuEQIgY9BxBNL+J
      8PRCyJcIKEYHij0LkX89SkkNGIxXVKEghID2nYhwdPJfMmejFM0++/UTGiLkRjRuhL7DCL8b
      opFEoWlJR0mdDeU3QFrW9AR2QAQHEJ11MNnNqoSGUrEaRdWd/SNCg6gP0b4DOncgvC4IB0FR
      E//uznxE6c0oeeUourOnM+GpdO9AtB8HlESeyluFWjT7gtObCkWI06tJY8ViMbkhzGVGBLoQ
      m7+KaNszupZ7JtWKsuZbqNXLJpfuwCHEvl8imrckbiz7OnQP/b9pOuuRoyDcjYht30a07zv3
      +VvKUW5+BDWnfPLJx8OI5tfQ9j0Ogx0AKIu/h7rsqsmf38BRxJZvIrqOnfuj9rkoyz+DUrH4
      oj8oTRchwmiPr4HweZyw9XrUP/vGuAFAaBE49CTa3l9CJHyORCxQfi/qij9HcTjO86zHOW7T
      c2hvfiNR6Zkk9RPvoOhN46cX8SAOP4k4/FyiMnJWeshdh3rt51FSU87zrIHoAPHfPQge16nX
      lvw7uqV3nH9aU2Sz2RT5BHCFEb5WtFc/N1y4qZC5BKVoDWRXoagCMdQGffsRnXvA3wth9wQJ
      CsRQA2L/E4jGtxLNSSPvXYTzdx1A++PDEByugabUoOTVQGoVGAzga0D018HJPRBsRLz+LcRt
      X0dJSzt3wloE0boJbf9T0Fc/3ARx/r9DdL2N9qcvQiiWeCF9EUpuNaRUgk4FXz2i7zh07gXf
      UcSmfwLXF2D5TRflSWnaRXsgDKCCfRboDRN/x5I37ssiFkBs+QLi+E5AgD4VClagZFSBLQui
      bnAdQ3TsAn8PND6F1luHeusjKKmpU/oZItALGqCzg72IiS++GL8ZUAhE11a0d78DrkSFAdUE
      OctRMsrBUQyEwX0M0bEDvD3Q/SraSydR7/ohit08+XPWYohd300U/sZUiAchfq6gefHJAHAF
      EeE+xKYvJQp/XTrK4s+jzF0DJstIM4TCEoR2B0pwENH2Nlhzz5YaYqgFcew5RN1rEPIkXraV
      gSEM7s7pP/+IG+2dbycKfzUVZcHDKDVrweJAUd+7OW9CxELQswdt2/dgYB/a1p+hrv8nlHFa
      D4QWha6daHsfh56jEI+AYoCMGvDWQyQ0+fMLdKJt+59E4a/LRFn6OZQ5V4HZOnJ9hbgFJRaE
      ri1oW78PQz2II/8D+XNQCkum4SpdZJ62xH+VHJQbvoaSmjGJL+nGKV81aHweUTdc+GfdhLrm
      k5Cej6LTDxfIAiE0lEAfYt+PEMdfB+9utG2/QL35c+P+e07a0PDvSL8Odf3nJhcA1LHBTkQ7
      0V77V4gGEwGs9HbU2g9Aat6o5j2hxVECPYjDP0ccehH8B9F2/Q712gcn2awloPstxNGNgBFl
      yT8gjv3ootxn50MGgCuFiCPqfovoPAJYUZb9G0rtVeNmPkXVgy0bpfresyfnOoq24Qsw1AMo
      YC5EKf8ASs0tiBM/Rex/cfp/Q/8e6KpLHG/uwyhLbh+nLVVB0VugYA3qNYZEbbzrT9D7CchN
      P+OzGuLIY4hdv4ZoADBC+lKUmg+h5M9Ce/1vYXDyAYDurdDXAuhQFvwjyoK1Y9r3FUUBgxWK
      16GqCtqbX4VQF+L4Rij8+HlfkpklYKCZxL93HootE8Vsv7CUIm5E3YZEE565FnXdF8Zp2lFQ
      FB3YcmHlP0N0CHFiC3T+Cfo+Bjln/ntOlgaDLYnf4ZydqEBcYEqIaKLwdy5FWfkplKIaFP3Y
      9n1F1YE9H5Z+FkJDiLrN0PQnWPlBsFgmPkyoB23nTxKDHfLvQqlchDh+oSc9fWQAuEKIQCfi
      +AZAgZK7UeaNX/iPdo7bIhYAXy+YcqDoVtT5d0FmHoqiXIyWHxI1oD2Jc1KKURfcOGFHmpK1
      CDKqoe0AYqAdctLHPsX7uxMdjs55KDUPoJRfhWKzI0L95+5fGENDdO9NnJ+uAmXBtRN27ioF
      V6PkViBaDkFfA+IsrQyXDaEhXK2J/3emg3HyzRdjBPsRQ62ACnPuA/u5A4mit8HcexDN2yEW
      QAx2oFxoANB8CHdfIt3MvCk2vSmQfwvqNZ+HlLQJ01L0Dqi5G1H3NsQaEF4fygQBQGgRxNHH
      oKcZ9Lmoqz6JYhIoXJRW1vMiA8AVQUDPdnB1JTp2F30URTfF0RT6FJSKh1Cq7kLJnYmmC4EI
      DiX+11EBpvE740ZRjKCYgDiE+sf7AIqjEpYsQJl7E4rVOqXz473zS6lGMU5ilIdigtRS4BBE
      3muTnsIpXGRCxCCQKDix5cI4Nd1Ji4cSzWuKESWjanIjocx5YE4Brw9Cgxd8aBHqg3gMsEDK
      ZJqwzsGQh3rTv6FMJj++x/Je/0V8cqOQ+nYhDv4JMELt30FGKgjXhF+bCTIAXAlEBNGwCVAg
      5boLrzmdRkmbjXLdTA49U8CRk/hf/8nEDWyYIPuJOBAHdImhiGPKGAWl5sFp6nxVwT58fr42
      hCZO65c42/nFwD9coBrzUS7jwh+AeBThHe7otFaDbgpXTm8Hsx18QfB2IETJxEEg6oGIP9FH
      Y8668GN7OxJj9NU8FGvmhacDKKoRzqPsR4hT/Q+koths5/54xIXY9WMIByD9WtRF6xLX6VJX
      /YfJmcBXABHsRQx1AnooX3VljDYZQ0EpXAOK4P+zd97heRx14v/Mvv191Xuz3OXe7bjFhThO
      IQUSJ4QUwgUIoRwcx/EDjoO74+C4Ozgu9FBDDyGFdOI024kd495ly0WWZUtWl17p7e+7u/P7
      Y18XWdWSLLf5PI8e6dXuzs7sOzvfmfk2jIPI8neRZu9vgew4BC0V4MhElIy78PUbkaxffDfy
      wDb6sJBGtuxEnigHbIjRsy5w/YYAMwR+a/ASuaMG1Y+ELx+RUwYYyIo/Qlzv44oE8sDzEIuD
      IwtRfB6mvefiP2Ip+31Z4EkbeDkDQMbbkNv+AAhImQQuZ+8XlP8eWVthtXnx5xCOS+vtVQLg
      ciDcBOEWa/sna1LnY1Ii9RgyFkb2aod9CZA+BTH9dgDkjkeRFe8iDaPbU2XbAcx1/wqhEGLK
      JyCtb0XboMm7BjHhOsBEbvxP5NFdyB6W+LJ5F+a6r1vWUxlzEJOvv/D1GyyxRogCuCBzkKtI
      mxcx+yPg9kFgB+ab30MGAt2fq4cxd/wAefANEG7E1EcgdeD6BxlssmbQ3ixwD0KPcb73jfmR
      f/s2sv4wAGL6fZbpck/nN2/D3Psi4IKJjyAKi4appv1HbQFdDoQbIBoFpw+RkomM+aF+D7J2
      B/LkToh3cFoD6cxFjFyBGLUYcoovKS9VYXPB7H+AoB95dANy49eQVdchxl+LSCsBTYNoA/Lk
      NuSR1db2yriHELNXDotyVdhTYN7nIRpGHtuMXPcF5JEbEWMXIFIKQRMQqUfWbEJWvgYRP2TM
      RSz5IiJtYNY0w8qp7R9sUP06Zt1Zs1ebA2xOhDsLMsdBWmYffUdAzhy0qrqXmwAAIABJREFU
      Jf+Euf57UPMM5sv7EGW3IvLKLI90PYhsP4o8+BI07APNDRM/jpi5YnDfZ0eyHdEWZMVzZ3ZT
      hACbExxuhLcYskch3EMzcZD+Q8iN30XW7AZsUHovYtLcnp+REUJueczSK+UsQZtx4yX1Lp5C
      CYDLAZmc2ZtxzPLfQtNGaylvdufOX4ts2YU88CRi+sdgyg2IXmYpw41wpsHSf4eCZ5G7/ww1
      LyFrXkE6Mi1Hq7gfzDjYfTDqPrT59w5r/YU3H5Z/Aw48idzzDBx7BnnsOaQzwxpg4n5r79+R
      CuM/hjbrTkTmIPazhw0JrUkTUMLI7Y92f5ZwQkox5C9Em3wb5I3u0eBACBty9HvRUkswt/wY
      avcitx1A2lIsU1kjYu37A6TPRMx8CDF2HqIv3U8f7ZCnTEDbdyP/trv7s+wZkD4SMeq9iLL3
      INIG6HhmxpHH3sDc+ivwn7AME0behbbsYYS95w0UWfFHZG052PMRsx9B+AZjoHDhUALgckIP
      wsHfW0o0T7blpVo0PRnvRyDDzcijb0LTAYjUIrd+BxnV0a65vW+F5rAhLUtQmwdpT85AhR00
      ae2/aw5LsAk7uLwMv1mNtZISdg/SlhQ8msOqm8CaKeu69R04vaBpl7755ykKZkHOlqQFzVlI
      CWbEUqzGOiBQBYEqzOo3YdKH0Oau6mXQlqA5EQ4PUgiQmrWSE2bytz0pML3gGIrtGokYtQJp
      7KCLJlUmLN2AHrU84Ft2W+FNDr+EWPAlxKiy/s/CpUTGWpE7f4Esfx4ME+zZiCkfRsy6sxer
      IYkMHsXc9ifLKqzsXkTp+AG39kKjBMBlhQY5ixCTbkaULgBfSqcOLQCm3GnFwtnwA4i0wYGf
      I0vnIoqKL1qtTyMlMtaAfOuryJq9YPPC6DsRoxciMkZbVkGBWmTTTuT+5+Dg45ixFrSln0d4
      hmGvVyZf3nXfgJP7wZYK4+9FlF6DyCi1rGYCJ5ENW5H7/wLlP8SsXoNY/P9g5KRLcol/BoHI
      XYht1cJuj0rTsPQZLYeQVautwG7xBtj7I6Q9Debe3EXISTMOFU9ibnkcYjFIn4iYeCsidxJ4
      MyERgLbDyCMvIU9uRb61CznmbrTFDyM852N6czYa2px/hDndH5V6HIKNyMZdyIpnoL4COvYh
      134J8eBTVqTcPpCmAS17MNf/NzQlV00p4xDzv4QYO6NXYS+NGHLTo1bwwLQ5aLNuH7zJ9gVE
      CYDLCVc22sr/QaT1siUi7Igxt6LZHZhvfRPiTcj9r0PRxfdSlXo78rV/QNZXQcoYxJJvIEaM
      7/xCZRQhRsxDTroDuem7yEMvYhputJs+P7jQAf2pX7QO8/UvQHMtpE1GLP8moqCkc/0ySxCl
      1yAn34Hc8C1LV7D2X+DG7yOKSi9sBS8gQrNZg7Z3PmLEfGTZjZhv/juEWpG7f4YYvxQyzjZ5
      NOHIk5jrfwgImPpPaPPuRDjP7puFkFeGmHAT8sjLmO9+34oHpJtoN3z2gnyfwu6EjBJERgly
      7Erk3seRmx+HxEloC0BuH34DRhS559fIHU+ciYs14m60az+OSOvL4khC9fPIys2AGzHvHxFp
      gw98dyG5dEWT4iySX5NpIGOR/l0y4j2IETOtv09u6xQb7aIgDeSeXyLrj4LIRVz3KGLEuB5n
      U8KTi7j2n6FwEtQ8i9y3vk+zzMHVL4Hc8Rg014CtBO3G7yMKinuun68IsfzriKKJEK9FvvMd
      pH6JGHcPASJ/Ptq1n7a25owGZOWWTo7V0l+Bufk3gAbjPoO28O5zBv+zsSHG3o625LNgF3D8
      aeT+dy98G2wuxLS/Q5QtBsA8tKF353A9gLnxP5Fbfm0N/s5CxJLvoN30eUjt29xUBo9hbv4d
      IGD8w4jRvW39CE576l/omU0vqBXA5YA7zzI3M3UItkNu351RCCeMWoSs3ARGJYTjkNL38vdC
      IWMtyOq/AQLGrkLkF/QdasGRjvBmIWUCeeAtxLRrL1z9wrXImp2AHSbeB1npfYcFcGXDzHuR
      9f8Ggb3I4ycQYy7fVUAnhIDC+ZA7BhqqkO0HESzn1KAla9ZBOAC2ArR5d1v7/X2VN3IFougF
      5PFy5IE1MHXxhW4FwuaGyXdYMYgC+8G4DbpT3ppRzM3/hzzwhvU5ew7a0n+F3ML+6XeMKHLn
      T6GjCRDgP4i55r97Pl9GIZj0hj7yIkZrUpktDUTZh9BGjTqPVg4cJQAuB3wFltOLvxWa9sHo
      Ef27znHKBM6wlFgXk2gLtNcCGiL3mv5rTbOKoBLwV13YUAvBegg2gfAhcmf030kqbRx40y2P
      2PYa4AoRAIBw+BDujKSq9Wx/DcOKvIoA7yxIdffreQlbCjJ3AhwvB38V0mAYvKcFpCf1X70s
      g2X5b5H7V1vn5C9FW/4viIw+QpCfjd6BbDnG6Vl90xvQ1M9r/Tutn1Pk3wqM6v+9B4ESAJcB
      wpuLSC1A+huRVe8g597cv1WjmbT2EOnQ4/J8mJBGMr2ezRJM/R1htVNdNHph3eelbr38QgPH
      eSgohS25hJdgXuKOeOeLNM/0oc4HkilIOb/vEnEmJLOMDV84BL2370UiW3Zj7njS6p/Zc9GW
      fvn8Bn8ARzratIeRpd3FrOoGswNZ/ieIhqDgBsSIaZx6IKK4nxO8IUAJgMsBzYcYcy3yxG5o
      fxdZWwclfSxNpWk5iSHAOQZcFzlQjc1jmU3qUWTrboQc079VgL/R+m3PvLAaK7sP7G4rBWBr
      BfR3Kydcn8wgZQPnADJEDRPS1C0LV1v/X3kZPIlsOwZo4Dk7r4R2JiBaYA/EdHD1Xa40Y9Ca
      jKPjyDj/71NKy8rHfh5pOKUJNZuwQmAXWM58nYo0kXt/b1ntOEegLfgiImsA8YU0F2Ls9f2X
      haYf8+iryGgIShaizb7l/O85BCgl8OVCyVIrhK+MIrf8DPTec7rKjsPI6u3WhxEzh0XPJKU8
      /dNldufNhZxxgITDT0Ew1Ge0ZmnGkOFkRrOSaecx0xwAaSMgowQrZs2fkFG9H/ULI8ufsfwC
      7G4ovHTtvfHvx3zncWQ43K8o2VImkBVPQrDDGtwKF5w16GqIEfOtPxPHMPet7YeCXkLz9qQn
      LVAyvfsEP2f1oa5lmsh9TyAPbkXqfX8/IC3Lrr3PASCKlnb1h0k0I49uxAqzfhsUDVdSH5PT
      L8lFtNBQAuAyQaSMRExMzhKa/4r59h+QiR6EQNyP3PxDCLSCqwCtbOXwVLJxI3LTj5CbfoJs
      6rwUFvY0y7MUCbGjmK99C9p7CYlrRJG7H4PaLWDzIabceUG9rYQzB23iDVb9wuWYq/8LwuFe
      6hdGbv4OsnKD9bn4/YicS9jkzwzCoV9gPv0Qsvx1ZKKX4G1mDLnzB8i9qwEB2SsRI8/xIym4
      FpE3EjBg2/9ag3IvoZFl807Mtf9hRcW0pyEmv6/7E/17kn3oR3DyxLmlQLQK+fanMV/9OvLk
      kV4FjwxVI9f8M7Raq8huFfQnN0LCANyIiddfQg6Tw4PaArpssCGmPARNB5BV26HyZ5gdBxDT
      ViGKpiA8bmQ8YDnc7PoNNB0B3DDh45B3zpJWDyCPvYOM9jDANVVZvxMnMPc93fW43YMYfSPC
      dZZewQgit/8KeWIfYAPPQsjL6TxpL7kJMXUnct+r0PIm5vP7ERNXIYrnQmaRFQoi0mw58Rx8
      CRrKrTZM/hyiuKDLAkAGjp5Z5ZyLHrIGG0A2rcfcV9v1nNTxiNIZZ2a2Y1ch6sqRh96Bhpcw
      n92LmLQKUTQbMvKt6VK4CdmwHXngBWg+jJWVai7a/Acu7Sit9hRwpVgD6Lv/itzxM8TYm6Bg
      CiK9FJwuiLUjm3YhD70EjRXJbF8T0JY80kX2ClcuLPwc8rWvQrQN+c7nkJU3Ica9B5FbBl4f
      6BFoPYyseQdZ8aqVtU14rO+zKL9rHc0YcvfvkAfXAyDNSWjFpWc9VwHePOv3ydeQ9WuQWdcg
      xi6E7CmIlBzLbDVQg6zbhKx4CcKtgAYlH7K8uDshoeOUkHHD0ZcwT56Hw6GUUHobWn5e/6+5
      xBCyj7WbruvE4/Hhqo+iVyQy1oZc/3XLvBMJmgdcPtBsliIz2mHF0tFSYeLH0eav6mqfHTmO
      8dLfQ1v9wKrhyEbc9Ae0ojNONbJpC+YrX4BY1DINvP03kJfVddBOhJC7f4nc/TTocUBY++8O
      t7XFY8QhHkwuix2I6Z9FzFuFsHedq8jjz2G++l8DawNAzu1o7/9KJ09NGW1D7voFcu9fksk+
      tGT9kophMw7xQDLbmBNKVqAt+BQiu5sB7RJCmjq0HUTueBxZvdFKTQhWAnS7xzLjNHVInHr2
      AnIWIhZ+DlE4qod86gY0bMN859vQlhxIhcvS9djsluI/ETqjhHUVI2Y+gph6ffffZ6AS84WP
      QSgEIh1x4y8QI88OWy2tfNGVr2DufQZajib/n+xDNofVh/SoJXzAej/G3o+2+MPgdJ3TDhNz
      638jdzw/4Ocqrv0t2pRJfZ94LkYrxrMfgbaTMOdr2ObeNuA6DBSfzyeGbAUQ6WihoSVAdkEx
      qZ7OA44ei9DY1EQ0ruPy+MjOzsbttG5tmgn8bUEyszunYzONBA11deg2LyMKz5rBSpNAh59o
      QpCdk3lmD0uatLe34/Kk4u6HQuryRCBcWbDsP6F4NfLQamirhkhTMoaODq4CyCxDTL4XMXpG
      ty8aNg8ibwbSUzKwatjTEJ2esUQee9NSoAonTPtYt4M/JE0LZ38KWXItsuJFZNNhCLZANJC0
      +LGBrxRSRyDG3ooYt6D7NgC486Fo7sDaAJAxsoteQbgz4ZrPIUqXIve/YAUeC7VALJi0+LFD
      ymhIG4kY/z7EyNmIYQxJPFCEZofsKfCebyFaypGHXkM2VUCozRK4urQmEb4RkFKEGHkTYvxi
      hK9nnxMhbJB/DdotP0FWrkZWbYBAI0T9oNutmE7OdEjPg7xFaJNuhOySHrZZJPLEWggFAQET
      HkSUlJ7z9STzRU+4C23EMqjbjnnkdWivg7DfGvglYPdCxggrs9vEWxElU3roQwKRPgo5mD6U
      2ntCmB4RHkT+TKSnCJF+8VYQQ7ICkDLB2889werNFSy5/cO8d9GE08vqQEstr7z4AieaQ6el
      rztzBHfdeTsFmV7C/moe+/laPvPFv+NsN6WOxqM89sNfEnCW8JWvfBLvqexFZpSX//xHdh/z
      c+fffZyJhcmE0EaIZ/7wF8YtXMnMsrMtFq5cZCKZ4CPcnBQABnhLrHAKwxhBU0brMF98xFpR
      ZC1Hu+2bCHc/nM6kaaWJDDZZM0/hsAZZTw6kZHebnHtYkSYy3GbVT48kBYDDUminZPaZ0/jS
      RiLjIUv4xgJgJgWAJwtScnoWur2VqEctARBpswSlkQBXOqQWgMvdq+WOTLRhrv4snDwInqlo
      d/0E4e1bsEppWIN/uBUSSQHg8IA3B7xp/cibffUyZCuAeKCNQyfqmDFtHHvK93LDgjIcNgHS
      YNfa1ZxMZPKhjz5ATpoHf1Mde/cfRSTljjR1OoLn7kVLTh7ag1kwnoKOI+w73s680RmnfBCJ
      hSMkIu28/sZ6yj50MzZhpVeOhEMk+pOj8wpBOHyQO4Dl51BzchO0N4IjHzH/4f4N/gBCQ3gz
      rRg0lyJCQ/iywTfIvLOXJALhTIGsoctjIOxuyCy1fs6X5n3QWAlaCmLBZ/s1+ENyFXLFfkcX
      niERj80NVTSF0rjhlusJHyqnPpS0MJAxTjaGKJs6lfzMNOx2BzmFpbxnxXLys3peOpl6iB37
      TzBr9jymjh/L/l17MM5OHyhcLFh2Ax3l69lXG+iXWZviAiEN5OEXrf3y8Q9e0qFvFZco0kRW
      vmyZ045YhSibebFrdNUwBALA4PCOPRRNn0lmWhHTxjvYsafasnDV3Iwbk8P61a+yfvteoonu
      0/+dS0djHU3+CGVl45k5azIH9u8ndE7OUU9WESuXTWH1X1cT1ftXrmLokf69yLqjkLkcbc6t
      l7YljOKSRAaPIk/sAe80tEUfVn1oGBm0AIh3NFFeH2Bq2RiEZmfKhKlUVuwikrAsKKYvv433
      LhrP5tf/wtf/45s88dxfOd7g79ULvOboPhIZZYzIcpI+ehqF4SoOnuzodI4QNuYtvxFqd7L1
      UP2weZUrzkF6EDP+AW3558EzDHl7FVcgTsSkjyOu+yqkXgapNa8gBi0A6muO4u+IEg+1sH9/
      BXG7g/rKwzS0W/v6DncqS2+4nU9++rP83QduIXLyIL/+ze+orPN3W57UQ+zefYSMTCeHD1Sw
      v+I4mYWp7Nuxj4TZeZi3eXO5cfkcNq19E3+4d89YxYVBZE2w0iLmFVweWbEUlxwitRRt5h1o
      xaNVHxpmBqkENjmyby8JTWPHu2uTns2SFEeQvRW1jLp2ghX1WrORkp7JhGlzGTO+jKd+8UMO
      1TUxrrBrns72+hPUtgWw6ZW8VX8UBJgxB61VB2kPLSDnHNXB1AXL2bj5Z2zZV42hFo8KhULR
      bwYlAPRQE3urArx31QPMm3DGVXzX2r+w/sAuQvNG0XKygaz8PFI8bku6C9DOToZwDtVHK3Bm
      T+XjD9+FJ2n6acZb+P63fsTRhjZyxnQOuGX35HDd8jm8tGEddqUKUCgUin4zKAFQV3UU3eVj
      VEl+JxvfskmTeXnjahpb/WxZ8wongpIxI0eQleqm6vB+6mNp3F/aja2+jHFgVwVj592O96yk
      DTZXDtMn57B35xFmj56DKelk+TN+1gJyN21jd31cWQQpFApFPxmUI1jjicPU+DVmTBvbOU+H
      jLHj3R0UT51Ouj1O+d591DW1YiJwp2Yxe/YcctIthWE80sbmbVUsWjIbmx5my9ZyRk+ZQm6a
      t9O9WmqPUt0YZ9qMcVSV78dTOIYROWcURo01h9hzuIEpM2ZROIS2zQqFQnEl4vP5xLDEAjr3
      Fv2O5a1QKBSKC8KQxgLqDTXgKxQKxaWHCpShUCgUVylXathMhUJxGmkF3UucvZUrwJtpBX2T
      JjLcAqFGK9hd6giEu2enPhkPQqgZEhHQ3JBaCE73WTb8Ehn1Q0edFVraXQCpWacDs0kjBm1V
      Vn28RZCWrXYJLhJKACgUVzpmBLn5UWRzPZyOYKohpvw9YnwZsuYdzM2/hXiHFdMpbSba0s8g
      MrK6FCVb9iA3/xLZ0QxGBHCBrxBt6VeRmdkIIZFN2zHf/aklJIQN7JmIZd9A5Bci9RByx8+Q
      FevA6QbpRsz/fzB6qhICFwElABSKKxyZCCIDTYhpn0EUnTK/luBMQ4aOY276CWLkQ4g5N0C8
      BXPdVzG3PIG24tMI2zmDsrRB8Qq0RddCagZEm5HvfA1zx5/R3vMJZKIBc8OjkHUD2s33Ihwa
      snEf+HzWPWvXIMvfQaz8EVpxEebOHyI3/wCR/V1I7zn3gOLCoHQACsWVTrQdEmFE7mhEak7y
      JxfhckHwGBgexKybEDYbwpOHNutD0LID2dbapSiRMwVtxvsQGdnW+b48xMiFoPutSAAn34V4
      DtqC+xEuJ2h2RMFMREoayDjy8Bsw4UNoJaUg7GgzPgr2ZmRj1bA/FoUSAArFlU+0EaIxZLgO
      2XgMGQycMc2WEkyS6S+T5E62topigV4Klch4EFn5Kua2PyJKrwebsGb7BYuh4zDmwdcwD72N
      DCbLkXGI2xD5U88UY0tFFE5CNjcMdasV/UBtASkUVzrCDt505K7HkGYCOqqg8Ea0hQ9B6jhw
      RDD/9ku0qe8FM4xs3gGRRjCi3RYnG7dirvsfiIUhFoLp/4yYMBchBDIRg6OPY7aMhZR0iDQh
      t/wKsfw/0HLcyFgE0WnYEQhfJjIyPI9C0RklABSKK52cOWg3Tbb+lgb4D2Gu/x/krtGIhTej
      Xfs5zG2/xtxQDpoAuw6mZiWM746MiWjL/w0i7cgT7yKP/QHpTYPJC0BIGHsf2uzbwZsK8QBy
      y/8g9/4eufxTCIerSxgwaaggXhcLJQAUiiscodnBnXrmH55r0CZdj3miAiFvQRQuQrt5NkQC
      oDkhUYP52g8Qru5DqghnKuRNsz6ULkJUPoW59RnE2NngSgO/BF+GZRbqzoCR85F737VMTDXT
      Wl0w1rpe6tBUgShYdEGfgaJ7lA5AobjCka2VyEB7ct9fIo04sr0GHFkgJFKPg82FSM0Fjxd5
      5BXwFUN6lnW+HkXGo0gpkbF2ZCx6VngXAZ500GMgTUTBLGheC60tp+4OoRYQbtC8kF+MPLwW
      qVsZ/mRbObIlCgUDyCOsGDRqBaBQXOHIyieRhw8hRr8HmVEAdWuR1YcR1z+MkBHMLT8HezYy
      ayzUvYms3I247tsIpw0pE8idP0E2e9FufAS590fI4w2IknnItBEQOow89CKMfABcbihYjMh5
      CXPtvyImfwDix5C7f4+Y97/gtCPG34E8/CXMNT9BlJYhy38NOUsR2SUX+zFdlQxLMDiFQnER
      MePI6g3Imu3IeAzhykKU3YHIKwRpIGs2IavWI0MB8GahTbwHkW8NyDJcg/n8xxDTvoaYuggS
      HcjKt6C5EqknQDgR+YsQExeeduSS8QDywDPIhqOguRGjbkWMmY7Qksf9h5A7n0TGdUTmVMTM
      9yOczov1dK5ahi0aqEKhuMhIiSSZSENoCMQZZayU1paONEFo1vHkMXnoccyD9Wi3fPl0KIdO
      ZSHO/L/T7SSYBgiRLE+cfRApTet6zaY8gC8SSgAoFIpeke3HQKQh0rqGhVBc3gxbOGiFQnF5
      ItJHXewqKC4gygpIoVAorlKUAFAoFIqrFCUAFAqF4ipFCQCFQqG4SlECQKFQKK5SlABQKBSK
      qxQlABQKheIqRQkAhUKhuEpRAkChUCiuUpQAUCgUiqsUJQAUCoXiKkUJAIVCobhKUQJAoVAo
      rlKUAFAoFIqrFCUAFAqF4ipFCQCFQqG4SlECQKFQKK5SlABQKBSKqxQlABQKheIqRQkAhUKh
      uEpRAkChUCiuUpQAUCgUiqsUIaWUF7sSCoVCoRhehBBCrQAUCoXiKkUJAIVCobhKUQJAoVAo
      rlKUAFAoFIqrFCUAFAqF4ipFCQCFQqG4SlECQKFQKK5SlABQKBSKqxQlABQKheIqRQkAhUKh
      uEpRAkChUCiuUpQAUCgUiqsUJQAUCoXiKkUJAIVCobhKsV/sCij6jzR0EjXHMRNmPy+QiLQs
      XPnZ/To9UXeM6K69xI4eRW/2I02Blp6Bc8QInKPG4Zpcht3nGngDzsIM+okdOUKitg69tRUj
      EAJTIrwp2HNycIwYg3vSOGxux4DKl4ZO/MBuYscbcYybhbusADGI+kojQax8F/HaFpxls3GN
      zRtUeRcLKSWJmmOYUYN+NUBKhCcNV0l+n6fqLXXE9h8gcbIBvdWPNEyEy4s9Lxfn2DLcE8ai
      OWyDb0QfGM21RA9XI6UAKbHll+IZV9L3haZBvPow0b37iVVVY7R1IDU79oJiXGUT8M6ZiT3V
      c971kXqCeOUBonsPEDt2DCMQQdic2HJzcZSU4Bw/Cfe4UjT78M/HlQC4jJDBFlr/779IBPqf
      wsE+bjn5X3mg16WeGWqj49k/EXx3F2ZHEM4pPrZlEzhc2LJzSX3ok6TNGD2w+ps6iaMHCb6z
      jsj2/ZiBIDKe6P5kpxtbfhGZDz+Ct2xE/+9hJIhXlhP46ytEdh1CRhP47s7BXVYwsDobCeKH
      9hL468tE9lQiYwlSHijENTZvQOVdfBL4H/0WMX//+5CWPYPC73ym2z4kpUQ/fsh63nsOYnQE
      weimbLcHx4hJpN33AbyTSi+Y8JR6GP/vfkpo+7HT/3PddE+fAsBoO0nHU38mtGUfZijS6Vhi
      fzmRdWsIFI0g9a77SZ0/GdHPBiSOV+B/8kmiB6qRkViX4xFAeHzYSsaQ/cX/hyt1eIdkJQAu
      I2SkhURjCCkFIiOD/mRzEM7eZ1xmeyNtv/wJoa2HANDyCnGOHY9z3EiEJtHrakkcrUavO4lR
      X0OiqRUYmAAw26pp+p/vYgSi1j88KdhHlmBLT8WWnYOwaxjNDRjNzSRONmCcOErbr36B+Mw/
      4inJ7KNwg8SJIwReX014y27MU/cAMAZSWZ149WGCq/9KePs+zOBZL+9AyrtUSLQRrw8hTRBp
      6Yj+zDpd3Q8TZqSD8Jq/0v7SWxj+EAAiIxtHfi62vHy0VDdmUz2Jmlr0+mYSh3fQ+sMGzIc/
      ReqsgfWhvohu+CvhHVWg2RBIZEKn95xXEqPpGM3f/T6x6kYQduwjxuAcX4ZjZCFmRzPxveXE
      j1Vj1FTh//lPMWMPk75sWp9CLH5wGy0//y2J2hbQ7NhHjcU5fiKO0jxkOIheXU2ippZEXT36
      sUMYYR2UAFD0hNFWj5SASCfrC1/A0Z/tEaevx44qI+20//Fxa/C3u/Asv420W5fjzMtEaGeu
      kvEI8WNHCW9cjzaAJfCZBsQxA1G07Dzci5fjmzUNx4gibD434vSUysTo8BPduZmO518mUV1J
      2+/+gutLH0GzdW2JlAZGUx3B1S8T2rgNwx8GoaFlZiJD7ch4P7fLTpVnGhiNtQRefZnQ37Zj
      dkTOlBdsR/Z3++0SRbbVYZqASCX9kU/jzs/o+yKbu2sfMuME//Ik/pfWAaBlFeJdsQLv3Jk4
      i/LQHKeGFoneUk94/ZsEXn4To7WW9if+hLvsizh8Qzn8SMy2avxPvYrUJe7rbkQe303syIne
      r0pE8P/qMWLHGsHlxXf7B0hfsRh7hu/MOe8LE9m2Af+fnkVvaqbjid/gKPkyvrG5PZZrNBym
      5We/JnGyDZFeQOr7V5Fy7ezOW0hSYgT9xA9VEHpnA5pTbQEpekSiH6+x/swqxV06AptzEF+f
      NIlueZPAO3sADc/ND5B9z3I0e9cVg3B6cJVNwVU2eeD3A3D68N12Nyk3rcSRldLDMlrDlpaF
      b9nNOApzaX70MfSKjYSr7sQ3LvOcgUgS2/wWLb99GqMtBAhEShY+OA4TAAAgAElEQVSe5deT
      eu0M2n/+baJH28+jgibRDa/S+sfnMdrDVnmpOXhXrCTlmon4f/ZdYtUdA2//ReesPpSWh3vk
      KJw5KQMsy0BvaADNgXPWUjIfvAtnXno336nAnl1I2vvvx57ipOXxFzFPHia0o5KMJRMG0ZbO
      SD1Ox5//QKI1glY0kfTb30PHT/f2cZEkvmctoV01IGykfPBjZNwwv8tEQzi9eBfdgOay0fKT
      32C01+F/5lW8X3yw+z4sDdr/+FsSJ9vAl0v6Rz9B6jVlXYWoENhSM/HMWYhnzgL6p5QZWpQA
      uFyQOomqRgBsI3IR2uBmC2awicDr71jllS0k+97r0LS+OuDgOqgto5Ss+0v7fb5z/Awco8eh
      76xAr66HceduA0n06kpr8NfceK67ibRbVuIqzMQMtoF5vumuJYljldbgb/Pguf4W0m+5Hmde
      GmZ7A9bU+TJGSuLH6gHQ8jLRPINR6Eukw4X3ro+SdefSfpgTangWXYfr7c1ED9cTqz4CQyQA
      pJTE962hY91+wE7q3ffhzE3ps7tKPUxw3bsA2CbOJ235nG5Xmadwz15G6ooD+F/ciLFzLZHG
      D+DJP3d1JDFO7CK45SgAvts+SOq8bgb/LlwckwIlAC4TpB5D77Bmn/a8rE5bNAMhfmgX0com
      cLpJv+8Dgy7vgiAc1g90UUyfPsWXgfvam0n/4Ptx5qQO8jUSaCmZuJfdSsY978OR1fP22eWI
      lDp6WwsA9qwMRA97+/1CuEh/8JPY01PP4xIvmtvaWjFjXRWiA0X6a2n77QsAOK+9ndS5YxCE
      +r4uHCB+6DgAnmtXYPP0saUq7HjfcwPBNzejh2OE396K5+4lncZuaeoEXltjnT5yOmnXzeq3
      wvhioATAZYKMhjE6WgENR84oBtWrZILIhs0AaIUz8JTlXJoDnRkDIwqahvC6uzlB4L1xFV7N
      DjZtCNog8N32QXyaHWG7Al1kdB29pQEAW+boXme7fSJs5zX4A8hYBDNqba050vuhe+hPmXqU
      wAtPEq/rgPQiMu+/FeHQ+qWol5FW9HZrVecYU9iv/mPLLsQ1YST6zqPEDh1AJhZ1MrSQkXYi
      262tJ8/sxdhTh8Zs+kJxBfbyKxMz1IHe1AaawF5aNKgVoww2EatpAjTc82dguxRn/0CsfCvx
      I4cRafl4ppd002SBcDgRQzL4dy7vSkQmoui1lgCwjyoZ5l0HSXTnJmJV9WBzYs8vGpJS43s2
      ElizGzQ7qR94EGeGq//NEmctK3u1FDrrEocP9xTLgsmoPIER1zsdNxsOk/DrINx45k8+y7jh
      0uTK7OlXIDLYihGQoDmwF2UM6t01WlswAx3g8OEaNabzfaRE6jpmPIGp6z3tvFxQpJEgtmcj
      bb/5E0bUhu/2VThSBuYQpjiDjLait0lAw15yrkL9gt6ZeMV2/E+/jNQlWv54fHPHDbpU03+S
      9r+8ghk3cUxfStrSqec54NpPL6TN9nD/+rrQcIxK6rEiDejRs/1YJInqY9afGaNw5XZWsEvT
      xEwkMOMJpGFelHfrXNQW0GWC0VqPNAHhxKivJNJ0qvsIhN2BcDrRvD609DQ0l6PXF8FoasLo
      SIAvDVt2OjIRQ29uInawnNi+wxjBkOXFabOhpWfhvmYB7vGjsaV6L8yMRkqkaWBGwhiNdQTf
      Wk140w7MkI7npjtIv37OpblFdZlh+hswDQAnZtNxIrGG5BGBsNvB4cDmTUFLS0XzuIbku5ZG
      gui2d2j741PojQFIzSXtvntweAY39EhTJ7T6BaJH6hAZBaR/8A5sjvObzwpfDo4CN7G6KNGt
      W0mdVtgvvwgtNS35VxC9PQqnLKmkTrzSeqZafhbCrmGGAugNdUT27SF+5ISl+zAlwuHAXjIa
      z9w5OEuLB+zxPliUALgskOg1tdafRgdt3/pm96c5vTjKJuCZt5CUxXPOsa8/g5kIJ4WJSax8
      M6FndhDdux8Z1buWCYTfXoNtZBnp992Pb9q4IVEYJ44dIHKkBqnHMdtaMVr86HU1xCtPAAKc
      HlzXXkfGrSvP+8VWdIfEOJE0ASVK+/f/t/vTHC4cY8twz5pHyrIF2NN9AxIEUkqIhQi89CTt
      z61FmhJSskm77yOkzh078GYkSRzcSscbm0E48d58N55R/Qt3cjbCk4p70mRidTuI/e0NIkvm
      4p1Y3Gt7pZQITzqCpF3C2dN4aZ5Rbmsxgq/8heiuXcQqj3fvHb1jB8FXXsQ5ez6ZD9yPMz99
      2Cc6SgBcFkhsOfloHiemfo4poinBSGq84mES+3aS2LeT4MujSf/Qh0i5ZmLPnaqjjcDvfnP6
      o1Y8CteE8Tgy0hAaGB3NRLZuw2gLYVQfovXR76J/5DNkLJ0y6BbFD+zA/9tXuj2mFZaS+clP
      4x1fcklbUFxuiKw8NJ8T81znOClBT/ahRIxExV4SFXsJ/vVVUu+5j/Trzn8FZtQepPWxXxCt
      rANAyy0l4xOfxDdl5OAHuUQH7U/8GSMUxzblWtJvuGZAZQqbk5T33Upg3Q7MSButP/gOxgMf
      I2XB1G4V5GbIT3jL3wivX9/z9s2pLaX922nfv936YHdgnzgR1+hS7ClepJFAP3mMyI59yHiC
      +NYNNB6rJfdfvoy74PwU64NFCYDLAg33kjsoXnR7t0elrmO0NRPdv4fIu+uJHqjGbKqi7bHv
      Y/J50q8Z33PJBSPxLpiHd9lyXHnpcI5/QeaDHyb02rO0PfkaMtpB4Mlf4xr7NTzF6YNqka1g
      BK7p05GGjhkKYra2WnGI0DDrjtPyH/9GcPZ8Mu97P86CyzXuzqWEwDltOcU/W9LtUWkYmB1t
      Vh/atJHInsPI9jo6fv0TTPMzZF0/s193kfEIoTdfwv/MS5hhS6g4599I1kN340j3DMkMN/DC
      E0SONCJS88j44CpsnoEHmNPyysh65AM0/+xpZFsT/h/9N4FXJuKdMx17qgsZjaO3txI/VEHi
      WC0y0d84IALH1Fl458/He03SA/js2YyUmP562v/0B4LrdyGbqmj51RMUfvlhtGE0QlAC4DJB
      CAH27r8uYbejFZZgLyjGt3g5kQ2v0/b75zAj7QT//AyeSf+EM9XZ9bqMXLK+8M94ilN7Xvba
      3fhu/iCax0PLb55DttYReHsrnvuuH1R7XDMWkzt5vvXBMJB6AjMcJFaxj8jWnUT37Se2ZR1N
      9a1kf+YR3CP6iAWk6JM++1BuASnLCvAtXEp0+wZaH38SIxAm9Ocn8M2ZhCuzd5NG/WQl/t//
      jvCeSjBMSMkm9c77SF8xF+FyDMHgL9Fr9tD+4rsgNTw3rsI7yKisQmh4ltxKrsOL/6kXSdS3
      Yhw9QODoga4n2504Jk7DNTaD4CvrABvC1r3wsc1aSu7fP4TN24M+TghsWUVkfuQTaLaf0rFu
      F8a+dwkdXkXqxJxBtOj8UALgCkIIgXB78V13K2ZHM23PrMFoOEpkXzXOhWevApIzDAnCZu9z
      j1doNjxLVuJ5dzPh8hMkdu7F+OD1DGaiIjQbwtX55bGlpeMoKMa3aBmJY4dof/oZInv30vL9
      X5D71c/iyOgmJo1iyBFON5757yEz2k7LL59FBusIbT6A88aZPW7JJap20fzDx0mcbAbNhn3C
      DDIeeADPuOIh28aTsSD+P/wJM25gm7SQ9Bvm9ayPOvumffZvO55FK3GWTSdSvofItt0YwbC1
      varZ0HypOCZMxj2xDGdRAebxjZYA0FKxZ5wjFKU4/Vtz2Pp+tzxppLzvfYS37UMP6sR2lpMy
      YdmwbX0qAXAlotnxXruc4LotJBqDxGqPA2cEgC01A80pMOMJDH8QCr19FikcqXgXTCdcfgIz
      eBw9pGO7QJELhdONs2w62Z/Openb/0esag/tqzeQc8+KwTnAKfqPZsM9ZzHO19cRq2ohfuII
      MIMuzgNSYtQfovl7PyfR4AenC+/K95Pxvhuwpw0icOA5SNMg8u4rhHdZnruay0Vo3Rs9X2DG
      SDRbcaCMI+X4X0zu2nvSSV28EJv3XKsbgS0nuQJaej1S15MCQEPYz54kSWKn4illFGE/25ta
      2LFnW3v4ZnMH0jCBvrenbDkluCaNRN9aSaL5GNJYirAPTz9XAuAKxZaVgy0llURjEGl0tu6x
      5eZhy/BiNoaJH6+BSf3bY9dSk96bZgIzbnChu4+WUYizuJDY0VoiG3Yg71mhVgDDiOZLw56V
      TayqBaknLIuXc74AM9xCy/d+bA3+Dhcpd3+YjJuWog215ZYeJrxtz+mPiV3rSOzq36XGwd10
      HNxtfSiYjHf2vG4EwBmE0BCOrlumYMUPih6oAsA+phjt7ICMwoZznOUjIE8eIxGI9h1eAmsV
      rnktU1IZiyXDVysBoBgEvTmZaFk52NIySDTWEtm+B3nD7P5NrE+dI1zDktkJwDU2k8B6oKMZ
      0wBN9dhhQ/bhqiT1GIFnfk+0uhmEwHvXg2TcvAztQsxebS48cxYgU/sZTFDGiO3ahdkRQ+SP
      wjNppGXCmVmM5h54JzJbG4kdsAK9uSZM7+I1bh85DiFAmq2Ed1bhumF6n+/W2cO9cHqG1XtY
      vU5XKGZTHXp7G6Bh83ReigtHBr5rJhA9UotxcCOR2rvwlvQdFjhx9LB1vScP+5DGcu8ZqSdX
      L9Kh/NaHGdnhR29MmnF6fF0mpUbNfjpe2wqAc+kqst679MIM/lgmm74Vt+Nb0c8LzCDN3/gW
      4Y5jOOcuIudDtw5BLSTRbW+TaE+ASMW3ZFqXwV1LL8UztYDw3noim9aRtmQydm8f70o0QuKk
      lbfAnlGIGEyMpvNEvVKXAfHDu2l/fRNGvL8maAahNa+jt0TBnYZ7bFmXM1yzF1sKrFiI9idf
      wOwjForZdpzgpoMAOKZPRTvPBYA0dPSO4PldBEQPWhFQRWkxw/heXHHo9Udoe+4tjFh/+5BJ
      ZNMaYicCYHPgnnjO/r/UCb/9tuVQ6Moi8573IoZpVdgvpDy9guk9I1j/0avLaf/rRgAcC1fg
      Su9mm8jhImXJYgCMiu0EN+3vM+RDonIn0SOtALhmThnWGE1KAFwGmIFGOn77Uxq/+xPC5ZWY
      vcW5N+OEXn+ajjctJxTHuNl4yrru8duKxpAyfyYgSWx/jbYXNmIa3ce7l/EQHc8+Q6KxHXzZ
      pCyc3W0f1euPEFi7jsC6d4g1Bjo7SQaaafvBN2j588vEGtr68VJKElX7iNces8LwLprbx/mK
      3pDRdoJP/5aGb/4vod0VmL3Zs5sJIhtfxf+8FdZYK5iCb/aITrNdM9hK9FAlAI55i88vCFsv
      GG0nrD60dh3RE60XPF6OlJJE7Yk+J1f6yUO0PvZr9OYgePNIv21Ft1s7Qmi4Fl6PKy8VZILA
      U38gtOtoj+0wGqvw//llpAQxYga+ibnDqudSW0CXAcLpAs0gsftvtBzei2PCFHxLFuMsKcCW
      loqw25DRMHrDSUJrXie8ZTcyIRGZpaR94JZuQykIzYXv9lVEjx0jerCB0LOPYzbWknr9IhyF
      uWguOzIeQ6+rIfDKs4Q27gNpw71wJZ7xXROsSzNK4JknCWzYD2ikfvjLOG+eetYJEtPfSuS5
      J4hsWINz4nS886bjyMtJxi9yIjQNGYugNzYQ3b6J0IZN6M0d2ErnJeOqd341zGAr8er6bp+Z
      jAYwk6EtjKYaYuW+LueItCycJfmnyzUDzcSPN3ZfXqgNMzl7NhqPEyvvqtwT6dm4SvK7vf5i
      I+xOhBP0w7tp+b/DOMZPwHfttbhGFlvP32lHxqMYjXWEN6wl9O42zIgO3hzSH7gb+znpCmUk
      hOHvAAQikSC8dWv/Z64SSMnBN+WcQIRmgvCrL9D2ojXL9t7+aVz3LR5843uti0notT8RqZH4
      li/DNaYUe2YGwuW0Qjv4W4mV76DjxdWWiasjhdS7H8AzuufQE8KRTsbD99P8w8cx/DW0/fTH
      JG65Dd+8qdizMxA2MIMB4of30/Hc88SO1IEthbS7Vw2bbu0USgBcBjjHzyHr4SAdL71GoraJ
      +M7NxHduRqRlYMtItwRAJIje1AzJUBFa0VjS73sQ7/jCHsu1ZReT9cinaX3sx0QPNxBZ8zzR
      rW/jKMpHczkw4xH0EzWYoSjYHLjmriDzrpXdu8k3VBOtsKwjsLuxl3R+QYTHh2vKBBL+A5hN
      9USb6omufx2RkoYtMwPhdiUFQBi9vh6ZjLJoHz+brE98GEc31hR61RYa//N3fT6/6Pqnia7v
      +n9t8jKKvvLwaZO7+MGNNP7vk32WF3nrT0Te6qa8aSsp+ZeH+rz+YmArKCP77z9K+7MvEj9e
      R2LfTvz7diJSUrFlZCJcdkv4NjRCcnUgcopJu+sBUmZ2TeAuYzHMkPUdxTevpmXz6vOqj5i0
      oqsACDQT3plM4ygc2Et7zrk7lMhElMT+Cvz7dyMysrHnZKG5LQFgtDah1zVbJ3oySHn/PaSv
      7Ds0hmvatWT9XZC2Pz6H3lJH4IlfEHq9AEdeNsIGRsCPfqIOqRvgTifllntJnTtu2K2clQC4
      DBAuH76l78UzcwGR7ZsIrn2HxMlmZDSEXpPMUSuSsexTUnEvWkbqjdfhzO8rbLTAXjSOnC98
      hY4XniX47k7MUAfxg22cjnblcKJlFeC76X2k3bCoh6iFktjebSSaI4DAuegmUqZ1TrAh3Gmk
      f/gf8S49SHjbdsJbt2P6Q8h4FP1kDZhWOQgN4XCgpafinDGXzLtvw5Gb1X31HR609LTuj/UD
      zd3ZiUc4B1vepRuyWthdeOYuwzV1DpGtGwm9vYF4dR0yZq3yLFMUAXYHWnoGrjkLSb1pBa7S
      /O77kN2OLTMNGR5YfbS0c31PJInDuyydA2CfuYzUa8YOfDtE2LGlpaGlp2HzdZdM6NR5Gt6l
      t6C3msQqazBDfhL+lk7HhceLfcwU0m6/Fe+08Yh+bZxreBa9F1veCNqff57o/mOYLfXEmuqS
      75YAtxv7iDGk3rGq95hdFxAhB6kh6enyU8vq08eF6L6B0lLVSCktT9ZzROCp60/9PnX8dDS+
      s/4HkjO3u5I1hhLd30KiphajtR2pS4TbiS2/EOeIEjSnfUCdyQy2ET1wAL2+GVx2ZMzEXjwK
      96QybJ7u7aIBZKKdpq//O9EjDYisseT951dwZfbhBGSa6B1t6Cfr0NtakVEDpI5werEVFeMs
      Lur1norBIjE6/CRqa9Fb2pBxE+G0Y8srxFlaguZ2DuuAJPUQrd//NqGth8GeTe7//TeevK7b
      dhcSw99ErLISva4ZaUiEzQR3Bs6Jk3AV5Q48Cq400ZtOEj1QgdEWQvgcYDhwjJuAa1Qxmv3i
      KM+FEGLQK4DtbzzFmzuPWZ1F0/D50hkzaRrLF8/D67TTWneQ516p4MMPv59u545mnFf++DPe
      2l3Px774FabkdzZHjHU08PzzL7Cr/BDRhKRw5ATev+pOJpRkse2tl4hkzmbJnFIEYMTDvPHC
      MwSyJnL3ivmDbdoljMCekYM9Y2hjhmgpmXjnLTrv6xL7dxM/0QROL2kP3tf34A+gadgzsrFn
      nH8YX8VQILClZWJLuzRiLBknjhLbXwWanZQHHxz2wR/AlpGLd84F2HYSGva8ElLySoa+7EEy
      aAEQamskp2w2K2eXYZo6jTVHeOP152iLubj3ptnosRA19S09Xh8NtbB7zzEK89PZvuUAE2+d
      d9rcLx5s4uc/+QEdKRP5yKf/iWyvRsXu7QQjISCLYFsT9XobUAoY7N3wGmt21fHxz94x2GYp
      +o1JePM7mDET16IbSZ034WJXSHHZIYlsX48e0rFPXEb6dXMudoWuGoZEB5CSlcvIkSMBGD16
      LHqgiS3VR4iZs0H0Fr5F0nB4Fx3Z0/j48iJ+v2EXgehMMjwOkCYHN6+hOl7I1z52L+keK5rg
      ohU3Y3bKxGAV3lC5h5fXbuf6932YsfkD38dVnB9m2zHCO6vQ8stIv3vlsIayVVwZyEA94a0H
      EGlFZDx4B7Z+ZOVSDA1D86RPBcCTJh2tjRw5XEVmfhGOvlyg9Sg7dx1i+qxpjJoyDbO+mhPN
      llLT1CPsPHic+QuXkOE5E0pWCA3bWTHrpYRYsIHnn32Z7KnLWDZ7nIoXM4wY/hCuWQtJv/8+
      XAUZF7s6issQIxjBUTaTtHvvxzNa5X4YToZkBbB/wxv8oXov0XCAutrjOIqn8dB1c+jLKzzs
      b+LoiUZW3jgBm8/HrLEetu05ypSSbKShEzMSjCop7rWM8q1v0nwgRksik0/ctASXmj0MK47R
      08j++LSLXQ3FZYy9cAxZHx3T94mKIWdIRsu0nAJKRpQweswYSoryibTWU1XT1Ie3p6Th+H6a
      KaE00044HGV02WTqKnbQHtUti0DZu2+JBNIycshK8ZEwTGKJ7nPaKhQKhaIrQ7ICKJkwneXL
      ZlgfVt7ErjXP8Oqbf2XS2I/3fJEZZ9fWvbTWHeGrX/oSUpqgGehkcKKhjWnFHhx2GzXV1TC5
      e828AErLZvKB5SP5wy9/yJPPvMinHrqXNJdaBSgUCkVfDNFI2Xmmn56SBia9xqwJNZ+ksjnM
      x774LR599Lt873uP8v1HH+XGKT427z0Kdi/XTB7Dpg1v0BLufWavudNZdc8DuGr28vRL79Df
      cFcKhUJxNTMkK4CGY4fY4kkgpUm4o4m1r73J+MWrSHFptAKxQDObN206fbPs4nGYdRWEtUIm
      jszCcVpZ4GDSrFk8u24HbSvnMvaa65i+aRc//vFjrHzPEtJcUFVxkOyJc1k4dVQnsZOSM5K7
      H7iTx373PG+VFnNDL4nQFQqFQjEEAiC7eDRix1E2bWoAJJrdzYp7PsqcaRNxaAKnJ4ORxR52
      bNly+poxU32U2BLMWbqIlHM0xSPHTWd8dZhIOEFWZhb3fuofePOVV9m8/m1sNrB7M5mUmwkI
      cgpK0TxWCjaEoHj8bO65pY2tB/YTnTset9oJUigUih4ZdCiI4UGSSOhIwG63o13RYR4UCoXi
      wiOEEJeJAFAoFArFUCKE6F9cO4VCoVBceSgBcBkhTXPI0tspFN0xlH1Mmqb10+0xA6nrqj9f
      ZFQ+gMsAo/kE7U89RXj7fqQJ9vHTyPrkJ3CmmoTfXkdw42YSVSeQ2HFMmk36qjtwj+khjnsS
      /fj+/9/em0bXdV0Hmt+9980D3gTgYZ4HzpI4iBIlWZNJS6IHxYltOZ7tuCpxVlWqUqu7Vmp1
      Vzv9I/2je1XnR3USO6l2HMXLgyJPsqPZsmZZpERxJkCAxDw/4M3THU79eCBBECAIgCAJCudb
      i2uBF/fte+/Dvnufs88+exP7x6dQmu+i8ksfA3Rmvvs3FGK5Bec6dz9I8KN7sZKjJJ/+CZm3
      jiMsBfsddxH+8hdxBJwLLyBZP4giyZ8+RbZ78JKDKp5HnqDsjgYQJoUTh4n/+GmKQ1Pg8ODe
      /xihTz2C5lhsjCjQh3pJPfsshqtjVn/msBITJP7lJ2TeOoKwBLbmLQS/+Ue4q4NgGeQPvcb0
      k09hZnW0+s2Ev/EVXA1rW9lWsjykA1jniPw0M3/3HUxnI+X/x/+J5lDIv/+7UiehfIJcVx+u
      ux8h9PUmFKtA+tc/Ifb3PyD6F9/CXrZ4IwxRSJD48VMY8QSMT88eteE78BjOVH7uRLNA4jv/
      DWvrw2DmSD759+TTQcr/t79E1bIkvvcdpr//FJV//HlUxzpqCC6ZhyhmKHSdxbHlflytc4ZW
      iwYA0PuOEfvv/4Tr0T8g/GfbEOkZcl19iEX28Qg9TfKnPyL9xnEUu4lVHpj/+0KS+Pe+SyFR
      Rvn//pfY3Dbyx98r6Sugnz9K7B+ewvN7X8W/p4HU099n+v//PuX/8U9xBJZo3CK5LkgHsM4p
      HH2XYsZD5E++gDNS6qJkf6xU7lpYTsJf/0apneLs+YHPPk7mv/wzoqADi71Qgtzrz1HMeAk8
      vpPEu+nZ4wr2pvZLejYIisdfxTDriTx0GyIxQG7EIPiNJ3A1VQKC8L/9GqN/8R0Kkx/HXSsL
      wa1XRDqFpet479iFp3F+pVxh5sk89xLanv0EP/kgqgpUVOBo7lhcWD6JkdMI/cm/R/S/wcwH
      8+eZes9x8gN5wv/rn+GqKqVo+6IHZy9mkHvzddTb7ifwyF5UFQJf+DKF//p/kz8/guN2WQ/o
      RiPXANY5xZ4T2Dv2oNkL6KMj6GMTWMVSSqyi2lBnjb+wLMzkNOnnXkapqUJ1Lx6WMUa7STx/
      GN/Hfw974Mr+XxTSpJ77Da4HP4bda0dksiA0VNcFp6KgRTtx1RgUJpJr/tyStcNMJbCyFopT
      YKbSWAV9rtNeZobCRBzPrjuwpifQR0YwYnGEZS0qS/FVEf7yV/FsaUW1L9SfYu8J1Kad2L3W
      rL6Ol64HYOUpjmTw3L6dCwV9VX8Vrs4QhXPj1+npJUshZwDrHCueRB9+m6n/9hrmTAqEgq1p
      B+E/+jy2MhcUUqR+9QzF0SmM4QFMKoh865tovoXtFIVZJPnjH6F13ov3tmb0U91XuKrAOH+c
      XE+S8q/vQ1EU1IoomsiQ+d372B/Zi6KCyKawLBNrMn0FOZL1gMilsOJx4t/57yiqguJw4rrz
      I/jvuQNRKCLScTLP/phUcgqRyYPTh/u+RwgevBf18uq6irpk43IrnsQcGmbqr49hxOJggVa/
      hdBXPo/DX8QqmqiOS/sBq9jqqimmZSHHm4F0AOsdRUGraaLskQdx1FdiTfQx/bd/w8xPyyn/
      0sdRbA5sVbVYlh2RT2GcmyTf1YOjZg+KNvemCiEoHHqJ3JBC+V88jGJTLvZgvrzfstCzpJ57
      Ecc9B3BFSiN+xR0l8NmPEfvuDxl75zdobtAnY4iZNL6PyonkesbeupOKbzeBAGEUKB57l8T3
      /haz8O8I7I6g2O3Yt+zBd+8d2Mqc5N99mekfPIW9qQ7/bSsLyyiKglpZi//gAZwttYiZYaa/
      +7fM/OQZKr56oFTBUbn8M1J/bhbSAax37BpqqB1XWz0KoFB4JxsAACAASURBVNV3EPzE/cTe
      GkaYAtXhxHPP/XgAhKDY/TaT/9f3cLQ142m6tIpqkcSTPwZnlNRPfgCANT2M0Z0i9t0Evs98
      DVe4NGvQzx0j1xsn/Nn7592Ka+fD1Pz1Xoqj4wgc2GsiTP/XP8dWPX8hULK+UBwuHNU1F//v
      bGhGVYqkPvgAa/dHwe7CufU2HOWldRzPvY9ROPw6xVh85Rdz2FAjzbg3N5fsfFUzwU/uJ/bs
      USwcqHY7VvGSRAME+tAQSsWWa3pGyeqQrned42juRD/6O4yMXjogQOizoyYh5udRKwqOjh1o
      tgJ66vJ0To2yb/57gl/4HO47d+PeuwfnpkbU+kbcu3dj85ayeISZI/38i9jueBhX9cLG3IrL
      h7O5FVdzHVb/EfKJClyyBee6xkwnsYrza+RaxQJoNlR/EJvXRfbI0blfCgOh21DUlZsHe1MH
      xonfoScLc+J0AagomgtHnYvse8e4sMJgpUbJn5zB2RpdxZNJrhU5A1jnuHbuQ/vt/8vMj35G
      2YN3QWac+M+ew/mxP8Y8+x6x5w/huetObFXlKFaB/LuvYDgqS+0ZhU761z+nYNUS+eQ+3LfP
      b7Zd1MZJn0/g3TV33Og9Rn4gRfBbdy2I9ebefgmTMPbaCqzYEIl//ifcH/0CtoAHyfol95uf
      kO7W8d+/Dy3iwzx/kuQLH+D9/LdQnT58++9j8h+eJhHx4u6soXj0dXLDBuHP1IEwyb72POlh
      jYonDiDS0xTODwFQHJiAhEnu2FEwbTg2d+DYvAtH6DVm/ulHBB59AKU4Q/zpX2Lf+QdoTjvu
      e+8n9f/8I/FfVePdVkvmX5/CDLfibqq5ylNIrgfSAaxz1HAdoa99lcTTvyL+5FkwdOx7PkXg
      wR0ohQTOutOkn/8VOJwgDBTNT+jP/gRnxI85PUD61dex3//EorIVbwhHnX3eMX1kGOfuj+Jq
      iiz8gJUn88IzCLsNUSji2PM4wY/vQ9Vkcb71jHvfIxiZF0k98zOw26Bg4P30lyi7uwMFBcf2
      +wh/Lkfy+V+Re9sFRSj7wldwNUSwsjNkXnoBNj0CCpgTA6R//WssEzBN7B6V5C+fATNAqLEJ
      R7iS0Fe/TvypnzHz5JMolo5t08MED96NoirY6ncQ/sqniP/sBYrv28EeIvy1J7DJPQA3BVkM
      7hZBmEXMdBZFc6D6PPPW0YRexCrqgILqdqOopd/m3vgZ8ZeHKP9f/hi7x76o3JViFfNY2RyK
      zYXmc6+JTMkNQAgsvYAoGCguF4rNNn+GJwRWMYeVLaJ6vSgOOwpQPPUqk//wGhV/+Z9x+Bdm
      ll3xcpaBmUqDakfzeS4mGFy8VjaNpVuoHi+qQ45DbwayGuiHnPzh3yLKN+FuqrrZtyK5RSme
      fAddrcK7uelm34pkjZEOQCKRSDYoshy0RCKRbGCkA5BIJJINinQAEolEskGRDkAikUg2KNIB
      SCQSyQZFOgCJRCLZoEgHIJFIJBsU6QAkEolkgyIdgEQikWxQpAOQSCSSDYp0ABKJRLJBkQ5A
      IpFINijSAUgkEskGRToAiUQi2aBIByCRSCQbFOkAJBKJZIMiHYBEIpFsUKQDkEgkkg2KdAAS
      iUSyQZEOQCKRSDYo0gFIJBLJBkU6AIlEItmg2K52gmVZCCFuxL1IJBKJ5AayLAdQLBZvxL1I
      JBKJ5AYiQ0ASiUSyQZEOQCKRSDYo0gFIJBLJBkU6AIlEItmgSAcgkUgkGxTpACQSiWSDIh2A
      RCKRbFCkA5BIJJINinQAEolEskGRDkAikUg2KNIBSCQSyQZFOgCJRCLZoEgHIJFIJBuUq1YD
      laxvhLAoGAZF00IAmqri0DTsqoqiKNcgVyAA9RpkLBdLWOimiWkJUEBTNOyauuprr7U8yfpG
      CIFpWRiWiSVAVVRsmoqmqqz2L24JC8M0MS7qkIpd065JJ9dS3lohHcAtimkajCam+GByiolM
      mlRRxwKcmp2A202Ft4wtFVGiHhd2dfkTPdMyGU/EODIxiaV5ebSt6booiRAWuWKBc7EJepNJ
      EvkCBdMEFBx2OwGXm45IlPZQYFn3L4RFtpind2qCc8kkyULxojyn3U7A5aGzPEpzoAyntrqJ
      rxCCodgIpxIZFEAIaKyoZVPAuyp5NwMhBP2To8wY1rI/Y7e72VoRmWdMpxPT9KWzrNZ+OZw+
      tkaCq/vwLKZlMp1KcGpqgrFcjkxRxxACm2rD63RQ5QuytaKSkMuBtowbFUKQ1wv0xyboTiRI
      FArkjVmdtNkpc7loDVfSEQ7i0rRlyCvpeF9sgrPJJMnL5AXcbtoilbQFg7hWqZPXiiKu0u3F
      MAzZD2CdUSykeabrFKfiKZZ8jRWVu1u3caCmYllyp5MxXh/o48RMHEOA0xHmP911B/Y1ues5
      DD3P2wPnODQ2Tspc6gkU9jZ0cKCpbslYpaHneKOvl8PjE2SspdRZoT5UxcH2NqIux4rvO5dP
      8L0j7zOpz93z3e23caC6fMWybhZCGPzTW6/SZy7/Mw57iP90904u/cZOnDvO00MTq74Pl6+K
      /7xz66o/n82leOV8Nx/ESrp6JTTVzu21zRxorMexhBKZRoHDg+d5Z3SMuLH0l1PpL+dgRycN
      XtcS8vK8M3Ced8fGSF7F2VaVVfDxjk5qPc4lz1trvF6vImcAtxj5XJJ/Pn6E4bwBQIUvyKZI
      OY1+H04FZnJZhtMpzs1MMVnQyRnG0gKFIJmJ88bAed6fmmEFdmHFCGExPD3KL7q7mZo1opqq
      0hCIUOPzEXA6sGExmcnQMz3BZMHgd4NnMVU7Bxuii8obmBrmmZ4eYhflaTQGw1R7fQSdDjQs
      JjJpzsYmiRUNBmdG+f7xPF/fsYNy5/LV3zR13uztZlK3cNvtmLrOLTksMrOMzv6RA043LvXq
      I2Obw7kglOJzu6lye1hJr0BdWEzn8wC47VcfQV+JbC7BD44eYaRYehCv00NHOEKlx4NPU0kX
      84ynU3RPT5O1dN4b7GYkleEb2zsXzASEEIzHx/lldxejhdK7oioqdYEQtX4/IacTGxaxbJbe
      6UnG8kUmUlN872iWf7NzD9Uu2wJ5ozNj/KK7i4nZ+1MVlYZgmBqfn+Csjk9lM/TEJpko6Iwl
      J/nesTzfvH0nUdeNNcnSAdxC6HqWX545wXDeQFHt7GvqYF9VBW5tLt5fF4qwTVgUDZ3+6Qny
      ds8VpAkSmSTvjwzw7sQU+dmRuNfpIaiZDGcLa37/uUKCp051kRQCm2Zna7SWu2pqiLic2BTl
      4jMIIbhPb+LIYC+vjYxzbKiHbRURGt3z1TWVneZfzpwlLQQ2zcGOqlrurKkh7HQskPeRhiYO
      DfTw5tgkudwMLw2O8ERbwzLvXDA4Oci7sSSg8kDbJt7tPkXMvJ7u8vqQz2Yo/WXtPLZlB43u
      K49iL6IoCwxFQ7SFr1Y0rejafRN9PN3Tj6Fo7K6qXtFn5zB55ezpkvFXNLZXN/FwQy1+u+2S
      eLrAsgTJXJJXes9wLJ5hND5MxmynzDbf8Zhmmh+dPEXCEmiqjU0VNdxdV0uly4VNna9D9zY0
      cWLkPL8ZHCFnZHnufB9f7GzFfokTLRST/Pjk6ZKOq3a2RGvYW1NLhcu5QN59DU18MHSOV4fH
      yBdTPNc3yBc7m5YVrlorpAO4VRAWXaMDdKVygMrdzZt5oKYc2yLKoigqTruTjmjdFcUlMwme
      PnGMwYIOgNvuZku0mr3V1QyPdDOcnVz7RxAWuhAEPSEea+ugucyLbZERqKIouB1u9jZ1cC6d
      pTeR5kwsRkNtdF7MWWBhCEHYG+ZgeweNfs+iL4+iKLidHu5p6SRfLPJ2LEHvxCjplgZ8ywi9
      ZrIJXhkcQgfqy+vZGfZy6Bq+h5uHYCaTA0CzuwjZnThtqzMBqqriXMnakpHj6NgEOhDwhLgt
      Uraq6xYy0xyNZwBorajn0eYG3Avi5wqqqhD0BvlYx1aSx4/Ql9M5PpNlX4V//mxGWBiWoMwd
      4EBrOx1B/6JrToqi4HK42NnQRlEv8OJojIHYODNGE5WOS7/Dkk4GPEEeae2gNeCb5yDmy3Oz
      p7GdYrHIKxPT9E+NkmxvJKTdOAcg00BvEfLFLO+NT2AB9ZFaPlK9uPGfjzL7byGWZZLRdVw2
      J1urGvnSjjt4rLmJCrfruimFoqjURGr40vbttAV9ixr/S9E0By7NCQhGsxm4POCgqDSU1/HF
      7dtoLvNedeSkaU62RitQAcvMMlG4SngMsCyD9wbPMZjTcTt9HGhuxHarJhMJwXiu5AD8bhcu
      2+rDMCtlKDbG+UwORdHYWVuHdxmhp4UIppJJSkMWO7tqqhcx/vPxOL3sqSyt0UylUyxY8VQU
      KkNV/OG27WwJXz3hQFXtbKuqQgOw8ozlL9chhapwNV/cvoPOkH9R438pmuZgW3UUDRBWjrHc
      1XVyLZEzgFsCwURiksGcjqJo7K1vxLGqF2gOm2anM1pPZ1Ut9X7vDRkJuBxlfLazDMcKDM+F
      ZbHFchX8rhC/3xnCsYyMjAs47A7sgA4suV48y3BsmHcn46Bo7K5vpc5tB+uWjP4jhGCqkAUg
      6HBesw4tF8sq8t7IKHkBQW+A7eWhVcvKzi7Qag43Eccy0hMUlYirFObKG0Us5o96Nc3L5zZv
      wrkCnbTZHTiAHGBdppdOh5/PbupcmTybHTtgwtJJHdcB6QBuAYQw6Z6MYQIed5jOsoWLcivF
      5ynjQPvqpuGrRVW1JTMxFiAEudkfg04nl89mVFVjRbk8QpDMpikCqmIjcJVFYKOY4ZW+fjKW
      oDoc5e6qyEqutu6whEUqX/pGfQ7vVUena8VYbIyz6VLocltNHSHb6ocbAWfpL27qeZKGQeVV
      ctSEECQKJYfttbu4PLqiKBoryAUAIchk07PrKBqhyz68GnnpWZ1cTN71RoaAbgHMYo7BXA5Q
      2FxRvmG8dkHPkSmkURSVKo//StGsZZMvZnhraBwBeNwBglcZpB3qO0t/Tsfp8LC/uRn3DTKY
      1wvTMpjJlQIoEZ//Br38JoeGBsgLCHgC3BYJX4MshfJQhIACiCLvDo9SuMo0rqhneXuslK7a
      Wh665oGTbhR4fWC4tOfG6Sd8Dc6sdH953hgcxQJcrsANjf+DdAC3BNmiTraog6JR6fXP+50Q
      At00yOk6BcNYUVreeqZQzPFS9wkGMnmC3gi3V5Rd08ubL2R5rusE53IFFEXj7vqGJcaOgqmZ
      EX47Po2Fwq76VppucI729cAwskwZAAoVS+Swrx2CqdgIJ9IFQGFLTT2Ra0j/BFDtPg4016Ip
      cHa8nxf7B8ldIc8+k0vy3Jnj9OV1FNVJm+fadrToeoFXe05yPFkKo+2ua8R7DRu4isU8L589
      wel0aXC3t74B1w0eY2yUweQtTVrPkjYEmqZQ5nRQKOboj8c5NzPF+USKrGkiKA2QHTYbLeFK
      NpVX0lTmu6EpZWvFdCrGC2e76E7ncDp8PNrWhvsaniOWnOK5s130ZvKASkdVE7vLA1c83zQK
      PN/bQ1EIqkLV7I1Grqmsxnohl8uQn/353MQQ09NzxktTVTRVw2N3UOH1U+lxXXOZAiEs3hke
      xBDg9QS4PRJa9c7hORQ21bRzoGDw0sgE7w/20Dc9yR1VVUTdblyaSk4vMJac4YOJCWaKOg67
      i4fbti4jaeLKJDIzvNzTzclEGoCaSD0fqY6s+juaSU/z4tkuulJZQKGxooF90fAN1zPpAG4B
      TGFhUnqhjg2e5eV0gnghv/gOSL3I9HAfx8ZH2FHTyAN1tXhvYLbHtSAsg66xQV4YGGCmaKAq
      Kh9tbqGt7Ep7GZbGMnW6xgd5vn+QhG6gKhqboo0cbK6/YvxbCJPjgz30ZHVsNhcPNjXhv0W+
      v6URJDK5iz+/P9y36FkKCh6Hg0pfkD01dbQFA6tcKxAkkhMci5euuSVaR7ljbcyNqmrsatpE
      eVmQ1wb66c/Eeak3jk3VsCsKumViCAGqSn2oioeammj0e1c1gxSWSe/kEC/2DzCRL6IoCo3h
      Wn6vo2VVi+jCMjg7PsQLAwPECjqKotJaXsen2ppv2KL8pUgHcAtwIZnTskxOT40DCgFXqd5P
      SyBIyOXCrkK2kOPM1Dh9yRRZo8jhwV6yhuDxloYbtuC3KoQgU8jyZv9Z3huPUQTsNgd31rey
      rTyy8hdXCFL5NG/093BkYhodcNic3N3Qyl3V0SXqrgjiqSleGSnFjLfXttDic19z3Hi9EAmV
      0xFLLlouwxIC3TTJ6AUyxQLnp8cZjMdoj9bzWHMjvhU6Qcs0+N3QIDqlWPnuyjBrqYKCUnG1
      C1k4CkqpCKKioCAwZ2fFpfMsLMGCBeClLyDIFfO8PXCWQ2OT5EUpc25nbTP319XgWemgQAiy
      hRxvDZzl0NhUScc1B7vrm7mvphr3TRpkSAdwi1FVFmF3dTUtwRBBh33BlHF7VS2DsVF+3dvL
      eEGna7yfk5EIt4d8N+mOl8ayTEbiE7zQ28tgrpRbEfAE+GhLO5tDgZW9tLPyBqfHePHcOYbz
      pdyKkDfI/tYOOgP+JY2Qrhd47fx5kqYg6CvnwdroNYUN1hcKAV+Ez9++eCaTEBYFXSeWTdMb
      G+O98UmShsHp0T5U1c6nW+pXYMAFycwMR6dTAGyK1hFZo9E/lHbEv9R9mven4whFozkcZUdl
      JZVuNx5NJasXmEgnOTo2wuDMBD9MzHB3YzsP1VUtK2RjWRaTySme7z3L+UwpaOZ3+3mguZ3b
      IqFV6eRYYpIXenvon91hH3CX8WBLO9vCwRXLW0ukA7iFsNsc7O/cTot7idGColJfXsunNYUf
      nDpD0tR5d2SM20Jt624ka5lF3u07y6uj4+RnR6UtFfUcbG0hvAqDYRkF3jp/ljfGximI0m7L
      1op6Pt7aQuAqi49CCHrG+jiWyKAoGg+3duC7xgyPWwlFUXE5nNQ6nNQGI2yrmOTpM2cYyRc5
      PXqec9EorT7HsnRIWCbvDQ+SE4DmZl91dM3WooQwefnMcQ7NpHHY3TzUuoldFeF5RjSIl5pA
      mG3RGo4M9vDc4Chvnj/NnupKymzaks9gmTofDJ7j5aFhsrM62RCp5WBrC5WrKCBomUUO9/fy
      25FRcrPymsrr+HhrCxHnWpdZXDnSAdwSlFTWEoK8bsBSDmCWylCUO8KjvDoZZyY5TdoC/zqy
      Z5aR59fdJ3h/KgGAw+7mwZZO7oquLtfeMvL8/PQxjs+URp0uh4eHWjvZU7G8tMNEOsZLQ6NY
      KGypaWNbwL3E2colP603t7o2hMsq+ERrgSdPdZG1dE5PTdHqrVlWKm4iM8OxWByArdUNlK9o
      88cSCEHf6Dl+N5MGbDzYtoU7K65cUtpmc7C7sRPTKPL8aIzn+4f5dEv9FWd1llnk5Z5TvD0e
      K/XC0Bw81LqJu6Llq3Jgllngue6THJqcmb0fFw+1dnJX5fpJKpAO4BbAZ3fj02DaEqQLBeb2
      xy6FRnMkzOuTcQwrT6xo4netk8VMofNi90mOzBr/qkAFn2rvJOpeZaqlpfOvZ+aMf20oyifb
      2qlwLU+eMIu83tfLtG4BCrHEOD88PnllW2eZJGYLwZ0e6iU2NVA6LAS31W9ma2gp53HrUBGI
      0Oh3czqZYzyXQSCu7vCEwdHhQZIWqJqTfbXVa2bsLMvkxGRpfaYmVMn28JUzuS6gqBo7G1s5
      NB7j7OQE6foagovNLoXB672neGfW+Ed8IR7v3Eytx726zCWh85uzJzk8a/wryyJ8qn0T1R7X
      GmRCrR3SAdwCeBxOPA470zmdgVSSOyuWt4NX1eY6IlnLqXtwAxBCcKyvm8NTcQRQH67mk+3t
      lK9yOiyExZG+Lo7Mxpubymv5RGsb4RXsqLSMPMO5C9VPBePpOOPL/OxMLsVMbu7/ddEbW8vl
      eqJpNnw2O5Bb9v6SmdQMx6ZLjr09Wk+1c+mQy0owhcnkbEw+4g0uq5Q1gM3modZtYzqTI2la
      LDZnODXUy9vjMSxmByQdm6lyrz5Ec2zgLO9OzCCYHZC0d1Lpuvkhn8uRDuAWwO5wUeNyM5TT
      6Z2aINdUh3s5s2rLQqFUj9yzLuLZgkRinOeHxzCAikAFB9tWb/xBEJsZ48WRcSwgGozyWGvr
      iow/gGr38FBTGzOzlVGvhiIKvDIwRN4S1EVq2F42Vxe/sezDMfqH2U2GYgXVaYTJybEhpg0L
      u83FndVVaxwgExfrN9lUdUUj6dK5YkHtHhCkUlM8PzhCQUDIF+Zge+c1GH9BMjnJ84Nj6EDE
      X87Bto51afxBOoBbAkW1s7kizOGZJPl8nOMzafaEfUu/AMJieCaBAXhsHoL2m+8ALMvk3eEB
      chbY7B4+1tJO9BpeDMvU+d3wIHkLbHYvj7a2UbEKZ6KoNjoqa1Zw4SyHB0fIY9IQruTO6vVf
      I8iyTEyhYF/BztVsPst4ZrZ4nPPq4bRUJs7RWGn0Xx+pptG7trunFVTcdhVMi6lsnIJVuaxZ
      gGnmGc+ZoLpxX1btUwjB+8P9JA0Lzebi4ZZ26q5h17ewLA4N9ZO1BDabm/2t7VS7V754fKO4
      +VZBsiyqQpU0uGyA4M2+HpKzec5XIptNcHSm9DLWhCI3ZIu5EKURlhBiYdldIF9Ic2Y2Tt9R
      WUej79rKEaTzac7GSzszt1Q1XNOLuzLExe9eLDs4cnNJ5Wb4eVcX47nCon+by7Esk5MjA4wW
      LRRFoyVwlV2qQnB6bIiYbmKzudhTPVsyeYVc0KELenQpmqZRHyzF/YenJ+hJZq76LEKYnBnp
      Z9wUhP1l+C/LBjONHCdm16KaItW0l11bf+eCnuHUdBKAtopaWvzre0YoHcAtgsvpZW91FQDJ
      TIynunrJGuYiZZIFppHn5fM9jBUMbDYnu6OVN+AOBbHEGM/2dPGvPV10J7MLTON0fIoZC0Bl
      R1VlqQb6RYexvH+XEotPkhAlebdVVaJeo7wPM5Zlcm5qhP9x5DC/HRoiY1iLOmohBMIyODrQ
      xStjpaZAQV8528O+JcM5hXyCQ7Mx75pgJa2r2r0tyGRiPNvTxbM9XRybTs/TIUXR2FVTh5NS
      iennu07NOoGFf8fSc5icHe3n+YFRAHbV1C/oH5CITzJlAShsi0axK9emQ/H4FNMX5FVFsbG+
      dVKGgG4ZVNprWrk/neLVyQTDsUG+eyTJvro6OkMh/A4bulGkbybGW4PnGcwWAYVNVc10XBaX
      tswixyfHSeuLx3dH0qVpv2HmeHuwf8FITlM1NlVWE7xkNCUsnbcGBjgyOyK3ucJ0BC41AoJ4
      /sJCq8LpkT4GVtBRSnH4eLiuar683Jy8E8Pn6F1BUFgA7dEGmn23fpG35aBpdlw2lbiR57Xz
      Xbw1cI7N5VGaAmVUerx4bBoFvcBIKsHxsRH6s6XFVofdy8H2NhxX+WqPj/QzbZiompO7amuu
      UqR5cYQwOTw0wOGJUuZMXvGxPTK/g5fXV8nHm6r5ef8o6UKKHx07REdFNVvCYWr8PlyaSr6Y
      ZySV4OTEKF2ztXtQneyJXO7ELtVJlZ7xQSZjy5+3CAT1kTo2Bz0Xj8TzF6otqXSN9jOygpCb
      QNBUUb/gfb2eSAdwC6FpGvd27ADlBK9NzJDMJXj+bJJXNA1VuVAZ1MSkNFq6raaZA43VC0Zu
      wixwaOg8w9mlFz1NM8cr53sWHFdVOx5PhOAl6Y7xdIL+VKlVn6I6aAkuzFQqmhccjsnR0aGV
      PDpub9UCB1C4RN6RkcEVyQOFsrLq1TkAsaA32brH7w7xtdt38vZAHx9MTpE3dY6PD3FiXLnY
      q1YIgWFZF5+t3BfmY20dtFylcqheTPLO2DQW0BCK0uxfXe2mXD5L90x89n82WsLBRWcdW+o2
      odpcvNQ/wIxucmZiiO7JYWyqioqCJSwMy7rYXCXsDXKgbdOi+f+X6tDJ8eEV37PiqrjEAUDB
      mJN3fGxlOg7g8ESlA5BcCQWb5uC+9h3UhUY5ND7OWDpNyjBQlFKHK5fNQa2vjJ01DWwOB3As
      1t9UtdEQiOB1rS5lUVFtlM1bVBb0TY0xY5Zqku6oa6HV71rw8ga9fjrCq+t55HD7LzuiEPGV
      0aGvcnFDUVbffEO10xmJMGVYVC9zr8HNRlEUyjwB9ndsY3ddipPjo/Sl0iTyebKGgWEJVEWh
      zOkm6PbQHomyraKcMof9Kpk8gmQmS0UwTESo7KqrXXZ65uVyRqbHGNNL7qe9upGtwcULuKmq
      yubqJmoC5RwfH6E3kWQmlyNjmqCoWIDP6SLk9tIaibKjopzAFbqHlXl8dITLV3G/JSouyxYq
      6bi5annl15B6uhoUcZWgk2EYFItXboGXSycxNRe+S1e6hUUykcLt82G3aViWQSqZpSw4V9Pd
      NIrMTE+TKxhodgfhcAin3Y6iQD6bIpObu6bD5cHncc1bhBKWxfTkOEXFQbQ8jHqJ0hmFLIl0
      Dl9ZEOclYYpiLkPOVAn4Sh42n0khbG7c8wyBIJ2Mk0hmEIqKPxCkzOdZl/s9TVNnJp8nreso
      CpgCPDYnYbcbxzXUKV8pRjHND44eoS9XJOSL8OUd2wl+KCpofpgR6IZBplgkZ5qYouQAnDY7
      focT+yV7SG4EppHn5yeOcCKZxenw80e7dlG+nN4BQlA0dJKFAnnTRFVUBOCy2fE7nTf0PbjV
      8Hq9yjXPAI6/9gyxyt08urtz7qCZ4ic/+Bn7/+DTNEbLyCWG+N733uBbf/5FHEAxM80Lz/yK
      0wNjGJaFoqj4/WE+/sQXaAy7OfPWszx3ZBCvywFCYKHSvG0vH713Jx5HSSn03DRP/u3/x5Ra
      yZ/9+b+l4pKp/ETXIf7HL17njvsf59H7tl7cxj10/A3enPbxpUfuAeC9F3+C3rafB7Y1ACCE
      Qdeh13jhjffIFgxQVNzBKJ/4/c/SUrG6ae31RNPslHvtrH78sjaMxGOM5YvYNCf3N7VK439L
      oGC32Qna7ItujLrRTKfjDKSzqIqNj7S0L8/4AygK566jMAAACf1JREFUDruDcvv6TbVcz1yz
      A9DzGbKFwvyDikU6lcKc3URimTrxZOrir88c/i3HBvJ85gtfoykaJD0zydFDh9Fn43F6PkvV
      1rv49L3bEZbJYM8JfvHTX2Dzhnh0bxsKgti540yXNVCn93Oib4oHttVeHLEIPU/OyPP2Ky+y
      67ZWqmfrupjFHOnsnGJl0ykMfXamIQSTPe/zz0+9wL2Pf4577tiCTRToPduDSw4iroywODNe
      avi9raqBreHLQzUSyVUQFr0ToyQtaCyvYU/l6pvGS1bGTVkDiI2NULV5L+21FQCEKmp44LFP
      zjvH5XZRVlZaSAzsvo9cfIQPegew9rahmkXeO9bNtu27aDC8HP3gKPs21+C8pCRg9eY9VMVP
      8fLrH/DEwbuxXWU+axl5Xnv1ddru+yT7774dTVUAJ9tu37mmz/5hI5+d5kQyR8Ab5oH6Grmo
      JFkxxXyKYzNJ3A4f+5ubVpVBJFkdazK2XbhBZGlrW9XYTP97z/LiWx+Qyi1v+70lLMSs3Fxq
      hr7+UbZs28KWrVsZGz5PLJmbd75haTyw/wDdR97g/HjiqvKLuTTD/ePcedfOeesJkqXRsfOR
      xlY+3bmZsF2af8nKMRSNPbXN/P7mrdSs05IJH1bW5I1974Wf0vvmc3MHLJOJuAJXSPjo2PUg
      j6YM3nz9X3njhV/Qtm0n9+zbR3P13G7DQjbD1NQUwjIZ7TvNi6+e4e5P34UKTA2eIuZopi3q
      xkk7NdYv6RqapCbUeMlVBOHm27i75W1+89vf0fCZ/Us+g2kVyBseKoLOdbngu17xewPs9l69
      KqNEciU8Lh931K3PhkUfdtbEAbTefi8P3956MX9YMdP88IcvXXEioNk97H34E2zdcy8jQ328
      +847/OPfneCzf/THbG0oxf+6Dr9FfvAUlhAYhsmuA49zz/YGsPIc++AM4apqBnt7EUCoys+p
      90+yb2sDzktG74qicff9D3P8yWc42b+DpaLTqmLDrpoUDMFVd71IJBLJh4A1cQDBikoam5rm
      DpgzuGzakpEgRVXxByN0BiO0d27mp0/+PUePnWfLrAPo2LWPx+/dAZTSQN3OUvvDbGyUc0Nj
      ZGw5nnmmr9T3U8+TEj1MzOSoj8zP1gnWtrN3cwVv/vZtHmi78v1odidev6D77Ci1O2rXVc1u
      iUQiuR6siQNYaUGsyZFBHIEKyjzOkqFVbHjcDnRlTo7L6yUYXJigNjZ0loxWz5/+h2/gm03o
      EXqCf/jrv6NnaIz6SMv8Dyg2du67nw++/xTvUwbBxecBdpefbZs7eenlF9jR+gSR2d2PeiGP
      YnNiXxfllCUSiWTtuH6rdoIrVuo7/trTHBqx0dbaSjTsZby/m3dPxfjyn7bOrUovNgIXOl1H
      TlJ/2+75O1GdIXZsreLQkW7u29ECyvy+Rf7KRu65rYkfPPsOHR9pX/SeFNXGnQ9/jKM9f8d3
      vvuP7Nq+CdXMcL5/hH2Pfo7tDTLOLZFIPlxo3/72t7+91AmWZWGaV97arCgQqqyl/LIyqkJz
      UN9Yh3u2/Zpmc9PcXIsK1LZtpcwuSKaSJFMZHL5yHv/sZ2iNBlBmZQbLq6m4fLRu6SQKKlu3
      biZwWX0SfyCCQ1GoqqvGpip4ysLUVlzovakSidYS8Lpoam6jpmI2z1gIwtF6wrMlWzWHl527
      duIwMszEkxQNQUPbFrZ21MsdhRKJ5EPFX/3VX/3lNZeCWDWiFDgSomTw10uTZOCykqyKXA+Q
      SCQfOtakFMSqmQ3TrEfjup6ckUQikVwvZFxDIpFINihy6+a6R5AvFtEvC0u57Q5ss3seikaR
      mXwBAfhdHjyadsWZlRAW2WKBnGGCouC2O/Fe3MEryBWLGJdfy+HApigIYZHTdcx5v1fxOuyo
      cta0jhEUdJ2idenOTAWn3T5bLlxgmAapQknPbJqNgNN5sYjiQnGCTDFPqqijqBphtwf7vN3z
      Fyp0FtEBt2bH73RclGdZJqligaJpoSoqfqdLrrHdJKQDWOcIS+el7pMM53XmSh0p3NG8lV1h
      L7l8mpd6ztCVzKIqAp8nzKc3bSbitC3ofmSaBocHezk2NU1KNxAoBD1+DrRtps7jAFHkha4T
      jBWMedfa3bKd20NuCvk0z3SdJmFeMnVUbRzcsoPqVTRjl9wYhDB563xJR+aaoih01LZzXzRI
      LBXj1f5+hjJZikJgV21srmrkgfqaeRsrZ6UxEZ/gVz09zJgCy7JoizZysLkBh6oAgkQmzgs9
      ZxnI5gEFh83BQ53b2VrmJptP82b/eboTSfKmhYJKXTjKx5qbCTikObrRyG98nWMZBUYLBnub
      2mn0XMh8ErgcLoSwONzXTZ/u4Ku7biOoGDx98gjPnu/ncx0tsy/kHIPjg7w3lebepk10hgKY
      Rp5Xu0/y/MAg39jUOnstk3uaO6hzOy+5VqnUbrZYIG3C/o5tBGc9hAD8sgbQukaYOuO5PNtr
      W9kSuJCtJ3DYnQgjx0vne3B4K/nDtm1EXDYGJ4f5l3MDNAdDl7X1BFPP8lzPWcpCdfxhcwPZ
      TIwfHD/GO74A91UGMY0cL3Wfoegu55tbmvHbVMbiMRS7DRB8cL6XIcPOwU23U+/3kkhP88vT
      J3l3KsT+mptd2HzjId/cdU42nwdVpdJXRsg1/89VzCU4mSpwf1s75U47YOexlmb+5vQgiWID
      FZcV1ioPRflKtAnvhem25mVbJMTxsVIf00wuj6LZqPT6F1wLIFXMYKpeqnxe3DLic8tQKOoU
      TIuoP0DIM79uvrDg4bYdVHjnDH1jeQWR/iGS5sJCjaPxGGnVzSP1dbg0FZe/nI/UVXN4aow7
      KwJMxicZM+w80dp6ca9OdajiwtXY3NDObo/3YrWVsD9Cm8/FUK6w4FqS648MvK1zksUCpgWZ
      fJbxVIpUce6lLOo6TruDqGfu5fX5g4SsAjPG5e0eFXxu75zxBxLpGV4enaA9XNoXES/kEQLS
      hYXXAkjl0ghVJZFOMpFOkzPMW6437kYkaxTIGRZFPcdYKkWiULyY6qyotnnGH2FyZOA8cWGj
      2rWwN23WKOB3lxGabcyEAs1lAaZzBXTTYioVp8wfgUKSUxNjnJycIF4ozuqJQsjrnVdqa3By
      kEPJIu1X2KEvub7IGcA6x1TApli83X8WYZkkdYP6cBX7m5vIGDq6JeYt+Cqqg7KrNFOyLIPe
      iWFeGRzE5atkf10VKAqWAjYM3uwrXSulG9SHqznQ3IRbU1CEhmqkePFcD4apkzIstte2cG91
      5WWLgJL1hIXAoWkcGuhBEYJksUBloJL9zc2ELsTdhSBbyPLKuS7Opoo80LaJqkX602YKeQSe
      Sxb9FdxOxyWtXi2Gpof4l+wUPrsd3cjzgq7w0Y6tbAv6Lp5nGAXeH+zlrYlpttS0sD0kq4He
      DP4nEnBrriLAYRAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Dashboard' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Histogram' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Map' width='384'>
      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
      AfPhDc9h41s4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='216' name='Parameters' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAADYCAYAAADibTSRAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3de1xUZf7A8c9hZrg7CF4CE1EUL6AmXlDRwGuabpaVZVvZRdusdsvaLtZa
      bVmutaWtrVmb7pbdTP3lZdPVtEjD+wUV0RRFERJUYGTkMgMznN8fM9yHizoION/36+XLYc5z
      zjwzwPf7nO/znIOiqqqKEEIIl+PW2B0QQgjROCQBCCGEi5IEIIQQLkoSgBBCuChJAEII4aIk
      AQghhIuSBCCEEC5KEoAQQrgoSQBCCOGiJAEIIYSLkgQghBAuShKAEEK4KEkAQgjhoiQBCCGE
      i5IEIIQQLkoSgBBCuChJAEII4aIkAQghhIuSBCCEEC5KEoAQQrgoSQBCCOGiJAEIIYSLkgQg
      hBAuShKAEEK4KEkAQgjhoiQBCCGEi9I2dgeEEKIpyDq+nbhf9nDyrBF0Olp2HsnDkwbg2dgd
      a0CSAIS4ziQtmc5Di/YCED5tMUun92nkHjV1JjbPvY+ZK9MqPav6t+Te6zwBSAlIiOvYpcbu
      QDOQteWDSsFfVf0J9lehsy+6RuzXtSBnAEJcbzzKHw7s0qrx+tEsmIhfswJQAIiZsYg5D1zf
      o/6KJAEIcZ2JeOBj9j7Q2L1oLixkZ9keqWp/pk52neAPkgCEaDbystJITc8kt6AYdDr8/AJp
      1yEIf8+qv8YW8gyXKEZHC3/fGn/JTYYMTqamk1tQjE7nR2CnEIJb+4LJgAF//CtGQosJw6VC
      AHRe/vh6AiYDx389wYmzubTr3oc+oa0dv5Alj7SUVDKzcikGdN5+BN7QjqAg/wYIQCZSDuzn
      UHIK2UYzHvpWhIb3IyoiuMpr2T4jrS6P4tKnOvRBbzKRV1xoe07nhb/vVaSDip9ZC398tZCX
      lcLR42lcuJgPPm2IHDiAoNKXsOSRcuwoaRkXyC+CNl2iGNC1hs/U3v54wj4OHkvDaAZ9q0DC
      +/UjIti/+qeSZ6DQ9qbw9/cFwJB2HEVVVfXK36EQosHlHefj559i8V6Dw83BMU+w4N2pBNsj
      XF7SEoY9tAiAaYs3Mb1PlYCQd5yPX3uJxVvTqMo/PBySksjhDlbsepXQ0mMe+Jhh0xYDoMbM
      YHbfU7z2wZpK+4bfPZd/zRxVaQSdsvljHn/pUwyKUu21VDWYJz/8iKnRQfX4EOpmStnMjEkv
      sdfRa/nH8OHSOUSXRtu8A0yMnUqag7bl+0xj86bpVA+n9VPpMwu+nSk9kvnihyOVX0MNZ/Y3
      b9Pm4Fe8MndFtc8p+O65fFPlMwUwJK3g0SlzHfY/+PY3+eLVcfiW94QlE2NZlGZr+8TcNzm7
      8FXWpCkyCSxE02ZgyYP31Rj8Ac5s2UKmqZ6HyzvAc7H3OQz+AIYjR+xBKJnsisfUlU+HKls/
      qBb8AY6snMnKpLzyYx34mHtmLnYY/AEUJY3vD52rZ8drZ0nbzG01BH8AxbCVP/3uD2zPKn2m
      2GE7p6r4maWtqRb8ARTlCK/9fiJPvLPS4eeUtnImK49X/uaajq9g9EPvlAV/VfUnOLh8HJ+2
      5jUenLul0j4eLcofL5r5GmvsyUBKQEI0YaaUzWUjN9X/Fmb/fRox3dtBoYHUE0ls/mYhS7dk
      1PNoFjbPeYGtFQLN7TPmclvP1uj03hSk7ObDl+ZzxL69thUwqhrMHY89xNgR/djw0h1lAeWH
      nSd4IKIPYGLL0k8pm1yd9iZ/vDuGdr5guJBK0pbNLJy/lDyzMwJxHsv+8lJZAFX9b2HewucY
      EtqSC8d+5o0ptsSgKEf405zV7Jp3B1rPLrz+4YcU6wrYMOcl1qQptjOSd16gt7c9PegCaVHr
      614eNTiGZx+7m+hewWTv/Ion3llZvk31Z8yUh5g4KppAXSafvfSnss90/8EzPNC1q72lgc9e
      mkvp5xp+95vMe34crbWQdeBL7ps6H4OicGbFW2yeFsuoGipI/v1v56n7bpMEIERTZjEayx4H
      jLyHcX1CbV94BhExIIiIAaOYkpGBrh6lakvGz7yzMQfsgXLG55t4IKJCgSO0A7dEzOdI9YFq
      Jf63v8mqCiWGXm89yRp7yal8YF1xctWf+6aNKysnBQVHEPRABKMmTyHt4tUvtLSkbOaDI6Wj
      4RiW/ncOEfbPIyhiFB9v/pgpo6bbEtuWhfyQ9jvGBfvTJzoaMHGsLMq3oN/QaPo0wCxw8IML
      WPVMdNnXocEzeOK/K1h0xJZ45m1cRWxZsA7l2dcfY429fJSVXVD+XtO2sLh0QBA+g49mln8f
      Wvd5gG/mpTP2zytRFAMr444zalJXKlLVYGZ/8wXjutr2khKQEE2YVle+pjNnxTyWbD5AVp6l
      Uhv/oCB86zGUM+Wklo2S/W+fWzn4A2CpvpMDQe1CKtSXa96rtOeKYuDD15ZwIC2rclutv23S
      +SpdSEksexw7c3pZ8C/jP4CXnhxQ1pczlWpbVXpfv4/gsrXw8K7yjKXCat0W+FXts85xYsxI
      3F32+LHn7qDqp9d6yG2E26d19+w4QvXKYAvadSjfS84AhGjCPCNGcrc6n5X2EsaimdNYBPgH
      92fkmJGMHT+KPg5WfThiyi2vz981tt+Vd6q4PmUbX0ZOvYMP/mybKzjywyKm/bAIVfVnQOxI
      Ro4by6hhffB3QgQ6dyK57HFEeDuHbToPGgr2q6OPJ5+FPl0dtmvqsjPSyx5/+vGXdBgbSH7Z
      90OHzvwrZQXBU9kUQvVlrRWSnCQAIZq0IJ7fuASee4GVR8ongg1pe1m5eC8rF7/jYNWHY+dS
      jpY91nk3/DWuQbEvs/glHdMq1LoVxcDerSvZu3Ulc9VgXv3mC+7oenVnATpd+eha7+U4pFkw
      lz329Gm+YU9H+XtV9i7mtb0OGtWysqmq5vtJCOEitK37MHPpJv6YcZx9CQc5EP8j32/cU1bO
      SVvzGnP69WLOuOBaj9M5cgBgixhJyech4urLL3X0nD6TZrJ34h85fngfB/cd4Mfvv2dvmi2R
      KUoas++bQ+9dc8rmB65EcXF5jTzbWJ8aTvO9wUPF96qq/Zk06cYaTsgKKdSH1PlOJQEI0Uz4
      BnUlNqgrseMm8cycPA6smM+0d2wllj37jmEZV/Vip8osFQLFltmLOf67OXStsoOZBqD1pWuf
      WLr2iWXS1GfIy9jD/Cen21e57OHXCxZCg648FLXv3Q+wzVxv33eC6X2q3/zu6Obvyx53aHel
      K/sb3w1dwih9r2Nm/4WZdST9usgksBBNmCXrACtW7yGv2hZf+tw2suyrnORUBxN+VfboOZxb
      7BOEivID9936CpuT0jAYskg5sJl/PPcgi47Uv3xQR89JWr+C7WkOeh40gLF9sffDwJlz9b2I
      wbGWnSLwt7+vpI/mUXVVrCVtPa8sPQPYVsH0aN/QZz4Np0238rmbja/OZ3uW4zMew/EtrN6S
      UufxJAEI0YSZ0nfyzltPENtvCv/4cj0HUtLIMhjISNnDkr9/XNauQ3S/OucA0IbyxOwxZV8q
      hh+Y+dBERo8eyz3TZvJFDReHXWHP2fnpXJ6eOIyJz/2D9dsPkJaRhSErgwObl/DhalsrVQ2n
      X5erC8jaoGE8a39binKE5343kS+3JJFlyCJp8xJuvePVsnJZwKQXKiy3bH60wTHMCC9N4lv5
      05hbmfvlZo6nZZCWcpztm1cwe/poRv/+z3x+1FjH0aQEJESzoChH+OKD1/jig+rbVNWfp8Z3
      r9dxgsfN4fMiPQ+9tbL6tpgY8rZsKQuWlUrLV3C9VrF98J+29Qte2/pF5Y2lAfmOKfS66gG5
      lnGvLGHzxqlsVRQUJY0P/vwQZR9V2RWzt7BwRnSNR3G6Oj6ziuW2ak1r3NeXB+Z9SPyYP9kv
      bjOw8oOZrHTwc1HxIruaXkvOAIRownx73suiWdPo7+/4ll1qcAzvrFjFqGDHVy85mgSMuGMm
      OzetYsHcN5k1axZvzn2fz1dtYtW8d3lqQGmr1nhXGB563hBCsL3M0j5QX+l4Wl351+XbfLn3
      kw+Zdkv/Gt9bzLS5rHq1+n1urohvH+ZtWcqD/R3X94NjnmDFtjl0rfXFqq7Vvzq1fWagRV96
      JhIQRqsq/fJsFVRW1qr2TWwdzcfbVvPS3Y4/W9U/nLtnzOXfUyNLj0aX8A72x5VfS24GJ0Qz
      kWfI4PyFnLK7OupvaOeUC6nKmA4wfchU9ioKavATbFk1te6yUn1Y8sjIOE+OsfRuonratQum
      /EabFg6sWMh/fzWiq+ECqOqKMRa3YdoL0wmtEjzzstI4cSqNggLA24/gTp0Jbn0laca5/WoI
      FpOBM2cM6Nv5U2zIQ+frT2v/+n/XJAEI4TLyWPHK82QPncrtMb0IqnCrY4vhOItfLr/jqBoz
      i23z7rhG98Y38I9+o/jiMtavg6309eGWTUQ32JxuU+2X80gCEMJl5LFkSmzZSh//4HA6d2qN
      d8Eptu6tPAH80vJ4Jl2LIaxdVsoBjmcW1N2wEm96RDnnauKaNNV+OUsz6KIQwlkq/LVIDGlH
      qBL3UVV/Hpv3yTUN/gCtQ/vQOvSavmS9NNV+OYucAQjhSix5pB07xL6dh0g8eRyDCQoKCsA7
      gD6Dx3D7rbEENYPShXAOSQBCCOGiZBmoEEK4KEkAQgjhoiQBCCGEi5IEIIQQLkoSgBBCuChJ
      AEII4aIkAQghhIuSBCCEEC5KEoAQQrgoSQBCCOGiJAEIIYSLkgQghBAuShKAEEK4KEkAQgjh
      oiQBCCGEi5IEIIQQdbDkHGXD2rVsP3qhsbviVPInIYUQzVbG/g1sPn4RXS1timnJqIljCfKo
      pVEdis4dZNW6OLyGdiS6R5srP1ATIwlACNFsXTy+g/i4zDrbRUwYS9DVvJDWHQA/XW2ppvmR
      BCCEaLa07rZhfeTExxnTrQUWS/U2FouWG92vcceaCUkAQohmr23n7nTq5N3Y3Wh2JAEIIZq9
      IkdD/zpYzGYKzGYsFgtaT0+8vb2vMiBaMBqNWCyg1Xri4e2NRx0HtBTkkHEuFwug9fQjKCjg
      mgZlSQBCCNdhzmF33A9s3rGT1MzCKhv9GHrPI9w3ssdlBkYzyVtW8eXXcVSdjQgMi2LM7ROJ
      DguovMFygQ2LP2VVQmrVPRj/1B+Z0PvaTDTLMlAhhMsoSPmBJavi7MHfi5CwCKKiIgn0Asgl
      fvkHzF526LKOmfzdHN4rDf5+gURERhIWEghAZvJuPl/4A8ZKe1zgi1dm2YO/F5HDxzB+/Bgi
      Q7yATNYtnMWyQzlX/2brQc4AhBCuQ+tNYMhQbr9vLL07takQAC0c3bCYD1YlkBn3fxyd0Jse
      9ZlSsKTx40bbuD/qoZlMje5Uvs1s5OjONfznp8oz0MnffUp8LkAYT/1tBr0D7L2YMIH9y97l
      k7hU4hYuJ/aT6Ve3cqke5AxACNH8FdevmXfYBN545UH6Vgr+AFp6jJ3C+BCATA6mGh3uX01R
      HhkAfsO5r2LwB/DQ0yP2Qd594070pc9Z0vjfRlvZZ+LMP5UHf3sf+k6eznA/gAQ2X4OzADkD
      EEI0e3ELXyCupo2BY5j/xp3UPaD3pkfPENalVq3L10IDHgC5cXyzZSBTYzvV2tx8KoEke59i
      Ojm6Mi2A2PGRxH2dQOKRc9A7wEEb55EEIIRwLeYL7I77hZ37D5J+PpfcwqqTwZfBowdjo/z4
      ZHcuu7+ey+5VIUTF9KVXl2506RJMgHflEGvFvlqphR+WAiM5piqrl7Se0KIlAF5X3qt6kwQg
      hGj2hs/4O5N76OtsZ07bwqtvfU1u6RNeXgQGhuBhH4xfPJ9K7mXmg75T/8rjbZaydF0ChYWp
      7N6Yyu6Ntm2BEWN4+OE76VS1a8nLeeHZ5bUet7CeZa2rIQlACOEaLGl8Yg/+XmHDeeqhCYS1
      qVwYOrV2DnPXXUYJCABv+k6YTt8JZi6kneFUylH279lHQnImmUkbmftCCs8veJ6wShWfEMZP
      7AlFNXTVUoBfx5aX2Y/LJwlACOEajBmkA3hF8ZfnJ+Nopf0VXE9WgQdtgsNoExxGVOwELDlH
      WTz3AxJyk9l5zEhYbz2lFSDCBjJh7MireTGnkFVAQgiXUHAuxTb6D+3hMPgDXMo3X95BLWbM
      NSQNbUAPxg8NAeDEid8A8A7pQQhA8nI2pNX2WmZyjJfZlysgCUAI4RK8b+yKH1CYtJHdFypH
      7YILR1n23ot8El/3nUUr7Ze8iqefepEN+09RLVxbMti2z1ZO6tLlRnsnejA2yja9u+qt99ly
      qupyUwsXkrezYMbTvLnm2GX15UpICUgI4Rr0XRjkBxtzM1ky63n2Dx9BWEsLyft3kpCaW/f+
      QLX5Ya07kMuqT+ayCj8ihw6iYzs/ii4kEx+XYJ9sDmNQl/JZ4L4PPEXE7vdIIpWv577AurBI
      BoW2Jd+QzonEJErvUBHo0/DrgCQBCCGaLa237Srblp71CWV67pz1PIb332N3ZiEJcetIKN3k
      FcI9jz9Ch9QVvLcqiap3j9bYQ2VoUOWJWe+wCcx6yo9V//dfkjJzSYjfWH5MgMAoZjzzEGEV
      55o9wnh64Vv8+M3nLI9PJjc5gY3J5Zu9AsMYO/4uhkfVfk2BMyiqqqoN/ipCCNFkWMhJO8U5
      QyHovPBtfQPBbepeQlqXAuMFzp3LAt+WkJeHZ6sbCQqo/fIzi9nIhfPZWNDa7iDqpyfA+yr+
      dNllkgQghBAuSiaBhRDCRUkCEEIIFyUJQAghXJQkACGEcFGSAIQQwkVJAhBCCBclCUAIIVyU
      JAAhhHBRV30riL179zqjH0IIIa4xuRJYCCFclJSAhBDCRUkCEEIIFyUJQAghXJQkACGEcFGS
      AIQQwkVJAhBCCBclCUAIIVyUJAAhhHBRkgCEEMJFSQIQQggXJQlACCFclCQAIYRwUZIAhBDC
      RUkCEKImFgslFgtyu1xxvbrqvwcgxPUln/wN35H735+xZBeWPavpMgjv8SNoMaAnWqf/1hRi
      +XUDRYnrKTl3HLU4G2iFoo9E0+v3eEZFodRxBDVrN6ZNH1DS8hG8bx1dZ/urY+Jkyk/8cPxn
      knLSybFAgG8YA7vczp29++JTn0MUn+CLH7/FoPXEZAngrpGP0FnXoJ0WDsjfAxCilOkk5598
      FVNB+VOKtxdqQXki8Jq5iDZ9/Jz2kiW/radw1QuUFNcSsnX34/3Ey2g01TepxsOYf5xD8elD
      9mdC8Zy+Fp2X07pYSe65Tbz34z85aamhv9oR/O3epwlx0NeKdmz+PR+eLf2gO/DivQvo4+HU
      rop6kDMAIQDIJuvPpcH/RvQz/4i+TwhugGrKxfzrPi5++hWKE39j1N++JX/5bEABeqOLnYGu
      azhuvr5QdAHL4RWYtyxELf6KwrWD8Z04rHzfvBSK4v5G0YkdVY56g/M6WIXp3Bqe2Pgfe387
      MKHfw8R06kZbnYlfj69l/r7VFFp+4s24fiwZNaTG4+SnfWUP/t54kU8hEogai3zuQgDmH5dQ
      kA3QmVafzManwiBf8fTDs88IAheOcPKLZgPg1n0+XreOrjwh594GXd8n0bb0JW/Nu6inf8Zq
      HWY/C8jD/OVtFBfaRuFK4LN4DOmA+f9moJLv3D5WYC3KAaBzx2d5PiaW8o/Ih54Rj7BA78tj
      cV9ReHYnZ61DaOfoLMB6moVxywGFmwe/TPDxWXyd3WBdFnWQBCAE2Ri/OgCA1/MzKgX/BqUP
      RzdiLZ43hdbYRGnfFzdUSjhOSRFo7KUd1QLo78dz/HR0gf5QlIC5gbur8enK3VEfcGf3jg63
      +wT2ojMqJ0nlvAWHCeDAtnkcQAHfR3gsLIy1iQ3bZ1E7SQDC5ZWc3EJhAcAg9P1bXbPXVVoP
      w7N1HY2KsuyrkHxQygKqL54Px6P4+lc+HjToiiXPgCHcGVBLg+JsDLaWeDlYX2g6t4Z3T58B
      WvGn0bejJZ+iBumpqC9ZBipcXvFv6QBoYqJpWvOQFzB99xQqCgSOQ+NevqVq8G982Xy36V1y
      UKDVMAcres7xnx//DUBEr5cZ3ML2rHvVZuKakjMA4fKsp9MA0HVrg/X8MYw//YTpcAolBtvq
      HyWoK14xY/CL6XbtRkyFxyj8+k4sRgVohfvo2xp4aedVMJ9gybo/82OeAngzbfAt1QLLsZ3v
      84tFAc/b+WNkl8bopXCg0RJAxv4NbD5+kdqW/hbTklETxxLkUf99HO2HJYMNKzdzER0UQ+iw
      iUQF1z3Wu7B/AxuSLqLTFePepj8TRvao/QMrSGbBXz8l28uLQoJ44pXpdKrtZUr75R3BxAl9
      6x59VnwftSqmZegoxkYF1XVEASjungCYPn2Z3xw1yN7JpcM7ufTtzbR9/wk8PRu2P9Zfl1L4
      v3dsI39aobtrNR6tm+5Ybeq3f6YQW/D//ahFjAio3FdLzibePX4M8GHaqAe5VlMsom6N9lN1
      8fgO4uMy62wXMWEspWGsvvtU3Y+ii+yIi6d0z535oURNj6rjCAX8smYV8WUvl0iXwe/S27vm
      PXIObyUpNxdyc4FM4o8Z6dRbX/MOpf3y0jGuPgmgyvuoVf5NkgCuRKsIfO4cg2+vTmj1Pqj5
      5yjY9C0XVx+A7F84/14n2s8a2zBnAtYLmNc+Q9HpQ4ACurvxnDILnb6JBn9rNhvi3rAFf+3N
      vHjbM/RpUbWv2Xyz+Z8UotC562vVkoNoXI323dC628Jd5MTHGdOtBRZL9TYWi5Yb3S9vH0f7
      oaFScC1M2MopSxSdanv3OYfZmgl4+eFHLrmFXnWMu80kbN0NQGCIH5mpuez7+TD39Y6u+UMu
      7Zefe/2+EWXtI3n8sTG0oMYPAG3LkPocUVTg9cwHtBnctvKTniHoJ7+IV/cvyJj7Pzi8FGPq
      MFqGOPc0QM3aRMEXMyixF3rcus+/Blf0XjlTzhbe/n4eJ1Ho3PFZZsbEOrwC+GTCAv5nspV+
      ZgzqXmVr6ay2JzqZjWwUjZ6O23buTqdOtQyrnbSPGSBsKMPdE4lLSib+SO2j87TdWykEAvuN
      4aZzy9mYXMcLFBxjazJABA8/NozPZi0kM+lnTpmjCXP2zKJXWyLCOjWxCcvmS8UEgCW3sMY2
      uj6T8Iv8mdyEQiyXzIDzEoCauZ78b16wl3x6437XP/Do0MZpx3c204VNPPW/f9rLPh2YHRPr
      uOGlbcxPPAAocGMoF88mklZcvtnLzUi6BeA4Px3fD3oo1NxAz3Y3Nn5gchGN/jkX1TSMd/I+
      HgBFbRg4oi9xSXF1jM6N7PnJFvFjhvWm+IvldR7/wuE9ZAJeEf3p1CacwSGwKjWVncdyCOtd
      29q5K2N1+hFdl6ZNMPAbloNnUMeG1DDq9kTjWXOCuGKFCRSUBn/d/XhNfRltA93GwSnMibxd
      Gvy1I5h919M1Ns2/eNi2Kgjg5HxePemolW37L/ve5BcAbmXRlMdlnuAaafQEcE2Zi7ih90BC
      iCO1ttH5hcNszQWIIjJYT3ydV9iYOWQv//Qb1hPQctOQSFalJhD/cyL39Y51sQ+6eXHvEgrs
      RE34gULTzXjXMLh3878RHE8TXyEL5u8fsJd9xuP1h5fRNul1kRZ+ipvFSRRgALMnPV3rDdw8
      WkYzpVcgaBw3ctfks+PglyRZfBgZ/gCd3Isp8oqo383khFO4VlwqtKDRdmJYhBefJ6Wy9WAO
      YVHVR+en9m23lX+GRxMANVXay5WVf8IY1M1WVgqKjMLv6wRyk7Zxyhzr3DJQYT36JOpNCbkZ
      71ZfU5B9EsPqw3hP7lm9keUkuettwd/Ny0nfTGM8xekArXB/8O0mHvyBS7v47jyAN9N+91Kd
      d+/UtujF2MhetbQwcfHYlyTltWZo5Di61XEDOeF8zXPq5Urvx+tlK530GT0IgN1bHV0+b2RX
      afknNgyw1pklLxzYbi//RJcv+9R3Z2ggQCo7k3KurL+1cK3M3dD88HtkJADW1XM4/2PVWkU2
      hvfnUAzQ6lb0nZ1T/y9J22Ev/dyL7qqXeVaIxg0USLMz99lKOtrR9HPKap7yQmaxjGgaRaPH
      kbgPXiCupo2BY5j/xp1Une6Ne+/ZmvcBYCh//+RBapri9e4xmcej9vPJ7uX8Z3s406PLl0ue
      WvtP4nIhZOJMRgZpoa6L1QsO8c/PE4AQnnq84pyCNxOemUr8y0uI/+RjBi14xSlnAWaA3I08
      +/jGWtsNfervPFjbElRRia7/VDose4j8/35E9qevcubTKg28I2j5zgz0Ic4rUJScTwFAYSH5
      8z+qo3VvPKd/jc4L1N+Wkrf8XQdtFND9hnlhBKYKMxma2LV49635fkP1lZVtu2Lai9U8sXRN
      LS0v9/bODXxhhahRoyeAKzH08be4r7ceq8OZUCtW3KsljaoiRgyF3etI+HkPBdET7O1ziI9P
      BbwYFtWpXn0pH/0Pqx7gA3oyNBDWZdrOAsL6Xv1ksG0Z6HDemn03+hqmgq1WK+7ul7dKSgBo
      8bntaXxufQjzyTSKL5kALdp2wXi0a+X0JZna4Z/SYvjl76fcOIUWz05xcm/q1m3Qu3w9yJlH
      9OHOO9dwpzMPKS5LoyeA4TP+zuQelzdS1Xn5oNV6XNVfZvLoNIAor3XsTo3ncM4EogLAkpFA
      fC4QOII+9YrVZvb9nABAYdLnvPjiaorKThiKcPeDXPtVW/HxidzX10mTwV7u+Hho8Wj8b9/1
      SeuHRzc/WWYrrnvNcw7AKVOgQUTHBAK5bE2w3Qvm1I5dAESMGFDnGQQABcfYkVr+ZW5uLoWF
      pf8Kyc2ssGwwaRunGvp+vUIIcRlceggZNjgGNi4neWMC5pF+7NyaCgQyLLJ+t1AoLf8Qdg/z
      nx+Ju4PrE7RaI9+9/jIbM1PZ6qQykBBCOEMzPQNwDm1QJMP9gNx9xO/eTmIhEBZDt3pVpMrL
      P1ExkXgDWq222j8IYEBMGAC7f0qU5ZtCiCajWSaAYqetGQtg4IgwIJPlS1aRC0SNiKxf7ddY
      Wv4JIbpn7aP64MhovACSt5HsqAx0uev6c/MlkQghrlqzLAHFL3yZ+FpbBPLU/G1McaEAABTp
      SURBVDfK79xptS+fdBBoO0XF4LUqGVu1PoSYiOrB3FGwzUgoLf8MJKyuCYOAnsQEwsbMVLYf
      vECPqPL7vJQu63yhhmWdXhG/552nY21JqXTRT2E8LzxexycwfAZvTO5RR8eEEK6s0c4AtN62
      yx5betY/B5XuU+etUrw60KbS3UC1tABo72BlR0BPRthvnOkXOcrhWn2tg+fSTtjWcEfFRNYj
      i+oZEBMBwJmUrIpHrvNsozA9u/xiNY223n9BKahDy3q2FEK4KkVV1Yb8M6JCCCGaqGY5ByCE
      EOLqSQIQQggXJQlACCFclCQAIYRwUZIAhBDCRUkCEEIIFyUJQAghXJQkACGEcFGSAIQQwkVJ
      AhBCCBclCUAIIVyUJAAhhHBRkgCEEMJFSQIQQggXJQlACCFclCQAIYRwUZIAhBDCRUkCEEII
      FyUJQAghXJQkACGEcFGSAIQQwkVpr/YABQUFzuiHEEKIa0zOAIQQwkVJAhBCCBclCUAIIVyU
      JAAhhHBRkgCEEMJFSQIQQggXJQlACCFclCQAIYRwUZIAhBDCRUkCEEIIFyUJQAghXJQkACGE
      cFGSAIQQwkVJAhBCCBclCUAIIWphLTFhLbE0djcaxFX/PQAhrhumCxT+8D9MuxMpOWtABRQv
      fzQ9++Ex9ha8OgU42KmAwrVrseTXdmBv3MeMxyNA48TO5qPu+ArVXFubFih9J6HoK/yaW/NR
      U35BPb4NNXs3FOYACmg7oLSJhZ4TcQttX/MhjcmUHFoDZ3aiXkoFFJT201AG3I/S1sc5b62i
      4nNsP7KOn37bT2ZBNiYUPDUBdGw1iJgetxLVplU9j5PCsm3fYXBzp6gkgAlDHqCTrubmBdkH
      WZu0kvjzJzCh2J7UtKdf+1hiw4YS3tLv6t9bE6CoqqpezQHkD8KI60HJqc0YZi+jtl8GzbA/
      0HJKVGk4sDEdwfDkPKx1vUD007Se1vuq+1mm+CDWf0+Dyr2pruNHaMb0tz3O3oB15at179P2
      Jdwm3lWl1UVKfpyFemJ3jbspQ7/FLaJT3X2vp4ILG3l9y2cYaulvUPDT/GXgIDzrONburdP4
      1/nSWNWep297l94ejtueOraAtxN3lj+h8cbTml8hEYxj3sQH0Nf7nTRdcgYgRO4RckuDv1cv
      fGbcg0dwWxQdqLm/Ufj9Ugp/Po31539hDAnGLzaobFfVcIGSsv3G4VZc7OAFLODf0bl9NmbY
      /teOwW3MfWB19LrF4Nul/Mu8M9hG+1EokfejhPZAaeFr25afRsn+RajHfobz76Du6IEyONy+
      o4mS5aNRDfYAGPQkbgNGobQOBB2UrBqPet6AGj8d9cZ1KC2dEFYKk5hXGvw1fXl08O/p06ot
      HhowF/7G9sOLWZZ2koy0BfynZQee6NauxkMVnP3WHvy98SQfEzUHvpzUL8uCf1DQQzzWN5YO
      Xp6ABaPxDAknvmNFZi2nDs2MJADh8qyph2wjeK9e+L3/DLoKw0kloAM+U2ah0b1K3qYMiv+7
      HWvsXZQWc9S8LFupKPJmvMLCrl2nCzMBBdqPQ2kfXmdzAHx7oQz9DLcIB+31nXAb9i6qx4uU
      HPoZNTkedXC4fcxrBRNAFG4T3kIJallpV7eJ31GyfBiqwYB6JhOlZS0lpHoyZiVw2h78//K7
      5yuVa7x9Qhg1cDZt3V5kQWo6+479grHbvY5H5CWpfLp9NaAwqO+ztD/1FisNNb1qKl/sWQco
      dAx5iVkDbqqwTYteH0ps3+eJvep313TIJLBweZakJAA0w8dVCv4Ved4+yRb0PSsXUIqPHgXA
      rWWLBu1jVWraXtsDn8uoRbca7Dj4V6BETgRUwL3C+9SghM3E7aF/Vgv+9k6gBA+09Ssns/79
      qUV65iEAgkJuq7FW37v3/QShgrbmkeyhPQtJRAHv+3kktDNFtcyZ5KT+aGurGcWTlYL/9UsS
      gHB5mg4hAJRcvFRjGzXrrO0swVRcaZ5AvWiLKNrwGxqug44U2GadleCaSx9XwpZYlCoR1RNl
      8F0otRXajbbAr3h4O6UfbfxDATAV1vw9sealk4EClmIcrdExXVjHgrR0IIA/xI5HgxVHhTJ7
      a3b/ugmAXuFjcTTdfz2SBCBcnia0IwDq9o/IO5RTvYE1g0sLVgKg9O5K+VqeAizHMwB/tIHX
      ckowH/XcYaADir+jEfkVythAyU9LAVDC6l/oUFM/o+T0GdsXnUOd0pWA1rbJZEPGPP4vLbt6
      g5KzfLXtSwD8b+juoPxzji/jbdu7d3+OKPsCpZqr9zmcKgAIYHAH5ybVpkzmAITLU4JG4Xdf
      ErnfJGL64EWKoyfgFd0Lja8Fy7F9mL7ZbBv9B8Tgd3/f8h2tWVgMAAYKvt+AGgSqRQtaHW6t
      2qDrGIo2oK71KVfAeh4KAc5Qsuf/UPwBqw407igtguCGbij6er5ucT5q1lHUQ5+hnt6NbV7h
      TdwG1H81T8mGj2wP2s/Fra1z3q+m5RheC0/kzSP7+d+uP3H0zCTGdbqJ1h7FZJ7bw3+PrLON
      /t1H8dyA/tX2T97/T3ZaFXAfxx961iMpmQ2ctQKangS65ZKcspMtZ/aRajxrm/7Q+hPaZhCj
      uo0krL6fbTPQaMtAMw9u4ucTRltG9u7C7269iRpWZZWzZrJp9c8Y0UGxjp6jxtCtdS17FZzk
      43eWYvD0xMQNPPrco4TU9iKlx/fucfn9qVUx+o7DGN0vsK4jikZkPbQMwwebHW8MvZuAWWMr
      nzIXHCL7jwtqXTqq9IjB9+F78GjjxKBh2ov18yeodTln2wdxG/4YSksHr5v+DdZ182zDP0vF
      Y0SgjHgNt7B6Bv/idEr+NxU1wwBBL+E2oerS0atnTPuS53atd7yxxf0sGDOeqkUn68U4ntn8
      L0z48OCoj4ktW5WUz9r101hbEMxzt71LeMVf8OIk3lrzlm3iuQ6Dev2Nad1CruTtNDmNdgaQ
      e2Ivu+LP27/aQ8dBN9HPv/Z9Ck7vZn38rrKvD9GZNyZH1NjecHQbx4xGMBqB8+w4YSQkopZT
      dXMue+N3cd5Dx+j6JIDS9nW1A8jvJQmgCVPPbOfS0tLg74mmdwQaX7D+ug9rDpDyPca17fCb
      0Ls8RHhHoJ/xByym8uMoWig5l0bRtjgsZ02oR7dy6aVESt6Zi1cbJ10I5tkHt9HvQ1GF5zSg
      XkyB5G9QLxng/BeUfLsFt3uXVV+W6WWfr7BUDXaX4Nwx1OBOtdf7ATV1LSUbZgMKSt9PcWuA
      SVNT9i/8K8G2Kge86di6Nx10cCZ7B6eLFLi0ik8PtuePN91UoSyXzYqt/8KEQsfQFyoE/7pV
      nB/uHjSJEZ370tGvNd5uFs5nH2LV3o9ILFLYmfgyHVv/m1Gtmv+ZQKMlAK3OvcJXZrbvTaXf
      6Nqz6tFt+wDQt9VjPG/EU1db980c3J4AQNv2es6nGznwy1EmRQykxl9DDbgD+Onq98GUttf3
      4uEpI/F1OBUFWCxo/YLrc0TRCNQLu8n5679RAc3oR9HfE42mwg+J5chmLr23DMvqBVzkOfwn
      lK6k0aDrHeXg/C8K71vvwnpmN8a//gsrBvI/2YTnrLFOGiFrUUJjqj2rEAMDHkY9vxV11Z9R
      OUPJD2vQ3HNX5YatRqCZtgNKLKiFF8FwCvXEetQTG1CTXkNNWozb3V+iOAxwJtQfn6fkhL1c
      RFSDBH+rcSevxn2EAYWOIU/wdL+b0Zedfj3NhbMbWbD9MxKT3+Fv/IVZN9kGgqcOf8LmIlvp
      58m+3aoctfSb6oHOweynB4D7KP72u0dpU2V7h3Y388yEcJat/yObCxSWHdjC0JFj6rwAralr
      5ElgDwbeMhA9kBK/F2NtTa2pbE8wAu0ZPqJf3YcuOMGOFIBu/P6he2gLmI/Fc7rWS+evkGdr
      uncOoXPnzo7/detGSKBzVkcIZ7Ni+upftrX80X/A/77KwR9AGz6Kln+djAJYV/8HUz2rnpoO
      UbT862TbFymHKTLV3t5ZlLYxuE181faFYReqo6UvGi3oPFH0gSghg3EbORvNo8tRWqjAGUpW
      vo1a7fJmEyXrbrcHf6DjLNwe/2cDvAMLu/b/AwMK/kFPM2tAxeBv06bdGP46/GE8UTmdvIhD
      ZiB/Jx/9mmhrEBRCbmYSh9LK/yWfPcBvFoCTbEk5SPLZgxzKtK/uKrGfARTlkFdjv1oxaaDt
      Ncm/WOkErFnK2d3Yk8Bm/EIH0Fu/i3jjHhIz72BIoOPxecGJvaQAhPajZ2Axa+o4ctbRfZwH
      PLpFEtK6O/3bw/r0dPacMNA5oo5a0xWo81YAookyY82yPfIcX/PAQukQjXvAMsw5Biy/FUBY
      /RK6cmNnW6mdXNQSJ3S3vlr1QEFF5YLth7M+F6/qOuF273JKPrsH1bIb9aIFpVV5iFB3PI+a
      bruKShn8FW69G+rCNzMZ9iQ7JqL6BG8pTauhDHX/jM1FOSQb8ulScqT8thGpi3g71dFetu07
      E9/Bdr3vKObd/Sh6nT/tgAx+5UyehU56x6FR4+1nuyVELdceNBclmb82/nso9gxi4ND2xK9P
      Z+fu0wyZ0Nlhu6Pb9gDQK7ov/myr46hmDtvLP31u7gFo6DWoF+tXJrLrlyNMihhScxlIuCw3
      j9p+Kiyo9hWiivYyTpyLLbVOEjeYkppXvNdK0wJbJdMAuXnQyr7MNHstJYdsI39lQEMGf5vS
      fOVda5nXQpF9GO6j0eDRYiCTu98Abo730WkK2HNkOb9afYgJm0SIzkKxZw98ANwCCPOHfYYC
      Np84SWy18pGdmxdBqGRYqKng22wogf2bQAKwaGjffyge65eRvn0PhgmdqTY+t6ayPdEMtGVI
      Tz2k1/HDXVb+CWVAF9ukb2CvfuhXJmI8tpPT5iF0rnOG9zKYmv8Pg0uzl2ZMPx3B6+4arpTN
      OVF+lmfPE9ZTuykq7IJXeM2XDVl22ZeQeoWhc1IVUM3YCkXhKCGta25zdDUqCmj7UlaoNuWD
      Z1137LxkXx0E+JZXuNW9tusDaD8Xt74Nf8uLYvsv1E/HkojuW8NCj/xkku0PtW6g8YlgVM+a
      F4WAidyTy/m1IIDBvcYQVimPexLVdTzLdq0nI+VLDkXMdnizuFPJ9uWnHr64V9/crCgB4Y09
      BwBYrODfg2g9YN7F3vTqRXrjr6Xlnxi6eFSerXckK3GXvfwTRcfSb6I+jEFtAdLZ82uNNwO5
      Yo2eScUV8sZzoq30Y10/j9xNR6qN2Esy9nPx1Y/s1wKMwrODLTBafllB/nsvYli0FvOFqhMD
      Voq3LeXi57aFC5oxg5131nlkASUbxmFd9w3qxar3obagJn1IyY7VACjhI+1Fj3xKlg/D+vUc
      1NRTjmuW+cmULJ+OalGAMShla/ozUdNt9RSlZ18HOzqbD9HhgwE4nfI2i44kUXX6pODiXv7x
      w/v2awHG0bdeK3LK37Sje/bpg28lRqMCJ1mw8WNOVQk0OWfX8b59jmFU+NBmPwEMTSJuWQA9
      fYd3I27NMfbuOs3o9hVPv6wc/cVW/hk4Irwev0RmDsfbvkl9Ble8atObyJhu/LDyGLt2HGHS
      TU4sAxnj+MvrSTi8BsZkwuQZwpSnHqXz9XD/2OuQdshDeO1JovCQieJv5pG9OghtZBgaH7Ce
      TMSSUjpg8MfnpUllPzeazt3g551Y96zl0p615AV0RNM9EIV8ShISsRbaG7a7Ff0EJ46aAwfB
      iTOQPp+Sb+eDVxTKDR2BXNT0DeXLO1s8WeGOnnaXVlOyYTXgD/43obTqAhoznN+CajhT1kwZ
      ++fyFUumdFT7iFzdcEut813K4G9x6331t4QO6jKVyemHWJZVwL4jb7PvWHt6te3ODe5wLmc/
      iZfsf8eAAB4dNtlJt25oxf0jnyTxh48wFG3l7f9upXtQDD7FRUA6+7LSba/Z+iHuCL4+/h5A
      E0gANu2HPcK4fTNZH/8x/+vzNrd2tp0vGw+uYNkxMx69HmByPSZvs3Z9xZp08Og2mck3VW4f
      OGQKt2z9Cz8cW8mKg+HVtl8x/VD+8sodtKihEGS1WvFwZslJOJk3PjP+aasFY8V64Tcs9nv8
      uA0ZjVvbtmg8qw8XtEOm0XrINNsXVhPW8+cpyTNTgha38Q+ibRuA0gCTTUrE82gini97XfVi
      BhQWAjqU/s+gtGxN9dGND25T9pR/mZ+Fmm8AqxYohPCJthVBng5Cgmd/NI/vqf58g/Jh1LDF
      jALAQo7xN7ILTBQDXqFjeUTfFn2t8wOOjzlh3DdMqKWFRn8zf7/7ZgCMxlTScy+QVwyengHc
      O7gDAR5NJmQ6RRN6Nx5EDu3F+mWJ7NyWzK2dbwKsJO44AEB0bI96HMNMgn30bz62jNdfX4/Z
      XL7Nww+M9qu2nHoW4KnD20ODh0wtXwc0aNp0QNPmcnfzRBPU4dr/BGg8UVpdwYjbpzWKT81z
      CE2LlgB9CAHX+Axarw8hXH99XPFbk8afA6igda8htAWMCTtItwLmE+w8ZgZ6EdW5HjNoBSfY
      m17+pdFoxGwu/WfGeL5CUe/Yzoa5JkAIIZqJJnQGAHh3IaabByuPHWP/aTMBpgTSAf3QgdTn
      Jgqlk7+E3s7bfxqGh7V6tVKjMbL2b28Sdz6dbb8a6OysMpAQQjQzTeoMADT0urkPAEl7drBt
      l+2PbQwd2KW2nezKyz+R0TfhDWg0mmr/wJ++g213B0zYekQu4BJCuKwmlgBA330wocD5XWtY
      n2gEj4H0b1+PGVRjafmnPQN71D6qb39TlO2+Hyk7OeGoDHS56/pzC+Q6ACFEs9O0SkAAmhCi
      I/WkJNjuDNQ+dkD1C8McyCwr//SjS13TBf49iG4LcefT2XU4i279yifDigCMcbz+bJzDXT26
      3c0b04fYEkjp6YN5F68/u8th+1Jth07n5btquLpQCCEaQaOdAWi9bNfRtfKpPrrvMWSQ/ZGe
      oQM6VtuuKb1QvML9TX47abtQJTL6pnqsxNDTd7AtGP92uuJfG9LWeXWfOSO7/EI0Td3tS93Q
      /vpYNyyEuH402h+EEUII0bia3ByAEEKIa0MSgBBCuChJAEII4aIkAQghhIuSBCCEEC5KEoAQ
      QrgoSQBCCOGiJAEIIYSLkgQghBAuShKAEEK4KEkAQgjhoiQBCCGEi5IEIIQQLkoSgBBCuChJ
      AEII4aL+HwtnNysPAk8gAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Scatter Plot' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
